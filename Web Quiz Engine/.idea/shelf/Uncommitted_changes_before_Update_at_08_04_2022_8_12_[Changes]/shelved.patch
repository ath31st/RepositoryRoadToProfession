Index: Web Quiz Engine/task/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>buildscript {\r\n    apply plugin: 'hyperskill'\r\n\r\n    repositories {\r\n        mavenCentral()\r\n    }\r\n    dependencies {\r\n        classpath \"org.springframework.boot:spring-boot-gradle-plugin:$hs.spring.bootVersion\"\r\n        classpath \"io.spring.gradle:dependency-management-plugin:$hs.spring.dependencyManagementVersion\"\r\n    }\r\n}\r\n\r\napply plugin: 'java'\r\napply plugin: 'org.springframework.boot'\r\napply plugin: 'io.spring.dependency-management'\r\n\r\nrepositories {\r\n    mavenCentral()\r\n}\r\n\r\nsourceSets.main.resources.srcDirs = [\"src/resources\"]\r\n\r\ndependencies {\r\n    implementation 'org.springframework.boot:spring-boot-starter'\r\n    implementation 'org.springframework.boot:spring-boot-starter-actuator'\r\n    implementation 'org.springframework.boot:spring-boot-starter-web'\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Web Quiz Engine/task/build.gradle b/Web Quiz Engine/task/build.gradle
--- a/Web Quiz Engine/task/build.gradle	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/Web Quiz Engine/task/build.gradle	(date 1649333963238)
@@ -24,4 +24,11 @@
     implementation 'org.springframework.boot:spring-boot-starter'
     implementation 'org.springframework.boot:spring-boot-starter-actuator'
     implementation 'org.springframework.boot:spring-boot-starter-web'
+    implementation 'org.springframework.boot:spring-boot-starter-validation'
+    implementation 'org.springframework.boot:spring-boot-starter-security'
+    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
+    runtimeOnly 'com.h2database:h2'
+    testImplementation('org.springframework.boot:spring-boot-starter-test') {
+        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
+    }
 }
\ No newline at end of file
Index: ../HyperMetro/HyperMetro/task/src/metro/command/handler/AddHeadCommandHandler.java
===================================================================
diff --git a/../HyperMetro/HyperMetro/task/src/metro/command/handler/AddHeadCommandHandler.java b/../HyperMetro/HyperMetro/task/src/metro/command/handler/AddHeadCommandHandler.java
deleted file mode 100644
--- a/../HyperMetro/HyperMetro/task/src/metro/command/handler/AddHeadCommandHandler.java	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ /dev/null	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
@@ -1,30 +0,0 @@
-package hypermetro.command.handler;
-
-import hypermetro.Lane;
-import hypermetro.command.CommandHandler;
-import hypermetro.command.CommandSyntax;
-import hypermetro.command.InvalidSyntaxException;
-
-import java.util.Map;
-import java.util.regex.Matcher;
-import java.util.regex.Pattern;
-
-public class AddHeadCommandHandler extends CommandHandler {
-
-    private static CommandHandler instance = new AddHeadCommandHandler();
-    public static CommandHandler getInstance() {
-        return instance;
-    }
-
-    private Pattern commandPattern = Pattern.compile(CommandSyntax.addHeadCommand, Pattern.CASE_INSENSITIVE);
-
-    @Override
-    public void executeCommand(Map<String, Lane> laneMap, String commandText) {
-        Matcher matcher = commandPattern.matcher(commandText);
-        if (!matcher.find()) throw new InvalidSyntaxException("Invalid Command!");
-
-        String laneName = sanitizeString(matcher.group("laneName"));
-        String stationName = sanitizeString(matcher.group("stationName"));
-        laneMap.get(laneName).addStart(stationName);
-    }
-}
Index: ../HyperMetro/HyperMetro/task/src/metro/Metro/Metro.java
===================================================================
diff --git a/../HyperMetro/HyperMetro/task/src/metro/Metro/Metro.java b/../HyperMetro/HyperMetro/task/src/metro/Metro/Metro.java
deleted file mode 100644
--- a/../HyperMetro/HyperMetro/task/src/metro/Metro/Metro.java	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ /dev/null	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
@@ -1,2 +0,0 @@
-package metro.Metro;public class Metro {
-}
Index: ../HyperMetro/HyperMetro/task/src/metro/Metro/Route.java
===================================================================
diff --git a/../HyperMetro/HyperMetro/task/src/metro/Metro/Route.java b/../HyperMetro/HyperMetro/task/src/metro/Metro/Route.java
deleted file mode 100644
--- a/../HyperMetro/HyperMetro/task/src/metro/Metro/Route.java	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ /dev/null	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
@@ -1,2 +0,0 @@
-package metro.Metro;public class Route {
-}
Index: ../HyperMetro/HyperMetro/task/src/metro/command/handler/AppendCommandHandler.java
===================================================================
diff --git a/../HyperMetro/HyperMetro/task/src/metro/command/handler/AppendCommandHandler.java b/../HyperMetro/HyperMetro/task/src/metro/command/handler/AppendCommandHandler.java
deleted file mode 100644
--- a/../HyperMetro/HyperMetro/task/src/metro/command/handler/AppendCommandHandler.java	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ /dev/null	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
@@ -1,30 +0,0 @@
-package hypermetro.command.handler;
-
-import hypermetro.Lane;
-import hypermetro.command.CommandHandler;
-import hypermetro.command.CommandSyntax;
-import hypermetro.command.InvalidSyntaxException;
-
-import java.util.Map;
-import java.util.regex.Matcher;
-import java.util.regex.Pattern;
-
-public class AppendCommandHandler extends CommandHandler {
-
-    private static CommandHandler instance = new AppendCommandHandler();
-    public static CommandHandler getInstance() {
-        return instance;
-    }
-
-    private Pattern commandPattern = Pattern.compile(CommandSyntax.appendCommand, Pattern.CASE_INSENSITIVE);
-
-    @Override
-    public void executeCommand(Map<String, Lane> laneMap, String commandText) {
-        Matcher matcher = commandPattern.matcher(commandText);
-        if (!matcher.find()) throw new InvalidSyntaxException("Invalid Command!");
-
-        String laneName = sanitizeString(matcher.group("laneName"));
-        String stationName = sanitizeString(matcher.group("stationName"));
-        laneMap.get(laneName).addEnd(stationName);
-    }
-}
Index: ../HyperMetro/HyperMetro/task/src/metro/Metro/TransferStation.java
===================================================================
diff --git a/../HyperMetro/HyperMetro/task/src/metro/Metro/TransferStation.java b/../HyperMetro/HyperMetro/task/src/metro/Metro/TransferStation.java
deleted file mode 100644
--- a/../HyperMetro/HyperMetro/task/src/metro/Metro/TransferStation.java	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ /dev/null	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
@@ -1,2 +0,0 @@
-package metro.Metro;public class TransferStation {
-}
Index: ../HyperMetro/HyperMetro/task/src/metro/Graph/WeightedEdge.java
===================================================================
diff --git a/../HyperMetro/HyperMetro/task/src/metro/Graph/WeightedEdge.java b/../HyperMetro/HyperMetro/task/src/metro/Graph/WeightedEdge.java
deleted file mode 100644
--- a/../HyperMetro/HyperMetro/task/src/metro/Graph/WeightedEdge.java	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ /dev/null	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
@@ -1,2 +0,0 @@
-package metro.Graph;public class WeightedEdge {
-}
Index: ../HyperMetro/HyperMetro/task/src/metro/command/handler/OutputCommandHandler.java
===================================================================
diff --git a/../HyperMetro/HyperMetro/task/src/metro/command/handler/OutputCommandHandler.java b/../HyperMetro/HyperMetro/task/src/metro/command/handler/OutputCommandHandler.java
deleted file mode 100644
--- a/../HyperMetro/HyperMetro/task/src/metro/command/handler/OutputCommandHandler.java	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ /dev/null	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
@@ -1,75 +0,0 @@
-package hypermetro.command.handler;
-
-import hypermetro.Lane;
-import hypermetro.Station;
-import hypermetro.command.CommandHandler;
-import hypermetro.command.CommandSyntax;
-import hypermetro.command.InvalidSyntaxException;
-
-import java.util.List;
-import java.util.Map;
-import java.util.regex.Matcher;
-import java.util.regex.Pattern;
-
-public class OutputCommandHandler extends CommandHandler {
-    static Pattern commandPattern = Pattern.compile(CommandSyntax.outputCommand, Pattern.CASE_INSENSITIVE);
-
-    private static CommandHandler instance = new OutputCommandHandler();
-
-    public static CommandHandler getInstance() {
-        return instance;
-    }
-
-    @Override
-    public void executeCommand(Map<String, Lane> laneMap, String commandText) {
-        Matcher matcher = commandPattern.matcher(commandText);
-        if (!matcher.find()) throw new InvalidSyntaxException("Invalid Command!");
-
-        String laneName = sanitizeString(matcher.group("laneName"));
-        printLaneWithoutTransfers(laneMap.get(laneName));
-    }
-
-    private static void printLaneWithoutTransfers(Lane lane) {
-        if (lane == null) return;
-
-        String prevStationString = "depot";
-        String nextStationString;
-
-        Station currStation = lane.getStart();
-
-        while (currStation != null) {
-            String currStationString = currStation.getName();
-            Station nextStation = currStation.getNextStation();
-
-            if (nextStation == null) nextStationString = "depot";
-            else nextStationString = nextStation.getName();
-
-            System.out.println(String.format("%s - %s - %s", prevStationString, currStationString, nextStationString));
-
-            prevStationString = currStationString;
-            currStation = nextStation;
-        }
-
-    }
-
-    private static void printLaneWithTransfers(Lane lane) {
-        if (lane == null) return;
-        System.out.println("depot");
-        Station curr = lane.getStart();
-        while (curr != null) {
-            printStation(curr.getTransfer(), curr.getName());
-            curr = curr.getNextStation();
-        }
-        System.out.println("depot");
-    }
-
-    private static void printStation(Map<String, List<Station>> transfer, String currStation) {
-        if (transfer == null) {
-            System.out.println(currStation);
-            return;
-        }
-        for (Map.Entry<String, List<Station>> lane : transfer.entrySet()) {
-            lane.getValue().forEach(station -> System.out.println(String.format("%s - %s (%s line)", currStation, station.getName(), lane.getKey())));
-        }
-    }
-}
\ No newline at end of file
Index: ../HyperMetro/HyperMetro/task/src/metro/Graph/Distance.java
===================================================================
diff --git a/../HyperMetro/HyperMetro/task/src/metro/Graph/Distance.java b/../HyperMetro/HyperMetro/task/src/metro/Graph/Distance.java
deleted file mode 100644
--- a/../HyperMetro/HyperMetro/task/src/metro/Graph/Distance.java	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ /dev/null	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
@@ -1,2 +0,0 @@
-package metro.Graph;public class Distance {
-}
Index: ../HyperMetro/HyperMetro/task/src/metro/command/handler/RemoveCommandHandler.java
===================================================================
diff --git a/../HyperMetro/HyperMetro/task/src/metro/command/handler/RemoveCommandHandler.java b/../HyperMetro/HyperMetro/task/src/metro/command/handler/RemoveCommandHandler.java
deleted file mode 100644
--- a/../HyperMetro/HyperMetro/task/src/metro/command/handler/RemoveCommandHandler.java	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ /dev/null	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
@@ -1,32 +0,0 @@
-package hypermetro.command.handler;
-
-import hypermetro.Lane;
-import hypermetro.command.CommandHandler;
-import hypermetro.command.CommandSyntax;
-import hypermetro.command.InvalidSyntaxException;
-
-import java.util.Map;
-import java.util.regex.Matcher;
-import java.util.regex.Pattern;
-
-public class RemoveCommandHandler extends CommandHandler {
-
-    private static CommandHandler instance = new RemoveCommandHandler();
-    public static CommandHandler getInstance() {
-        return instance;
-    }
-
-    private Pattern commandPattern = Pattern.compile(CommandSyntax.removeCommand);
-
-    @Override
-    public void executeCommand(Map<String, Lane> laneMap, String commandText) {
-        Matcher matcher = commandPattern.matcher(commandText);
-        if (!matcher.find()) throw new InvalidSyntaxException("Invalid Command!");
-
-        String laneName = sanitizeString(matcher.group("laneName"));
-        String stationName = sanitizeString(matcher.group("stationName"));
-
-        Lane lane = laneMap.get(laneName);
-        lane.remove(lane.findStation(stationName));
-    }
-}
Index: ../HyperMetro/HyperMetro/task/src/metro/Graph/Graph.java
===================================================================
diff --git a/../HyperMetro/HyperMetro/task/src/metro/Graph/Graph.java b/../HyperMetro/HyperMetro/task/src/metro/Graph/Graph.java
deleted file mode 100644
--- a/../HyperMetro/HyperMetro/task/src/metro/Graph/Graph.java	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ /dev/null	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
@@ -1,2 +0,0 @@
-package metro.Graph;public class Graph {
-}
Index: Web Quiz Engine/task/src/engine/Answer.java
===================================================================
diff --git a/Web Quiz Engine/task/src/engine/Answer.java b/Web Quiz Engine/task/src/engine/Answer.java
deleted file mode 100644
--- a/Web Quiz Engine/task/src/engine/Answer.java	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ /dev/null	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
@@ -1,28 +0,0 @@
-package engine;
-
-
-public class Answer {
-    private boolean success;
-    private String feedback;
-
-    public Answer(boolean success, String feedback) {
-        this.success = success;
-        this.feedback = feedback;
-    }
-
-    public boolean getSuccess() {
-        return success;
-    }
-
-    public void setSuccess(boolean success) {
-        this.success = success;
-    }
-
-    public String getFeedback() {
-        return feedback;
-    }
-
-    public void setFeedback(String feedback) {
-        this.feedback = feedback;
-    }
-}
Index: ../HyperMetro/HyperMetro/task/src/metro/Metro/Station.java
===================================================================
diff --git a/../HyperMetro/HyperMetro/task/src/metro/Metro/Station.java b/../HyperMetro/HyperMetro/task/src/metro/Metro/Station.java
deleted file mode 100644
--- a/../HyperMetro/HyperMetro/task/src/metro/Metro/Station.java	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ /dev/null	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
@@ -1,2 +0,0 @@
-package metro.Metro;public class Station {
-}
Index: ../HyperMetro/HyperMetro/task/src/metro/Metro/MetroLine.java
===================================================================
diff --git a/../HyperMetro/HyperMetro/task/src/metro/Metro/MetroLine.java b/../HyperMetro/HyperMetro/task/src/metro/Metro/MetroLine.java
deleted file mode 100644
--- a/../HyperMetro/HyperMetro/task/src/metro/Metro/MetroLine.java	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ /dev/null	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
@@ -1,2 +0,0 @@
-package metro.Metro;public class MetroLine {
-}
Index: ../HyperMetro/HyperMetro/task/src/metro/command/handler/RouteCommandHandler.java
===================================================================
diff --git a/../HyperMetro/HyperMetro/task/src/metro/command/handler/RouteCommandHandler.java b/../HyperMetro/HyperMetro/task/src/metro/command/handler/RouteCommandHandler.java
deleted file mode 100644
--- a/../HyperMetro/HyperMetro/task/src/metro/command/handler/RouteCommandHandler.java	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ /dev/null	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
@@ -1,138 +0,0 @@
-package hypermetro.command.handler;
-
-import hypermetro.Lane;
-import hypermetro.Station;
-import hypermetro.command.CommandHandler;
-import hypermetro.command.CommandSyntax;
-import hypermetro.command.InvalidSyntaxException;
-
-import java.time.temporal.JulianFields;
-import java.util.*;
-import java.util.regex.Matcher;
-import java.util.regex.Pattern;
-
-public class RouteCommandHandler extends CommandHandler {
-
-    private static CommandHandler instance = new RouteCommandHandler();
-
-    public static CommandHandler getInstance() { return instance; }
-
-    Pattern commandPattern = Pattern.compile(CommandSyntax.routeCommand);
-
-    @Override
-    public void executeCommand(Map<String, Lane> laneMap, String commandText) {
-        Matcher matcher = commandPattern.matcher(commandText);
-        if (!matcher.find()) throw new InvalidSyntaxException("Invalid command");
-
-        String fromLaneString = sanitizeString(matcher.group("fromLane"));
-        String fromStationString = sanitizeString(matcher.group("fromStation"));
-        String toLaneString = sanitizeString(matcher.group("toLane"));
-        String toStationString = sanitizeString(matcher.group("toStation"));
-
-        Lane fromLane = laneMap.get(fromLaneString);
-        Lane toLane = laneMap.get(toLaneString);
-
-        Station fromStation = fromLane.findStation(fromStationString);
-        Station toStation = toLane.findStation(toStationString);
-
-        List<String> path = findShortestRoute(fromLaneString, fromStation, toLaneString, toStation);
-        path.forEach(System.out::println);
-    }
-
-    private List<String> findShortestRoute(String fromLane, Station fromStation, String toLane, Station toStation ) {
-
-        Queue<Journey> queue = new LinkedList<>();
-        Map<Station, Journey> map = new HashMap<>();
-
-        Journey journey = new Journey(null, fromStation, fromLane);
-        queue.add(journey);
-        map.put(fromStation, journey);
-
-        while (!queue.isEmpty()) {
-            Journey currJourney = queue.poll();
-            String currLane = currJourney.getCurrLane();
-            Station currStation = currJourney.getCurrStation();
-
-            if (currLane.equals(toLane) && currStation.equals(toStation)) {
-               return backTrackPath(map, currJourney);
-            }
-
-            addNeighbours(currStation, currLane, queue, map);
-        }
-        return null;
-    }
-
-    private void addNeighbours(Station currStation, String lane, Queue<Journey> queue, Map<Station, Journey> map) {
-        Station prevStation = currStation.getPrevStation();
-        Station nextStation = currStation.getNextStation();
-        Map<String, List<Station>> transfers = currStation.getTransfer();
-
-        if (transfers != null) {
-            for (var transfer : transfers.entrySet()) {
-                transfer.getValue().forEach(station -> addToMapIfAbsent(map, currStation, station, transfer.getKey(), queue));
-            }
-        }
-
-        addToMapIfAbsent(map, currStation, prevStation, lane, queue);
-        addToMapIfAbsent(map, currStation, nextStation, lane, queue);
-    }
-
-    private List<String> backTrackPath(Map<Station, Journey> map, Journey journey) {
-
-        LinkedList<String> path = new LinkedList<>();
-
-        while (true) {
-
-            Station currStation = journey.getCurrStation();
-            String currLane = journey.getCurrLane();
-
-            Station prevStation = journey.getPreviousStation();
-            path.addFirst(currStation.getName());
-
-            if (prevStation == null) {
-                break;
-            }
-
-            Journey prevJourney = map.getOrDefault(prevStation, null);
-            String prevLane = prevJourney.getCurrLane();
-
-            if (!prevLane.equals(currLane)) path.addFirst(String.format("Transition to line %s", currLane));
-
-            journey = prevJourney;
-        }
-        return path;
-    }
-
-    private void addToMapIfAbsent(Map<Station, Journey> map, Station prevStation, Station currStation, String currLane, Queue<Journey> queue) {
-        if (map.containsKey(currStation)) return;
-        Journey journey = new Journey(prevStation, currStation, currLane);
-        map.put(currStation, journey);
-        queue.add(journey);
-    }
-
-}
-
-class Journey {
-
-    private Station previousStation;
-    private Station currStation;
-    private String currLane;
-
-    public Journey(Station previousStation, Station currStation, String currLane) {
-        this.previousStation = previousStation;
-        this.currStation = currStation;
-        this.currLane = currLane;
-    }
-
-    public Station getPreviousStation() {
-        return previousStation;
-    }
-
-    public Station getCurrStation() {
-        return currStation;
-    }
-
-    public String getCurrLane() {
-        return currLane;
-    }
-}
\ No newline at end of file
Index: ../HyperMetro/HyperMetro/task/src/metro/command/handler/ConnectCommandHandler.java
===================================================================
diff --git a/../HyperMetro/HyperMetro/task/src/metro/command/handler/ConnectCommandHandler.java b/../HyperMetro/HyperMetro/task/src/metro/command/handler/ConnectCommandHandler.java
deleted file mode 100644
--- a/../HyperMetro/HyperMetro/task/src/metro/command/handler/ConnectCommandHandler.java	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ /dev/null	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
@@ -1,43 +0,0 @@
-package hypermetro.command.handler;
-
-import hypermetro.Lane;
-import hypermetro.Station;
-import hypermetro.command.CommandHandler;
-import hypermetro.command.CommandSyntax;
-import hypermetro.command.InvalidSyntaxException;
-
-import java.util.Map;
-import java.util.regex.Matcher;
-import java.util.regex.Pattern;
-
-public class ConnectCommandHandler extends CommandHandler {
-
-    private static CommandHandler instance = new ConnectCommandHandler();
-    public static CommandHandler getInstance() {
-        return instance;
-    }
-
-    private static Pattern commandPattern = Pattern.compile(CommandSyntax.connectCommand);
-
-    @Override
-    public void executeCommand(Map<String, Lane> laneMap, String commandText) {
-        Matcher matcher = commandPattern.matcher(commandText);
-
-        if (!matcher.find()) throw new InvalidSyntaxException("Invalid Command!");
-        String fromLaneString =  sanitizeString(matcher.group("lane1"));
-        String toLaneString = sanitizeString(matcher.group("lane2"));
-        String fromStationString = sanitizeString(matcher.group("station1"));
-        String toStationString = sanitizeString(matcher.group("station2"));
-
-        Lane fromLane = laneMap.get(fromLaneString);
-        Lane toLane = laneMap.get(toLaneString);
-
-        if (fromLane == null || toLane == null) throw new IllegalArgumentException("Lane not found!");
-
-        Station fromStation = fromLane.findStation(fromStationString);
-        Station toStation = toLane.findStation(toStationString);
-
-        fromStation.addTransfer(toLaneString, toStation);
-        toStation.addTransfer(fromLaneString, fromStation);
-    }
-}
Index: ../HyperMetro/.idea/libraries/Gradle__com_google_code_gson_gson_2_8_5.xml
===================================================================
diff --git a/../HyperMetro/.idea/libraries/Gradle__com_google_code_gson_gson_2_8_5.xml b/../HyperMetro/.idea/libraries/Gradle__com_google_code_gson_gson_2_8_5.xml
deleted file mode 100644
--- a/../HyperMetro/.idea/libraries/Gradle__com_google_code_gson_gson_2_8_5.xml	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ /dev/null	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
@@ -1,11 +0,0 @@
-<component name="libraryTable">
-  <library name="Gradle: com.google.code.gson:gson:2.8.5">
-    <CLASSES>
-      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.google.code.gson/gson/2.8.5/f645ed69d595b24d4cf8b3fbb64cc505bede8829/gson-2.8.5.jar!/" />
-    </CLASSES>
-    <JAVADOC />
-    <SOURCES>
-      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.google.code.gson/gson/2.8.5/c5b4c491aecb72e7c32a78da0b5c6b9cda8dee0f/gson-2.8.5-sources.jar!/" />
-    </SOURCES>
-  </library>
-</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__jakarta_persistence_jakarta_persistence_api_2_2_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__jakarta_persistence_jakarta_persistence_api_2_2_3.xml b/.idea/libraries/Gradle__jakarta_persistence_jakarta_persistence_api_2_2_3.xml
new file mode 100644
--- /dev/null	(date 1648813961523)
+++ b/.idea/libraries/Gradle__jakarta_persistence_jakarta_persistence_api_2_2_3.xml	(date 1648813961523)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: jakarta.persistence:jakarta.persistence-api:2.2.3">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/jakarta.persistence/jakarta.persistence-api/2.2.3/8f6ea5daedc614f07a3654a455660145286f024e/jakarta.persistence-api-2.2.3.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/jakarta.persistence/jakarta.persistence-api/2.2.3/f9671636b64baca8130e3fcf516894d40173b47f/jakarta.persistence-api-2.2.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__jakarta_activation_jakarta_activation_api_1_2_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__jakarta_activation_jakarta_activation_api_1_2_2.xml b/.idea/libraries/Gradle__jakarta_activation_jakarta_activation_api_1_2_2.xml
new file mode 100644
--- /dev/null	(date 1648813961517)
+++ b/.idea/libraries/Gradle__jakarta_activation_jakarta_activation_api_1_2_2.xml	(date 1648813961517)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: jakarta.activation:jakarta.activation-api:1.2.2">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/jakarta.activation/jakarta.activation-api/1.2.2/99f53adba383cb1bf7c3862844488574b559621f/jakarta.activation-api-1.2.2.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/jakarta.activation/jakarta.activation-api/1.2.2/c45b5962230be8a5f93759203870c98917bb8b31/jakarta.activation-api-1.2.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__jakarta_xml_bind_jakarta_xml_bind_api_2_3_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__jakarta_xml_bind_jakarta_xml_bind_api_2_3_3.xml b/.idea/libraries/Gradle__jakarta_xml_bind_jakarta_xml_bind_api_2_3_3.xml
new file mode 100644
--- /dev/null	(date 1648813961534)
+++ b/.idea/libraries/Gradle__jakarta_xml_bind_jakarta_xml_bind_api_2_3_3.xml	(date 1648813961534)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: jakarta.xml.bind:jakarta.xml.bind-api:2.3.3">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/jakarta.xml.bind/jakarta.xml.bind-api/2.3.3/48e3b9cfc10752fba3521d6511f4165bea951801/jakarta.xml.bind-api-2.3.3.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/jakarta.xml.bind/jakarta.xml.bind-api/2.3.3/d83744bae211a4072c39f007000a13f501a88395/jakarta.xml.bind-api-2.3.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__jakarta_transaction_jakarta_transaction_api_1_3_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__jakarta_transaction_jakarta_transaction_api_1_3_3.xml b/.idea/libraries/Gradle__jakarta_transaction_jakarta_transaction_api_1_3_3.xml
new file mode 100644
--- /dev/null	(date 1648813961528)
+++ b/.idea/libraries/Gradle__jakarta_transaction_jakarta_transaction_api_1_3_3.xml	(date 1648813961528)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: jakarta.transaction:jakarta.transaction-api:1.3.3">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/jakarta.transaction/jakarta.transaction-api/1.3.3/c4179d48720a1e87202115fbed6089bdc4195405/jakarta.transaction-api-1.3.3.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/jakarta.transaction/jakarta.transaction-api/1.3.3/4ea5dba7d38f64e274bd3b0f0314383f009583ec/jakarta.transaction-api-1.3.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__com_sun_istack_istack_commons_runtime_3_0_12.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__com_sun_istack_istack_commons_runtime_3_0_12.xml b/.idea/libraries/Gradle__com_sun_istack_istack_commons_runtime_3_0_12.xml
new file mode 100644
--- /dev/null	(date 1648813961497)
+++ b/.idea/libraries/Gradle__com_sun_istack_istack_commons_runtime_3_0_12.xml	(date 1648813961497)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: com.sun.istack:istack-commons-runtime:3.0.12">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.sun.istack/istack-commons-runtime/3.0.12/cbbe1a62b0cc6c85972e99d52aaee350153dc530/istack-commons-runtime-3.0.12.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.sun.istack/istack-commons-runtime/3.0.12/472b862e0850fddfd912b7de2fd52139c91a8b6f/istack-commons-runtime-3.0.12-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: Web Quiz Engine/task/build/reports/tests/test/classes/tests.WebQuizEngineTest.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\r\n<meta http-equiv=\"x-ua-compatible\" content=\"IE=edge\"/>\r\n<title>Test results - Class tests.WebQuizEngineTest</title>\r\n<link href=\"../css/base-style.css\" rel=\"stylesheet\" type=\"text/css\"/>\r\n<link href=\"../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/>\r\n<script src=\"../js/report.js\" type=\"text/javascript\"></script>\r\n</head>\r\n<body>\r\n<div id=\"content\">\r\n<h1>Class tests.WebQuizEngineTest</h1>\r\n<div class=\"breadcrumbs\">\r\n<a href=\"../index.html\">all</a> &gt; \r\n<a href=\"../packages/tests.html\">tests</a> &gt; WebQuizEngineTest</div>\r\n<div id=\"summary\">\r\n<table>\r\n<tr>\r\n<td>\r\n<div class=\"summaryGroup\">\r\n<table>\r\n<tr>\r\n<td>\r\n<div class=\"infoBox\" id=\"tests\">\r\n<div class=\"counter\">1</div>\r\n<p>tests</p>\r\n</div>\r\n</td>\r\n<td>\r\n<div class=\"infoBox\" id=\"failures\">\r\n<div class=\"counter\">0</div>\r\n<p>failures</p>\r\n</div>\r\n</td>\r\n<td>\r\n<div class=\"infoBox\" id=\"ignored\">\r\n<div class=\"counter\">0</div>\r\n<p>ignored</p>\r\n</div>\r\n</td>\r\n<td>\r\n<div class=\"infoBox\" id=\"duration\">\r\n<div class=\"counter\">2.986s</div>\r\n<p>duration</p>\r\n</div>\r\n</td>\r\n</tr>\r\n</table>\r\n</div>\r\n</td>\r\n<td>\r\n<div class=\"infoBox success\" id=\"successRate\">\r\n<div class=\"percent\">100%</div>\r\n<p>successful</p>\r\n</div>\r\n</td>\r\n</tr>\r\n</table>\r\n</div>\r\n<div id=\"tabs\">\r\n<ul class=\"tabLinks\">\r\n<li>\r\n<a href=\"#tab0\">Tests</a>\r\n</li>\r\n<li>\r\n<a href=\"#tab1\">Standard output</a>\r\n</li>\r\n</ul>\r\n<div id=\"tab0\" class=\"tab\">\r\n<h2>Tests</h2>\r\n<table>\r\n<thead>\r\n<tr>\r\n<th>Test</th>\r\n<th>Duration</th>\r\n<th>Result</th>\r\n</tr>\r\n</thead>\r\n<tr>\r\n<td class=\"success\">start</td>\r\n<td class=\"success\">2.986s</td>\r\n<td class=\"success\">passed</td>\r\n</tr>\r\n</table>\r\n</div>\r\n<div id=\"tab1\" class=\"tab\">\r\n<h2>Standard output</h2>\r\n<span class=\"code\">\r\n<pre>?[1;31m\r\nStart test 1?[0m\r\n\r\n  .   ____          _            __ _ _\r\n /\\\\ / ___'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\r\n( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\\r\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\r\n  '  |____| .__|_| |_|_| |_\\__, | / / / /\r\n =========|_|==============|___/=/_/_/_/\r\n :: Spring Boot ::                (v2.5.6)\r\n\r\n2022-03-31 14:45:43.485  INFO 12648 --- [    Test worker] engine.WebQuizEngine                     : Starting WebQuizEngine using Java 17.0.1 on Fractal with PID 12648 (started by Fractal in D:\\RepositoryRoadToProfession\\Web Quiz Engine\\Web Quiz Engine\\task)\r\n2022-03-31 14:45:43.489  INFO 12648 --- [    Test worker] engine.WebQuizEngine                     : No active profile set, falling back to default profiles: default\r\n2022-03-31 14:45:44.628  INFO 12648 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8889 (http)\r\n2022-03-31 14:45:44.639  INFO 12648 --- [    Test worker] o.apache.catalina.core.StandardService   : Starting service [Tomcat]\r\n2022-03-31 14:45:44.639  INFO 12648 --- [    Test worker] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.54]\r\n2022-03-31 14:45:44.726  INFO 12648 --- [    Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext\r\n2022-03-31 14:45:44.726  INFO 12648 --- [    Test worker] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1190 ms\r\n2022-03-31 14:45:45.335  INFO 12648 --- [    Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 14 endpoint(s) beneath base path '/actuator'\r\n2022-03-31 14:45:45.369  INFO 12648 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8889 (http) with context path ''\r\n2022-03-31 14:45:45.382  INFO 12648 --- [    Test worker] engine.WebQuizEngine                     : Started WebQuizEngine in 2.231 seconds (JVM running for 2.889)\r\n2022-03-31 14:45:45.649  INFO 12648 --- [nio-8889-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'\r\n2022-03-31 14:45:45.649  INFO 12648 --- [nio-8889-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'\r\n2022-03-31 14:45:45.650  INFO 12648 --- [nio-8889-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms\r\n?[1;31m\r\nStart test 2?[0m\r\n?[1;31m\r\nStart test 3?[0m\r\n?[1;31m\r\nStart test 4?[0m\r\n?[1;31m\r\nStart test 5?[0m\r\n?[1;31m\r\nStart test 6?[0m\r\n?[1;31m\r\nStart test 7?[0m\r\n?[1;31m\r\nStart test 8?[0m\r\n?[1;31m\r\nStart test 9?[0m\r\n?[1;31m\r\nStart test 10?[0m\r\n?[1;31m\r\nStart test 11?[0m\r\n?[1;31m\r\nStart test 12?[0m\r\n?[1;31m\r\nStart test 13?[0m\r\n?[1;31m\r\nStart test 14?[0m\r\n?[1;31m\r\nStart test 15?[0m\r\n?[1;31m\r\nStart test 16?[0m\r\n?[1;31m\r\nStart test 17?[0m\r\n</pre>\r\n</span>\r\n</div>\r\n</div>\r\n<div id=\"footer\">\r\n<p>\r\n<div>\r\n<label class=\"hidden\" id=\"label-for-line-wrapping-toggle\" for=\"line-wrapping-toggle\">Wrap lines\r\n<input id=\"line-wrapping-toggle\" type=\"checkbox\" autocomplete=\"off\"/>\r\n</label>\r\n</div>Generated by \r\n<a href=\"http://www.gradle.org\">Gradle 7.3.3</a> at 31 мар. 2022 г., 14:45:46</p>\r\n</div>\r\n</div>\r\n</body>\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Web Quiz Engine/task/build/reports/tests/test/classes/tests.WebQuizEngineTest.html b/Web Quiz Engine/task/build/reports/tests/test/classes/tests.WebQuizEngineTest.html
--- a/Web Quiz Engine/task/build/reports/tests/test/classes/tests.WebQuizEngineTest.html	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/Web Quiz Engine/task/build/reports/tests/test/classes/tests.WebQuizEngineTest.html	(date 1649357821638)
@@ -29,7 +29,7 @@
 </td>
 <td>
 <div class="infoBox" id="failures">
-<div class="counter">0</div>
+<div class="counter">1</div>
 <p>failures</p>
 </div>
 </td>
@@ -41,7 +41,7 @@
 </td>
 <td>
 <div class="infoBox" id="duration">
-<div class="counter">2.986s</div>
+<div class="counter">7.040s</div>
 <p>duration</p>
 </div>
 </td>
@@ -50,8 +50,8 @@
 </div>
 </td>
 <td>
-<div class="infoBox success" id="successRate">
-<div class="percent">100%</div>
+<div class="infoBox failures" id="successRate">
+<div class="percent">0%</div>
 <p>successful</p>
 </div>
 </td>
@@ -61,13 +61,122 @@
 <div id="tabs">
 <ul class="tabLinks">
 <li>
-<a href="#tab0">Tests</a>
+<a href="#tab0">Failed tests</a>
 </li>
 <li>
-<a href="#tab1">Standard output</a>
+<a href="#tab1">Tests</a>
+</li>
+<li>
+<a href="#tab2">Standard output</a>
 </li>
 </ul>
 <div id="tab0" class="tab">
+<h2>Failed tests</h2>
+<div class="test">
+<a name="start"></a>
+<h3 class="failures">start</h3>
+<span class="code">
+<pre>java.lang.AssertionError: Wrong answer in test #18
+
+GET /api/quizzes should respond with status code 401, responded: 200
+
+Response body:
+
+[{&quot;id&quot;:3,&quot;title&quot;:&quot;The Java Logo&quot;,&quot;text&quot;:&quot;What is depicted on the Java logo?&quot;,&quot;options&quot;:[&quot;Robot&quot;,&quot;Tea leaf&quot;,&quot;Cup of coffee&quot;,&quot;Bug&quot;]},{&quot;id&quot;:4,&quot;title&quot;:&quot;The Ultimate Question&quot;,&quot;text&quot;:&quot;What is the answer to the Ultimate Question of Life, the Universe and Everything?&quot;,&quot;options&quot;:[&quot;Everything goes right&quot;,&quot;42&quot;,&quot;2+2=4&quot;,&quot;11011100&quot;]}]
+
+Please find below the output of your program during this failed test.
+
+---
+
+.   ____          _            __ _ _
+ /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
+( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
+ \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
+  '  |____| .__|_| |_|_| |_\__, | / / / /
+ =========|_|==============|___/=/_/_/_/
+ :: Spring Boot ::                (v2.5.6)
+
+2022-04-07 21:56:54.909  INFO 14648 --- [    Test worker] engine.WebQuizEngine                     : Starting WebQuizEngine using Java 17.0.1 on Fractal with PID 14648 (started by Fractal in D:\RepositoryRoadToProfession\Web Quiz Engine\Web Quiz Engine\task)
+2022-04-07 21:56:54.913  INFO 14648 --- [    Test worker] engine.WebQuizEngine                     : No active profile set, falling back to default profiles: default
+2022-04-07 21:56:55.939  INFO 14648 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
+2022-04-07 21:56:55.996  INFO 14648 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 46 ms. Found 2 JPA repository interfaces.
+2022-04-07 21:56:56.656  INFO 14648 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8889 (http)
+2022-04-07 21:56:56.667  INFO 14648 --- [    Test worker] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
+2022-04-07 21:56:56.668  INFO 14648 --- [    Test worker] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.54]
+2022-04-07 21:56:56.786  INFO 14648 --- [    Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
+2022-04-07 21:56:56.787  INFO 14648 --- [    Test worker] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1823 ms
+2022-04-07 21:56:56.919  INFO 14648 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
+2022-04-07 21:56:57.131  INFO 14648 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
+2022-04-07 21:56:57.153  INFO 14648 --- [    Test worker] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:file:../quizdb'
+2022-04-07 21:56:57.323  INFO 14648 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
+2022-04-07 21:56:57.390  INFO 14648 --- [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.4.32.Final
+2022-04-07 21:56:57.576  INFO 14648 --- [    Test worker] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
+2022-04-07 21:56:57.712  INFO 14648 --- [    Test worker] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
+2022-04-07 21:56:58.362  INFO 14648 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
+2022-04-07 21:56:58.373  INFO 14648 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
+2022-04-07 21:56:58.747  WARN 14648 --- [    Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
+2022-04-07 21:56:59.234  INFO 14648 --- [    Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 14 endpoint(s) beneath base path '/actuator'
+2022-04-07 21:56:59.290  INFO 14648 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@726dd367, org.springframework.security.web.context.SecurityContextPersistenceFilter@247415be, org.springframework.security.web.header.HeaderWriterFilter@73a88711, org.springframework.security.web.authentication.logout.LogoutFilter@42d96745, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@1a1dd8eb, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@43735ea0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@68a7f77a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@433362e0, org.springframework.security.web.session.SessionManagementFilter@28b47211, org.springframework.security.web.access.ExceptionTranslationFilter@d62feaf, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@70ca8e72]
+2022-04-07 21:56:59.550  INFO 14648 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8889 (http) with context path ''
+2022-04-07 21:56:59.563  INFO 14648 --- [    Test worker] engine.WebQuizEngine                     : Started WebQuizEngine in 5.023 seconds (JVM running for 5.792)
+2022-04-07 21:56:59.862  INFO 14648 --- [nio-8889-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
+2022-04-07 21:56:59.862  INFO 14648 --- [nio-8889-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
+2022-04-07 21:56:59.864  INFO 14648 --- [nio-8889-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
+2022-04-07 21:57:00.367  WARN 14648 --- [nio-8889-exec-3] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public engine.businesslayer.User engine.presentation.UserController.registrationNewUser(engine.businesslayer.User): [Field error in object 'user' on field 'username': rejected value [google.com]; codes [Email.user.username,Email.username,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [user.username,username]; arguments []; default message [username],[Ljavax.validation.constraints.Pattern$Flag;@7cbce404,^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$]; default message [must be a well-formed email address]] ]
+2022-04-07 21:57:00.401  WARN 14648 --- [nio-8889-exec-5] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public engine.businesslayer.User engine.presentation.UserController.registrationNewUser(engine.businesslayer.User): [Field error in object 'user' on field 'username': rejected value [well@googlecom]; codes [Email.user.username,Email.username,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [user.username,username]; arguments []; default message [username],[Ljavax.validation.constraints.Pattern$Flag;@7cbce404,^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$]; default message [must be a well-formed email address]] ]
+2022-04-07 21:57:00.429  WARN 14648 --- [nio-8889-exec-7] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public engine.businesslayer.User engine.presentation.UserController.registrationNewUser(engine.businesslayer.User): [Field error in object 'user' on field 'password': rejected value [1234]; codes [Length.user.password,Length.password,Length.java.lang.String,Length]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [user.password,password]; arguments []; default message [password],2147483647,5]; default message [length must be between 5 and 2147483647]] ]
+2022-04-07 21:57:00.440  WARN 14648 --- [nio-8889-exec-8] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public engine.businesslayer.User engine.presentation.UserController.registrationNewUser(engine.businesslayer.User): [Field error in object 'user' on field 'password': rejected value [123]; codes [Length.user.password,Length.password,Length.java.lang.String,Length]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [user.password,password]; arguments []; default message [password],2147483647,5]; default message [length must be between 5 and 2147483647]] ]
+	at org.junit.Assert.fail(Assert.java:89)
+	at org.hyperskill.hstest.stage.StageTest.start(StageTest.java:155)
+	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
+	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
+	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
+	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
+	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
+	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
+	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
+	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
+	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
+	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
+	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
+	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
+	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
+	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
+	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
+	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
+	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
+	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
+	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
+	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
+	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
+	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)
+	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
+	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
+	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)
+	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
+	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
+	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
+	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
+	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
+	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
+	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
+	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
+	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
+	at jdk.proxy1/jdk.proxy1.$Proxy2.processTestClass(Unknown Source)
+	at org.gradle.api.internal.tasks.testing.worker.TestWorker$2.run(TestWorker.java:176)
+	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
+	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
+	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
+	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
+	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133)
+	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)
+	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
+	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
+</pre>
+</span>
+</div>
+</div>
+<div id="tab1" class="tab">
 <h2>Tests</h2>
 <table>
 <thead>
@@ -78,13 +187,13 @@
 </tr>
 </thead>
 <tr>
-<td class="success">start</td>
-<td class="success">2.986s</td>
-<td class="success">passed</td>
+<td class="failures">start</td>
+<td class="failures">7.040s</td>
+<td class="failures">failed</td>
 </tr>
 </table>
 </div>
-<div id="tab1" class="tab">
+<div id="tab2" class="tab">
 <h2>Standard output</h2>
 <span class="code">
 <pre>?[1;31m
@@ -98,31 +207,48 @@
  =========|_|==============|___/=/_/_/_/
  :: Spring Boot ::                (v2.5.6)
 
-2022-03-31 14:45:43.485  INFO 12648 --- [    Test worker] engine.WebQuizEngine                     : Starting WebQuizEngine using Java 17.0.1 on Fractal with PID 12648 (started by Fractal in D:\RepositoryRoadToProfession\Web Quiz Engine\Web Quiz Engine\task)
-2022-03-31 14:45:43.489  INFO 12648 --- [    Test worker] engine.WebQuizEngine                     : No active profile set, falling back to default profiles: default
-2022-03-31 14:45:44.628  INFO 12648 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8889 (http)
-2022-03-31 14:45:44.639  INFO 12648 --- [    Test worker] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
-2022-03-31 14:45:44.639  INFO 12648 --- [    Test worker] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.54]
-2022-03-31 14:45:44.726  INFO 12648 --- [    Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
-2022-03-31 14:45:44.726  INFO 12648 --- [    Test worker] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1190 ms
-2022-03-31 14:45:45.335  INFO 12648 --- [    Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 14 endpoint(s) beneath base path '/actuator'
-2022-03-31 14:45:45.369  INFO 12648 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8889 (http) with context path ''
-2022-03-31 14:45:45.382  INFO 12648 --- [    Test worker] engine.WebQuizEngine                     : Started WebQuizEngine in 2.231 seconds (JVM running for 2.889)
-2022-03-31 14:45:45.649  INFO 12648 --- [nio-8889-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
-2022-03-31 14:45:45.649  INFO 12648 --- [nio-8889-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
-2022-03-31 14:45:45.650  INFO 12648 --- [nio-8889-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
+2022-04-07 21:56:54.909  INFO 14648 --- [    Test worker] engine.WebQuizEngine                     : Starting WebQuizEngine using Java 17.0.1 on Fractal with PID 14648 (started by Fractal in D:\RepositoryRoadToProfession\Web Quiz Engine\Web Quiz Engine\task)
+2022-04-07 21:56:54.913  INFO 14648 --- [    Test worker] engine.WebQuizEngine                     : No active profile set, falling back to default profiles: default
+2022-04-07 21:56:55.939  INFO 14648 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
+2022-04-07 21:56:55.996  INFO 14648 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 46 ms. Found 2 JPA repository interfaces.
+2022-04-07 21:56:56.656  INFO 14648 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8889 (http)
+2022-04-07 21:56:56.667  INFO 14648 --- [    Test worker] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
+2022-04-07 21:56:56.668  INFO 14648 --- [    Test worker] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.54]
+2022-04-07 21:56:56.786  INFO 14648 --- [    Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
+2022-04-07 21:56:56.787  INFO 14648 --- [    Test worker] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1823 ms
+2022-04-07 21:56:56.919  INFO 14648 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
+2022-04-07 21:56:57.131  INFO 14648 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
+2022-04-07 21:56:57.153  INFO 14648 --- [    Test worker] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:file:../quizdb'
+2022-04-07 21:56:57.323  INFO 14648 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
+2022-04-07 21:56:57.390  INFO 14648 --- [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.4.32.Final
+2022-04-07 21:56:57.576  INFO 14648 --- [    Test worker] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
+2022-04-07 21:56:57.712  INFO 14648 --- [    Test worker] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
+2022-04-07 21:56:58.362  INFO 14648 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
+2022-04-07 21:56:58.373  INFO 14648 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
+2022-04-07 21:56:58.747  WARN 14648 --- [    Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
+2022-04-07 21:56:59.234  INFO 14648 --- [    Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 14 endpoint(s) beneath base path '/actuator'
+2022-04-07 21:56:59.290  INFO 14648 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@726dd367, org.springframework.security.web.context.SecurityContextPersistenceFilter@247415be, org.springframework.security.web.header.HeaderWriterFilter@73a88711, org.springframework.security.web.authentication.logout.LogoutFilter@42d96745, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@1a1dd8eb, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@43735ea0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@68a7f77a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@433362e0, org.springframework.security.web.session.SessionManagementFilter@28b47211, org.springframework.security.web.access.ExceptionTranslationFilter@d62feaf, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@70ca8e72]
+2022-04-07 21:56:59.550  INFO 14648 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8889 (http) with context path ''
+2022-04-07 21:56:59.563  INFO 14648 --- [    Test worker] engine.WebQuizEngine                     : Started WebQuizEngine in 5.023 seconds (JVM running for 5.792)
+2022-04-07 21:56:59.862  INFO 14648 --- [nio-8889-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
+2022-04-07 21:56:59.862  INFO 14648 --- [nio-8889-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
+2022-04-07 21:56:59.864  INFO 14648 --- [nio-8889-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
 ?[1;31m
 Start test 2?[0m
 ?[1;31m
 Start test 3?[0m
+2022-04-07 21:57:00.367  WARN 14648 --- [nio-8889-exec-3] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public engine.businesslayer.User engine.presentation.UserController.registrationNewUser(engine.businesslayer.User): [Field error in object 'user' on field 'username': rejected value [google.com]; codes [Email.user.username,Email.username,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [user.username,username]; arguments []; default message [username],[Ljavax.validation.constraints.Pattern$Flag;@7cbce404,^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$]; default message [must be a well-formed email address]] ]
 ?[1;31m
 Start test 4?[0m
+2022-04-07 21:57:00.401  WARN 14648 --- [nio-8889-exec-5] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public engine.businesslayer.User engine.presentation.UserController.registrationNewUser(engine.businesslayer.User): [Field error in object 'user' on field 'username': rejected value [well@googlecom]; codes [Email.user.username,Email.username,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [user.username,username]; arguments []; default message [username],[Ljavax.validation.constraints.Pattern$Flag;@7cbce404,^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$]; default message [must be a well-formed email address]] ]
 ?[1;31m
 Start test 5?[0m
 ?[1;31m
 Start test 6?[0m
+2022-04-07 21:57:00.429  WARN 14648 --- [nio-8889-exec-7] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public engine.businesslayer.User engine.presentation.UserController.registrationNewUser(engine.businesslayer.User): [Field error in object 'user' on field 'password': rejected value [1234]; codes [Length.user.password,Length.password,Length.java.lang.String,Length]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [user.password,password]; arguments []; default message [password],2147483647,5]; default message [length must be between 5 and 2147483647]] ]
 ?[1;31m
 Start test 7?[0m
+2022-04-07 21:57:00.440  WARN 14648 --- [nio-8889-exec-8] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public engine.businesslayer.User engine.presentation.UserController.registrationNewUser(engine.businesslayer.User): [Field error in object 'user' on field 'password': rejected value [123]; codes [Length.user.password,Length.password,Length.java.lang.String,Length]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [user.password,password]; arguments []; default message [password],2147483647,5]; default message [length must be between 5 and 2147483647]] ]
 ?[1;31m
 Start test 8?[0m
 ?[1;31m
@@ -143,6 +269,8 @@
 Start test 16?[0m
 ?[1;31m
 Start test 17?[0m
+?[1;31m
+Start test 18?[0m
 </pre>
 </span>
 </div>
@@ -154,7 +282,7 @@
 <input id="line-wrapping-toggle" type="checkbox" autocomplete="off"/>
 </label>
 </div>Generated by 
-<a href="http://www.gradle.org">Gradle 7.3.3</a> at 31 мар. 2022 г., 14:45:46</p>
+<a href="http://www.gradle.org">Gradle 7.3.3</a> at 7 апр. 2022 г., 21:57:01</p>
 </div>
 </div>
 </body>
Index: .idea/libraries/Gradle__com_sun_activation_jakarta_activation_1_2_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__com_sun_activation_jakarta_activation_1_2_2.xml b/.idea/libraries/Gradle__com_sun_activation_jakarta_activation_1_2_2.xml
new file mode 100644
--- /dev/null	(date 1648813961491)
+++ b/.idea/libraries/Gradle__com_sun_activation_jakarta_activation_1_2_2.xml	(date 1648813961491)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: com.sun.activation:jakarta.activation:1.2.2">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.sun.activation/jakarta.activation/1.2.2/74548703f9851017ce2f556066659438019e7eb5/jakarta.activation-1.2.2.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.sun.activation/jakarta.activation/1.2.2/fa3c25fb842cbe9eaa126a007475297f8bf35abe/jakarta.activation-1.2.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__com_zaxxer_HikariCP_4_0_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__com_zaxxer_HikariCP_4_0_3.xml b/.idea/libraries/Gradle__com_zaxxer_HikariCP_4_0_3.xml
new file mode 100644
--- /dev/null	(date 1648813961511)
+++ b/.idea/libraries/Gradle__com_zaxxer_HikariCP_4_0_3.xml	(date 1648813961511)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: com.zaxxer:HikariCP:4.0.3">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.zaxxer/HikariCP/4.0.3/107cbdf0db6780a065f895ae9d8fbf3bb0e1c21f/HikariCP-4.0.3.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.zaxxer/HikariCP/4.0.3/b27e256676e4457e73aaea5dfe19795ab2451f93/HikariCP-4.0.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: Web Quiz Engine/task/build/reports/tests/test/packages/tests.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\r\n<meta http-equiv=\"x-ua-compatible\" content=\"IE=edge\"/>\r\n<title>Test results - Package tests</title>\r\n<link href=\"../css/base-style.css\" rel=\"stylesheet\" type=\"text/css\"/>\r\n<link href=\"../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/>\r\n<script src=\"../js/report.js\" type=\"text/javascript\"></script>\r\n</head>\r\n<body>\r\n<div id=\"content\">\r\n<h1>Package tests</h1>\r\n<div class=\"breadcrumbs\">\r\n<a href=\"../index.html\">all</a> &gt; tests</div>\r\n<div id=\"summary\">\r\n<table>\r\n<tr>\r\n<td>\r\n<div class=\"summaryGroup\">\r\n<table>\r\n<tr>\r\n<td>\r\n<div class=\"infoBox\" id=\"tests\">\r\n<div class=\"counter\">1</div>\r\n<p>tests</p>\r\n</div>\r\n</td>\r\n<td>\r\n<div class=\"infoBox\" id=\"failures\">\r\n<div class=\"counter\">0</div>\r\n<p>failures</p>\r\n</div>\r\n</td>\r\n<td>\r\n<div class=\"infoBox\" id=\"ignored\">\r\n<div class=\"counter\">0</div>\r\n<p>ignored</p>\r\n</div>\r\n</td>\r\n<td>\r\n<div class=\"infoBox\" id=\"duration\">\r\n<div class=\"counter\">2.986s</div>\r\n<p>duration</p>\r\n</div>\r\n</td>\r\n</tr>\r\n</table>\r\n</div>\r\n</td>\r\n<td>\r\n<div class=\"infoBox success\" id=\"successRate\">\r\n<div class=\"percent\">100%</div>\r\n<p>successful</p>\r\n</div>\r\n</td>\r\n</tr>\r\n</table>\r\n</div>\r\n<div id=\"tabs\">\r\n<ul class=\"tabLinks\">\r\n<li>\r\n<a href=\"#tab0\">Classes</a>\r\n</li>\r\n</ul>\r\n<div id=\"tab0\" class=\"tab\">\r\n<h2>Classes</h2>\r\n<table>\r\n<thread>\r\n<tr>\r\n<th>Class</th>\r\n<th>Tests</th>\r\n<th>Failures</th>\r\n<th>Ignored</th>\r\n<th>Duration</th>\r\n<th>Success rate</th>\r\n</tr>\r\n</thread>\r\n<tr>\r\n<td class=\"success\">\r\n<a href=\"../classes/tests.WebQuizEngineTest.html\">WebQuizEngineTest</a>\r\n</td>\r\n<td>1</td>\r\n<td>0</td>\r\n<td>0</td>\r\n<td>2.986s</td>\r\n<td class=\"success\">100%</td>\r\n</tr>\r\n</table>\r\n</div>\r\n</div>\r\n<div id=\"footer\">\r\n<p>\r\n<div>\r\n<label class=\"hidden\" id=\"label-for-line-wrapping-toggle\" for=\"line-wrapping-toggle\">Wrap lines\r\n<input id=\"line-wrapping-toggle\" type=\"checkbox\" autocomplete=\"off\"/>\r\n</label>\r\n</div>Generated by \r\n<a href=\"http://www.gradle.org\">Gradle 7.3.3</a> at 31 мар. 2022 г., 14:45:46</p>\r\n</div>\r\n</div>\r\n</body>\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Web Quiz Engine/task/build/reports/tests/test/packages/tests.html b/Web Quiz Engine/task/build/reports/tests/test/packages/tests.html
--- a/Web Quiz Engine/task/build/reports/tests/test/packages/tests.html	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/Web Quiz Engine/task/build/reports/tests/test/packages/tests.html	(date 1649357821637)
@@ -28,7 +28,7 @@
 </td>
 <td>
 <div class="infoBox" id="failures">
-<div class="counter">0</div>
+<div class="counter">1</div>
 <p>failures</p>
 </div>
 </td>
@@ -40,7 +40,7 @@
 </td>
 <td>
 <div class="infoBox" id="duration">
-<div class="counter">2.986s</div>
+<div class="counter">7.040s</div>
 <p>duration</p>
 </div>
 </td>
@@ -49,8 +49,8 @@
 </div>
 </td>
 <td>
-<div class="infoBox success" id="successRate">
-<div class="percent">100%</div>
+<div class="infoBox failures" id="successRate">
+<div class="percent">0%</div>
 <p>successful</p>
 </div>
 </td>
@@ -60,10 +60,22 @@
 <div id="tabs">
 <ul class="tabLinks">
 <li>
-<a href="#tab0">Classes</a>
+<a href="#tab0">Failed tests</a>
+</li>
+<li>
+<a href="#tab1">Classes</a>
 </li>
 </ul>
 <div id="tab0" class="tab">
+<h2>Failed tests</h2>
+<ul class="linkList">
+<li>
+<a href="../classes/tests.WebQuizEngineTest.html">WebQuizEngineTest</a>.
+<a href="../classes/tests.WebQuizEngineTest.html#start">start</a>
+</li>
+</ul>
+</div>
+<div id="tab1" class="tab">
 <h2>Classes</h2>
 <table>
 <thread>
@@ -77,14 +89,14 @@
 </tr>
 </thread>
 <tr>
-<td class="success">
+<td class="failures">
 <a href="../classes/tests.WebQuizEngineTest.html">WebQuizEngineTest</a>
 </td>
 <td>1</td>
-<td>0</td>
+<td>1</td>
 <td>0</td>
-<td>2.986s</td>
-<td class="success">100%</td>
+<td>7.040s</td>
+<td class="failures">0%</td>
 </tr>
 </table>
 </div>
@@ -96,7 +108,7 @@
 <input id="line-wrapping-toggle" type="checkbox" autocomplete="off"/>
 </label>
 </div>Generated by 
-<a href="http://www.gradle.org">Gradle 7.3.3</a> at 31 мар. 2022 г., 14:45:46</p>
+<a href="http://www.gradle.org">Gradle 7.3.3</a> at 7 апр. 2022 г., 21:57:01</p>
 </div>
 </div>
 </body>
Index: .idea/libraries/Gradle__com_vaadin_external_google_android_json_0_0_20131108_vaadin1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__com_vaadin_external_google_android_json_0_0_20131108_vaadin1.xml b/.idea/libraries/Gradle__com_vaadin_external_google_android_json_0_0_20131108_vaadin1.xml
new file mode 100644
--- /dev/null	(date 1648813961503)
+++ b/.idea/libraries/Gradle__com_vaadin_external_google_android_json_0_0_20131108_vaadin1.xml	(date 1648813961503)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: com.vaadin.external.google:android-json:0.0.20131108.vaadin1">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.vaadin.external.google/android-json/0.0.20131108.vaadin1/fa26d351fe62a6a17f5cda1287c1c6110dec413f/android-json-0.0.20131108.vaadin1.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.vaadin.external.google/android-json/0.0.20131108.vaadin1/bf42d7e47a3228513b626dd7d37ac6f072aeca4f/android-json-0.0.20131108.vaadin1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_aspectj_aspectjweaver_1_9_7.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_aspectj_aspectjweaver_1_9_7.xml b/.idea/libraries/Gradle__org_aspectj_aspectjweaver_1_9_7.xml
new file mode 100644
--- /dev/null	(date 1648813961577)
+++ b/.idea/libraries/Gradle__org_aspectj_aspectjweaver_1_9_7.xml	(date 1648813961577)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.aspectj:aspectjweaver:1.9.7">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.aspectj/aspectjweaver/1.9.7/158f5c255cd3e4408e795b79f7c3fbae9b53b7ca/aspectjweaver-1.9.7.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.aspectj/aspectjweaver/1.9.7/8da21dfaf64693f4a9c269298dce04d12a7b10fd/aspectjweaver-1.9.7-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: Web Quiz Engine/task/build/resources/main/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>server.port=8889\r\nmanagement.endpoints.web.exposure.include=*\r\nmanagement.endpoint.shutdown.enabled=true\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Web Quiz Engine/task/build/resources/main/application.properties b/Web Quiz Engine/task/build/resources/main/application.properties
--- a/Web Quiz Engine/task/build/resources/main/application.properties	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/Web Quiz Engine/task/build/resources/main/application.properties	(date 1649353449746)
@@ -1,3 +1,20 @@
 server.port=8889
 management.endpoints.web.exposure.include=*
 management.endpoint.shutdown.enabled=true
+server.error.include-message=always
+
+#datasource settings
+spring.datasource.url=jdbc:h2:file:../quizdb
+spring.datasource.driverClassName=org.h2.Driver
+spring.datasource.username=sa
+spring.datasource.password=password
+
+#data settings
+spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
+spring.jpa.hibernate.ddl-auto=create
+
+#console settings
+spring.h2.console.enabled=true
+spring.h2.console.settings.trace=false
+spring.h2.console.settings.web-allow-others=false
+spring.jpa.show-sql=false
\ No newline at end of file
Index: .idea/libraries/Gradle__org_apiguardian_apiguardian_api_1_1_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_apiguardian_apiguardian_api_1_1_0.xml b/.idea/libraries/Gradle__org_apiguardian_apiguardian_api_1_1_0.xml
new file mode 100644
--- /dev/null	(date 1648813961570)
+++ b/.idea/libraries/Gradle__org_apiguardian_apiguardian_api_1_1_0.xml	(date 1648813961570)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.apiguardian:apiguardian-api:1.1.0">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.apiguardian/apiguardian-api/1.1.0/fc9dff4bb36d627bdc553de77e1f17efd790876c/apiguardian-api-1.1.0.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.apiguardian/apiguardian-api/1.1.0/f3c15fe970af864390c8d0634c9f16aca1b064a8/apiguardian-api-1.1.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_glassfish_jaxb_jaxb_runtime_2_3_5.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_glassfish_jaxb_jaxb_runtime_2_3_5.xml b/.idea/libraries/Gradle__org_glassfish_jaxb_jaxb_runtime_2_3_5.xml
new file mode 100644
--- /dev/null	(date 1648813961594)
+++ b/.idea/libraries/Gradle__org_glassfish_jaxb_jaxb_runtime_2_3_5.xml	(date 1648813961594)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.glassfish.jaxb:jaxb-runtime:2.3.5">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.glassfish.jaxb/jaxb-runtime/2.3.5/a169a961a2bb9ac69517ec1005e451becf5cdfab/jaxb-runtime-2.3.5.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.glassfish.jaxb/jaxb-runtime/2.3.5/b7dbadd4448b69278cdf78307d5f5252fc0b480e/jaxb-runtime-2.3.5-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_dom4j_dom4j_2_1_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_dom4j_dom4j_2_1_3.xml b/.idea/libraries/Gradle__org_dom4j_dom4j_2_1_3.xml
new file mode 100644
--- /dev/null	(date 1648813961588)
+++ b/.idea/libraries/Gradle__org_dom4j_dom4j_2_1_3.xml	(date 1648813961588)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.dom4j:dom4j:2.1.3">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.dom4j/dom4j/2.1.3/a75914155a9f5808963170ec20653668a2ffd2fd/dom4j-2.1.3.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.dom4j/dom4j/2.1.3/fd3c592b44ddb513f9888441ca3510e9f1bcdeb3/dom4j-2.1.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__net_bytebuddy_byte_buddy_agent_1_10_22.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__net_bytebuddy_byte_buddy_agent_1_10_22.xml b/.idea/libraries/Gradle__net_bytebuddy_byte_buddy_agent_1_10_22.xml
new file mode 100644
--- /dev/null	(date 1648813961547)
+++ b/.idea/libraries/Gradle__net_bytebuddy_byte_buddy_agent_1_10_22.xml	(date 1648813961547)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: net.bytebuddy:byte-buddy-agent:1.10.22">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/net.bytebuddy/byte-buddy-agent/1.10.22/b01df6b71a882b9fde5a608a26e641cd399a4d83/byte-buddy-agent-1.10.22.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/net.bytebuddy/byte-buddy-agent/1.10.22/128393bfff6352100e5e463a4b6c3b51a59c8460/byte-buddy-agent-1.10.22-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__net_bytebuddy_byte_buddy_1_10_22.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__net_bytebuddy_byte_buddy_1_10_22.xml b/.idea/libraries/Gradle__net_bytebuddy_byte_buddy_1_10_22.xml
new file mode 100644
--- /dev/null	(date 1648813961541)
+++ b/.idea/libraries/Gradle__net_bytebuddy_byte_buddy_1_10_22.xml	(date 1648813961541)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: net.bytebuddy:byte-buddy:1.10.22">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/net.bytebuddy/byte-buddy/1.10.22/ef45d7e2cd1c600d279704f492ed5ce2ceb6cdb5/byte-buddy-1.10.22.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/net.bytebuddy/byte-buddy/1.10.22/fd96eec7cda105c0eac548898461afcd1b6de750/byte-buddy-1.10.22-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__net_minidev_json_smart_2_4_7.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__net_minidev_json_smart_2_4_7.xml b/.idea/libraries/Gradle__net_minidev_json_smart_2_4_7.xml
new file mode 100644
--- /dev/null	(date 1648813961564)
+++ b/.idea/libraries/Gradle__net_minidev_json_smart_2_4_7.xml	(date 1648813961564)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: net.minidev:json-smart:2.4.7">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/net.minidev/json-smart/2.4.7/8d7f4c1530c07c54930935f3da85f48b83b3c109/json-smart-2.4.7.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/net.minidev/json-smart/2.4.7/d64652c79751177c96a294fd5a1dcd61a330e940/json-smart-2.4.7-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__net_minidev_accessors_smart_2_4_7.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__net_minidev_accessors_smart_2_4_7.xml b/.idea/libraries/Gradle__net_minidev_accessors_smart_2_4_7.xml
new file mode 100644
--- /dev/null	(date 1648813961554)
+++ b/.idea/libraries/Gradle__net_minidev_accessors_smart_2_4_7.xml	(date 1648813961554)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: net.minidev:accessors-smart:2.4.7">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/net.minidev/accessors-smart/2.4.7/3970cfc505e6657ca60f3aa57c849f6043000d7a/accessors-smart-2.4.7.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/net.minidev/accessors-smart/2.4.7/6369c6c389cd6e1e1ee42d8ea8823a78decae735/accessors-smart-2.4.7-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/jpa-buddy.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/jpa-buddy.xml b/.idea/jpa-buddy.xml
new file mode 100644
--- /dev/null	(date 1649348752488)
+++ b/.idea/jpa-buddy.xml	(date 1649348752488)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="JpaBuddyIdeaProjectConfig" ddlActionDbType="h2">
+    <option name="defaultUnitInitialized" value="true" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_junit_jupiter_junit_jupiter_5_7_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_junit_jupiter_junit_jupiter_5_7_2.xml b/.idea/libraries/Gradle__org_junit_jupiter_junit_jupiter_5_7_2.xml
new file mode 100644
--- /dev/null	(date 1648813961636)
+++ b/.idea/libraries/Gradle__org_junit_jupiter_junit_jupiter_5_7_2.xml	(date 1648813961636)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.junit.jupiter:junit-jupiter:5.7.2">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.junit.jupiter/junit-jupiter/5.7.2/62faa742964a9d8dab8fdb4a0eab7b01441c171f/junit-jupiter-5.7.2.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.junit.jupiter/junit-jupiter/5.7.2/7009caa171d1d6af0f6f09dff25f9f574826a490/junit-jupiter-5.7.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_jboss_jandex_2_2_3_Final.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_jboss_jandex_2_2_3_Final.xml b/.idea/libraries/Gradle__org_jboss_jandex_2_2_3_Final.xml
new file mode 100644
--- /dev/null	(date 1648813961629)
+++ b/.idea/libraries/Gradle__org_jboss_jandex_2_2_3_Final.xml	(date 1648813961629)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.jboss:jandex:2.2.3.Final">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.jboss/jandex/2.2.3.Final/d3865101f0666b63586683bd811d754517f331ab/jandex-2.2.3.Final.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.jboss/jandex/2.2.3.Final/ebb148235c4b1aaf4195f09a0e0a12d40af9dc44/jandex-2.2.3.Final-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_junit_jupiter_junit_jupiter_engine_5_7_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_junit_jupiter_junit_jupiter_engine_5_7_2.xml b/.idea/libraries/Gradle__org_junit_jupiter_junit_jupiter_engine_5_7_2.xml
new file mode 100644
--- /dev/null	(date 1648813961649)
+++ b/.idea/libraries/Gradle__org_junit_jupiter_junit_jupiter_engine_5_7_2.xml	(date 1648813961649)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.junit.jupiter:junit-jupiter-engine:5.7.2">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.junit.jupiter/junit-jupiter-engine/5.7.2/9415680a889f00b8205a094c5c487bc69dc7077d/junit-jupiter-engine-5.7.2.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.junit.jupiter/junit-jupiter-engine/5.7.2/7c0d81d9af26a35e3f552eaaad2aa6867218d534/junit-jupiter-engine-5.7.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_junit_jupiter_junit_jupiter_api_5_7_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_junit_jupiter_junit_jupiter_api_5_7_2.xml b/.idea/libraries/Gradle__org_junit_jupiter_junit_jupiter_api_5_7_2.xml
new file mode 100644
--- /dev/null	(date 1648813961642)
+++ b/.idea/libraries/Gradle__org_junit_jupiter_junit_jupiter_api_5_7_2.xml	(date 1648813961642)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.junit.jupiter:junit-jupiter-api:5.7.2">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.junit.jupiter/junit-jupiter-api/5.7.2/f4b4079732a9c537983324cfa4e46655f21d2c56/junit-jupiter-api-5.7.2.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.junit.jupiter/junit-jupiter-api/5.7.2/ebca04edd1975a8fd42846c4f6d0b8fec3d6efc1/junit-jupiter-api-5.7.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_hibernate_common_hibernate_commons_annotations_5_1_2_Final.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_hibernate_common_hibernate_commons_annotations_5_1_2_Final.xml b/.idea/libraries/Gradle__org_hibernate_common_hibernate_commons_annotations_5_1_2_Final.xml
new file mode 100644
--- /dev/null	(date 1648813961609)
+++ b/.idea/libraries/Gradle__org_hibernate_common_hibernate_commons_annotations_5_1_2_Final.xml	(date 1648813961609)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.hibernate.common:hibernate-commons-annotations:5.1.2.Final">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.hibernate.common/hibernate-commons-annotations/5.1.2.Final/e59ffdbc6ad09eeb33507b39ffcf287679a498c8/hibernate-commons-annotations-5.1.2.Final.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.hibernate.common/hibernate-commons-annotations/5.1.2.Final/f61bcf5c598d45f10dc79688ebce6b4d1c2c5bd5/hibernate-commons-annotations-5.1.2.Final-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_glassfish_jaxb_txw2_2_3_5.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_glassfish_jaxb_txw2_2_3_5.xml b/.idea/libraries/Gradle__org_glassfish_jaxb_txw2_2_3_5.xml
new file mode 100644
--- /dev/null	(date 1648813961602)
+++ b/.idea/libraries/Gradle__org_glassfish_jaxb_txw2_2_3_5.xml	(date 1648813961602)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.glassfish.jaxb:txw2:2.3.5">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.glassfish.jaxb/txw2/2.3.5/ec8930fa62e7b1758b1664d135f50c7abe86a4a3/txw2-2.3.5.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.glassfish.jaxb/txw2/2.3.5/f4a9bf31ba73bae8d7178addf7c37db08f8faf1e/txw2-2.3.5-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: Web Quiz Engine/task/build/test-results/test/TEST-tests.WebQuizEngineTest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<testsuite name=\"tests.WebQuizEngineTest\" tests=\"1\" skipped=\"0\" failures=\"0\" errors=\"0\" timestamp=\"2022-03-31T11:45:42\" hostname=\"FRACTAL\" time=\"2.986\">\r\n  <properties/>\r\n  <testcase name=\"start\" classname=\"tests.WebQuizEngineTest\" time=\"2.986\"/>\r\n  <system-out><![CDATA[?[1;31m\r\nStart test 1?[0m\r\n\r\n  .   ____          _            __ _ _\r\n /\\\\ / ___'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\r\n( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\\r\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\r\n  '  |____| .__|_| |_|_| |_\\__, | / / / /\r\n =========|_|==============|___/=/_/_/_/\r\n :: Spring Boot ::                (v2.5.6)\r\n\r\n2022-03-31 14:45:43.485  INFO 12648 --- [    Test worker] engine.WebQuizEngine                     : Starting WebQuizEngine using Java 17.0.1 on Fractal with PID 12648 (started by Fractal in D:\\RepositoryRoadToProfession\\Web Quiz Engine\\Web Quiz Engine\\task)\r\n2022-03-31 14:45:43.489  INFO 12648 --- [    Test worker] engine.WebQuizEngine                     : No active profile set, falling back to default profiles: default\r\n2022-03-31 14:45:44.628  INFO 12648 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8889 (http)\r\n2022-03-31 14:45:44.639  INFO 12648 --- [    Test worker] o.apache.catalina.core.StandardService   : Starting service [Tomcat]\r\n2022-03-31 14:45:44.639  INFO 12648 --- [    Test worker] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.54]\r\n2022-03-31 14:45:44.726  INFO 12648 --- [    Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext\r\n2022-03-31 14:45:44.726  INFO 12648 --- [    Test worker] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1190 ms\r\n2022-03-31 14:45:45.335  INFO 12648 --- [    Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 14 endpoint(s) beneath base path '/actuator'\r\n2022-03-31 14:45:45.369  INFO 12648 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8889 (http) with context path ''\r\n2022-03-31 14:45:45.382  INFO 12648 --- [    Test worker] engine.WebQuizEngine                     : Started WebQuizEngine in 2.231 seconds (JVM running for 2.889)\r\n2022-03-31 14:45:45.649  INFO 12648 --- [nio-8889-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'\r\n2022-03-31 14:45:45.649  INFO 12648 --- [nio-8889-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'\r\n2022-03-31 14:45:45.650  INFO 12648 --- [nio-8889-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms\r\n?[1;31m\r\nStart test 2?[0m\r\n?[1;31m\r\nStart test 3?[0m\r\n?[1;31m\r\nStart test 4?[0m\r\n?[1;31m\r\nStart test 5?[0m\r\n?[1;31m\r\nStart test 6?[0m\r\n?[1;31m\r\nStart test 7?[0m\r\n?[1;31m\r\nStart test 8?[0m\r\n?[1;31m\r\nStart test 9?[0m\r\n?[1;31m\r\nStart test 10?[0m\r\n?[1;31m\r\nStart test 11?[0m\r\n?[1;31m\r\nStart test 12?[0m\r\n?[1;31m\r\nStart test 13?[0m\r\n?[1;31m\r\nStart test 14?[0m\r\n?[1;31m\r\nStart test 15?[0m\r\n?[1;31m\r\nStart test 16?[0m\r\n?[1;31m\r\nStart test 17?[0m\r\n]]></system-out>\r\n  <system-err><![CDATA[]]></system-err>\r\n</testsuite>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Web Quiz Engine/task/build/test-results/test/TEST-tests.WebQuizEngineTest.xml b/Web Quiz Engine/task/build/test-results/test/TEST-tests.WebQuizEngineTest.xml
--- a/Web Quiz Engine/task/build/test-results/test/TEST-tests.WebQuizEngineTest.xml	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/Web Quiz Engine/task/build/test-results/test/TEST-tests.WebQuizEngineTest.xml	(date 1649357821635)
@@ -1,7 +1,105 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<testsuite name="tests.WebQuizEngineTest" tests="1" skipped="0" failures="0" errors="0" timestamp="2022-03-31T11:45:42" hostname="FRACTAL" time="2.986">
+<testsuite name="tests.WebQuizEngineTest" tests="1" skipped="0" failures="1" errors="0" timestamp="2022-04-07T18:56:54" hostname="FRACTAL" time="7.04">
   <properties/>
-  <testcase name="start" classname="tests.WebQuizEngineTest" time="2.986"/>
+  <testcase name="start" classname="tests.WebQuizEngineTest" time="7.04">
+    <failure message="java.lang.AssertionError: Wrong answer in test #18&#10;&#10;GET /api/quizzes should respond with status code 401, responded: 200&#10;&#10;Response body:&#10;&#10;[{&quot;id&quot;:3,&quot;title&quot;:&quot;The Java Logo&quot;,&quot;text&quot;:&quot;What is depicted on the Java logo?&quot;,&quot;options&quot;:[&quot;Robot&quot;,&quot;Tea leaf&quot;,&quot;Cup of coffee&quot;,&quot;Bug&quot;]},{&quot;id&quot;:4,&quot;title&quot;:&quot;The Ultimate Question&quot;,&quot;text&quot;:&quot;What is the answer to the Ultimate Question of Life, the Universe and Everything?&quot;,&quot;options&quot;:[&quot;Everything goes right&quot;,&quot;42&quot;,&quot;2+2=4&quot;,&quot;11011100&quot;]}]&#10;&#10;Please find below the output of your program during this failed test.&#10;&#10;---&#10;&#10;.   ____          _            __ _ _&#10; /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \&#10;( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \&#10; \\/  ___)| |_)| | | | | || (_| |  ) ) ) )&#10;  '  |____| .__|_| |_|_| |_\__, | / / / /&#10; =========|_|==============|___/=/_/_/_/&#10; :: Spring Boot ::                (v2.5.6)&#10;&#10;2022-04-07 21:56:54.909  INFO 14648 --- [    Test worker] engine.WebQuizEngine                     : Starting WebQuizEngine using Java 17.0.1 on Fractal with PID 14648 (started by Fractal in D:\RepositoryRoadToProfession\Web Quiz Engine\Web Quiz Engine\task)&#10;2022-04-07 21:56:54.913  INFO 14648 --- [    Test worker] engine.WebQuizEngine                     : No active profile set, falling back to default profiles: default&#10;2022-04-07 21:56:55.939  INFO 14648 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.&#10;2022-04-07 21:56:55.996  INFO 14648 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 46 ms. Found 2 JPA repository interfaces.&#10;2022-04-07 21:56:56.656  INFO 14648 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8889 (http)&#10;2022-04-07 21:56:56.667  INFO 14648 --- [    Test worker] o.apache.catalina.core.StandardService   : Starting service [Tomcat]&#10;2022-04-07 21:56:56.668  INFO 14648 --- [    Test worker] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.54]&#10;2022-04-07 21:56:56.786  INFO 14648 --- [    Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext&#10;2022-04-07 21:56:56.787  INFO 14648 --- [    Test worker] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1823 ms&#10;2022-04-07 21:56:56.919  INFO 14648 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...&#10;2022-04-07 21:56:57.131  INFO 14648 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.&#10;2022-04-07 21:56:57.153  INFO 14648 --- [    Test worker] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:file:../quizdb'&#10;2022-04-07 21:56:57.323  INFO 14648 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]&#10;2022-04-07 21:56:57.390  INFO 14648 --- [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.4.32.Final&#10;2022-04-07 21:56:57.576  INFO 14648 --- [    Test worker] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}&#10;2022-04-07 21:56:57.712  INFO 14648 --- [    Test worker] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect&#10;2022-04-07 21:56:58.362  INFO 14648 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]&#10;2022-04-07 21:56:58.373  INFO 14648 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'&#10;2022-04-07 21:56:58.747  WARN 14648 --- [    Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning&#10;2022-04-07 21:56:59.234  INFO 14648 --- [    Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 14 endpoint(s) beneath base path '/actuator'&#10;2022-04-07 21:56:59.290  INFO 14648 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@726dd367, org.springframework.security.web.context.SecurityContextPersistenceFilter@247415be, org.springframework.security.web.header.HeaderWriterFilter@73a88711, org.springframework.security.web.authentication.logout.LogoutFilter@42d96745, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@1a1dd8eb, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@43735ea0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@68a7f77a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@433362e0, org.springframework.security.web.session.SessionManagementFilter@28b47211, org.springframework.security.web.access.ExceptionTranslationFilter@d62feaf, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@70ca8e72]&#10;2022-04-07 21:56:59.550  INFO 14648 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8889 (http) with context path ''&#10;2022-04-07 21:56:59.563  INFO 14648 --- [    Test worker] engine.WebQuizEngine                     : Started WebQuizEngine in 5.023 seconds (JVM running for 5.792)&#10;2022-04-07 21:56:59.862  INFO 14648 --- [nio-8889-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'&#10;2022-04-07 21:56:59.862  INFO 14648 --- [nio-8889-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'&#10;2022-04-07 21:56:59.864  INFO 14648 --- [nio-8889-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms&#10;2022-04-07 21:57:00.367  WARN 14648 --- [nio-8889-exec-3] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public engine.businesslayer.User engine.presentation.UserController.registrationNewUser(engine.businesslayer.User): [Field error in object 'user' on field 'username': rejected value [google.com]; codes [Email.user.username,Email.username,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [user.username,username]; arguments []; default message [username],[Ljavax.validation.constraints.Pattern$Flag;@7cbce404,^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$]; default message [must be a well-formed email address]] ]&#10;2022-04-07 21:57:00.401  WARN 14648 --- [nio-8889-exec-5] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public engine.businesslayer.User engine.presentation.UserController.registrationNewUser(engine.businesslayer.User): [Field error in object 'user' on field 'username': rejected value [well@googlecom]; codes [Email.user.username,Email.username,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [user.username,username]; arguments []; default message [username],[Ljavax.validation.constraints.Pattern$Flag;@7cbce404,^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$]; default message [must be a well-formed email address]] ]&#10;2022-04-07 21:57:00.429  WARN 14648 --- [nio-8889-exec-7] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public engine.businesslayer.User engine.presentation.UserController.registrationNewUser(engine.businesslayer.User): [Field error in object 'user' on field 'password': rejected value [1234]; codes [Length.user.password,Length.password,Length.java.lang.String,Length]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [user.password,password]; arguments []; default message [password],2147483647,5]; default message [length must be between 5 and 2147483647]] ]&#10;2022-04-07 21:57:00.440  WARN 14648 --- [nio-8889-exec-8] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public engine.businesslayer.User engine.presentation.UserController.registrationNewUser(engine.businesslayer.User): [Field error in object 'user' on field 'password': rejected value [123]; codes [Length.user.password,Length.password,Length.java.lang.String,Length]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [user.password,password]; arguments []; default message [password],2147483647,5]; default message [length must be between 5 and 2147483647]] ]" type="java.lang.AssertionError">java.lang.AssertionError: Wrong answer in test #18
+
+GET /api/quizzes should respond with status code 401, responded: 200
+
+Response body:
+
+[{&quot;id&quot;:3,&quot;title&quot;:&quot;The Java Logo&quot;,&quot;text&quot;:&quot;What is depicted on the Java logo?&quot;,&quot;options&quot;:[&quot;Robot&quot;,&quot;Tea leaf&quot;,&quot;Cup of coffee&quot;,&quot;Bug&quot;]},{&quot;id&quot;:4,&quot;title&quot;:&quot;The Ultimate Question&quot;,&quot;text&quot;:&quot;What is the answer to the Ultimate Question of Life, the Universe and Everything?&quot;,&quot;options&quot;:[&quot;Everything goes right&quot;,&quot;42&quot;,&quot;2+2=4&quot;,&quot;11011100&quot;]}]
+
+Please find below the output of your program during this failed test.
+
+---
+
+.   ____          _            __ _ _
+ /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
+( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
+ \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
+  '  |____| .__|_| |_|_| |_\__, | / / / /
+ =========|_|==============|___/=/_/_/_/
+ :: Spring Boot ::                (v2.5.6)
+
+2022-04-07 21:56:54.909  INFO 14648 --- [    Test worker] engine.WebQuizEngine                     : Starting WebQuizEngine using Java 17.0.1 on Fractal with PID 14648 (started by Fractal in D:\RepositoryRoadToProfession\Web Quiz Engine\Web Quiz Engine\task)
+2022-04-07 21:56:54.913  INFO 14648 --- [    Test worker] engine.WebQuizEngine                     : No active profile set, falling back to default profiles: default
+2022-04-07 21:56:55.939  INFO 14648 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
+2022-04-07 21:56:55.996  INFO 14648 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 46 ms. Found 2 JPA repository interfaces.
+2022-04-07 21:56:56.656  INFO 14648 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8889 (http)
+2022-04-07 21:56:56.667  INFO 14648 --- [    Test worker] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
+2022-04-07 21:56:56.668  INFO 14648 --- [    Test worker] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.54]
+2022-04-07 21:56:56.786  INFO 14648 --- [    Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
+2022-04-07 21:56:56.787  INFO 14648 --- [    Test worker] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1823 ms
+2022-04-07 21:56:56.919  INFO 14648 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
+2022-04-07 21:56:57.131  INFO 14648 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
+2022-04-07 21:56:57.153  INFO 14648 --- [    Test worker] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:file:../quizdb'
+2022-04-07 21:56:57.323  INFO 14648 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
+2022-04-07 21:56:57.390  INFO 14648 --- [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.4.32.Final
+2022-04-07 21:56:57.576  INFO 14648 --- [    Test worker] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
+2022-04-07 21:56:57.712  INFO 14648 --- [    Test worker] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
+2022-04-07 21:56:58.362  INFO 14648 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
+2022-04-07 21:56:58.373  INFO 14648 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
+2022-04-07 21:56:58.747  WARN 14648 --- [    Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
+2022-04-07 21:56:59.234  INFO 14648 --- [    Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 14 endpoint(s) beneath base path '/actuator'
+2022-04-07 21:56:59.290  INFO 14648 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@726dd367, org.springframework.security.web.context.SecurityContextPersistenceFilter@247415be, org.springframework.security.web.header.HeaderWriterFilter@73a88711, org.springframework.security.web.authentication.logout.LogoutFilter@42d96745, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@1a1dd8eb, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@43735ea0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@68a7f77a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@433362e0, org.springframework.security.web.session.SessionManagementFilter@28b47211, org.springframework.security.web.access.ExceptionTranslationFilter@d62feaf, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@70ca8e72]
+2022-04-07 21:56:59.550  INFO 14648 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8889 (http) with context path ''
+2022-04-07 21:56:59.563  INFO 14648 --- [    Test worker] engine.WebQuizEngine                     : Started WebQuizEngine in 5.023 seconds (JVM running for 5.792)
+2022-04-07 21:56:59.862  INFO 14648 --- [nio-8889-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
+2022-04-07 21:56:59.862  INFO 14648 --- [nio-8889-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
+2022-04-07 21:56:59.864  INFO 14648 --- [nio-8889-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
+2022-04-07 21:57:00.367  WARN 14648 --- [nio-8889-exec-3] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public engine.businesslayer.User engine.presentation.UserController.registrationNewUser(engine.businesslayer.User): [Field error in object 'user' on field 'username': rejected value [google.com]; codes [Email.user.username,Email.username,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [user.username,username]; arguments []; default message [username],[Ljavax.validation.constraints.Pattern$Flag;@7cbce404,^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$]; default message [must be a well-formed email address]] ]
+2022-04-07 21:57:00.401  WARN 14648 --- [nio-8889-exec-5] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public engine.businesslayer.User engine.presentation.UserController.registrationNewUser(engine.businesslayer.User): [Field error in object 'user' on field 'username': rejected value [well@googlecom]; codes [Email.user.username,Email.username,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [user.username,username]; arguments []; default message [username],[Ljavax.validation.constraints.Pattern$Flag;@7cbce404,^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$]; default message [must be a well-formed email address]] ]
+2022-04-07 21:57:00.429  WARN 14648 --- [nio-8889-exec-7] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public engine.businesslayer.User engine.presentation.UserController.registrationNewUser(engine.businesslayer.User): [Field error in object 'user' on field 'password': rejected value [1234]; codes [Length.user.password,Length.password,Length.java.lang.String,Length]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [user.password,password]; arguments []; default message [password],2147483647,5]; default message [length must be between 5 and 2147483647]] ]
+2022-04-07 21:57:00.440  WARN 14648 --- [nio-8889-exec-8] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public engine.businesslayer.User engine.presentation.UserController.registrationNewUser(engine.businesslayer.User): [Field error in object 'user' on field 'password': rejected value [123]; codes [Length.user.password,Length.password,Length.java.lang.String,Length]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [user.password,password]; arguments []; default message [password],2147483647,5]; default message [length must be between 5 and 2147483647]] ]
+	at org.junit.Assert.fail(Assert.java:89)
+	at org.hyperskill.hstest.stage.StageTest.start(StageTest.java:155)
+	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
+	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
+	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
+	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
+	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
+	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
+	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
+	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
+	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
+	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
+	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
+	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
+	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
+	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
+	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
+	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
+	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
+	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
+	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
+	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
+	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
+	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)
+	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
+	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
+	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)
+	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
+	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
+	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
+	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
+	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
+	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
+	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
+	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
+	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
+	at jdk.proxy1/jdk.proxy1.$Proxy2.processTestClass(Unknown Source)
+	at org.gradle.api.internal.tasks.testing.worker.TestWorker$2.run(TestWorker.java:176)
+	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
+	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
+	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
+	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
+	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133)
+	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)
+	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
+	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
+</failure>
+  </testcase>
   <system-out><![CDATA[?[1;31m
 Start test 1?[0m
 
@@ -13,31 +111,48 @@
  =========|_|==============|___/=/_/_/_/
  :: Spring Boot ::                (v2.5.6)
 
-2022-03-31 14:45:43.485  INFO 12648 --- [    Test worker] engine.WebQuizEngine                     : Starting WebQuizEngine using Java 17.0.1 on Fractal with PID 12648 (started by Fractal in D:\RepositoryRoadToProfession\Web Quiz Engine\Web Quiz Engine\task)
-2022-03-31 14:45:43.489  INFO 12648 --- [    Test worker] engine.WebQuizEngine                     : No active profile set, falling back to default profiles: default
-2022-03-31 14:45:44.628  INFO 12648 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8889 (http)
-2022-03-31 14:45:44.639  INFO 12648 --- [    Test worker] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
-2022-03-31 14:45:44.639  INFO 12648 --- [    Test worker] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.54]
-2022-03-31 14:45:44.726  INFO 12648 --- [    Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
-2022-03-31 14:45:44.726  INFO 12648 --- [    Test worker] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1190 ms
-2022-03-31 14:45:45.335  INFO 12648 --- [    Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 14 endpoint(s) beneath base path '/actuator'
-2022-03-31 14:45:45.369  INFO 12648 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8889 (http) with context path ''
-2022-03-31 14:45:45.382  INFO 12648 --- [    Test worker] engine.WebQuizEngine                     : Started WebQuizEngine in 2.231 seconds (JVM running for 2.889)
-2022-03-31 14:45:45.649  INFO 12648 --- [nio-8889-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
-2022-03-31 14:45:45.649  INFO 12648 --- [nio-8889-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
-2022-03-31 14:45:45.650  INFO 12648 --- [nio-8889-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
+2022-04-07 21:56:54.909  INFO 14648 --- [    Test worker] engine.WebQuizEngine                     : Starting WebQuizEngine using Java 17.0.1 on Fractal with PID 14648 (started by Fractal in D:\RepositoryRoadToProfession\Web Quiz Engine\Web Quiz Engine\task)
+2022-04-07 21:56:54.913  INFO 14648 --- [    Test worker] engine.WebQuizEngine                     : No active profile set, falling back to default profiles: default
+2022-04-07 21:56:55.939  INFO 14648 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
+2022-04-07 21:56:55.996  INFO 14648 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 46 ms. Found 2 JPA repository interfaces.
+2022-04-07 21:56:56.656  INFO 14648 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8889 (http)
+2022-04-07 21:56:56.667  INFO 14648 --- [    Test worker] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
+2022-04-07 21:56:56.668  INFO 14648 --- [    Test worker] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.54]
+2022-04-07 21:56:56.786  INFO 14648 --- [    Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
+2022-04-07 21:56:56.787  INFO 14648 --- [    Test worker] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1823 ms
+2022-04-07 21:56:56.919  INFO 14648 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
+2022-04-07 21:56:57.131  INFO 14648 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
+2022-04-07 21:56:57.153  INFO 14648 --- [    Test worker] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:file:../quizdb'
+2022-04-07 21:56:57.323  INFO 14648 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
+2022-04-07 21:56:57.390  INFO 14648 --- [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.4.32.Final
+2022-04-07 21:56:57.576  INFO 14648 --- [    Test worker] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
+2022-04-07 21:56:57.712  INFO 14648 --- [    Test worker] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
+2022-04-07 21:56:58.362  INFO 14648 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
+2022-04-07 21:56:58.373  INFO 14648 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
+2022-04-07 21:56:58.747  WARN 14648 --- [    Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
+2022-04-07 21:56:59.234  INFO 14648 --- [    Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 14 endpoint(s) beneath base path '/actuator'
+2022-04-07 21:56:59.290  INFO 14648 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@726dd367, org.springframework.security.web.context.SecurityContextPersistenceFilter@247415be, org.springframework.security.web.header.HeaderWriterFilter@73a88711, org.springframework.security.web.authentication.logout.LogoutFilter@42d96745, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@1a1dd8eb, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@43735ea0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@68a7f77a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@433362e0, org.springframework.security.web.session.SessionManagementFilter@28b47211, org.springframework.security.web.access.ExceptionTranslationFilter@d62feaf, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@70ca8e72]
+2022-04-07 21:56:59.550  INFO 14648 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8889 (http) with context path ''
+2022-04-07 21:56:59.563  INFO 14648 --- [    Test worker] engine.WebQuizEngine                     : Started WebQuizEngine in 5.023 seconds (JVM running for 5.792)
+2022-04-07 21:56:59.862  INFO 14648 --- [nio-8889-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
+2022-04-07 21:56:59.862  INFO 14648 --- [nio-8889-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
+2022-04-07 21:56:59.864  INFO 14648 --- [nio-8889-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
 ?[1;31m
 Start test 2?[0m
 ?[1;31m
 Start test 3?[0m
+2022-04-07 21:57:00.367  WARN 14648 --- [nio-8889-exec-3] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public engine.businesslayer.User engine.presentation.UserController.registrationNewUser(engine.businesslayer.User): [Field error in object 'user' on field 'username': rejected value [google.com]; codes [Email.user.username,Email.username,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [user.username,username]; arguments []; default message [username],[Ljavax.validation.constraints.Pattern$Flag;@7cbce404,^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$]; default message [must be a well-formed email address]] ]
 ?[1;31m
 Start test 4?[0m
+2022-04-07 21:57:00.401  WARN 14648 --- [nio-8889-exec-5] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public engine.businesslayer.User engine.presentation.UserController.registrationNewUser(engine.businesslayer.User): [Field error in object 'user' on field 'username': rejected value [well@googlecom]; codes [Email.user.username,Email.username,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [user.username,username]; arguments []; default message [username],[Ljavax.validation.constraints.Pattern$Flag;@7cbce404,^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$]; default message [must be a well-formed email address]] ]
 ?[1;31m
 Start test 5?[0m
 ?[1;31m
 Start test 6?[0m
+2022-04-07 21:57:00.429  WARN 14648 --- [nio-8889-exec-7] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public engine.businesslayer.User engine.presentation.UserController.registrationNewUser(engine.businesslayer.User): [Field error in object 'user' on field 'password': rejected value [1234]; codes [Length.user.password,Length.password,Length.java.lang.String,Length]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [user.password,password]; arguments []; default message [password],2147483647,5]; default message [length must be between 5 and 2147483647]] ]
 ?[1;31m
 Start test 7?[0m
+2022-04-07 21:57:00.440  WARN 14648 --- [nio-8889-exec-8] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public engine.businesslayer.User engine.presentation.UserController.registrationNewUser(engine.businesslayer.User): [Field error in object 'user' on field 'password': rejected value [123]; codes [Length.user.password,Length.password,Length.java.lang.String,Length]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [user.password,password]; arguments []; default message [password],2147483647,5]; default message [length must be between 5 and 2147483647]] ]
 ?[1;31m
 Start test 8?[0m
 ?[1;31m
@@ -58,6 +173,8 @@
 Start test 16?[0m
 ?[1;31m
 Start test 17?[0m
+?[1;31m
+Start test 18?[0m
 ]]></system-out>
   <system-err><![CDATA[]]></system-err>
 </testsuite>
Index: .idea/libraries/Gradle__org_javassist_javassist_3_27_0_GA.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_javassist_javassist_3_27_0_GA.xml b/.idea/libraries/Gradle__org_javassist_javassist_3_27_0_GA.xml
new file mode 100644
--- /dev/null	(date 1648813961622)
+++ b/.idea/libraries/Gradle__org_javassist_javassist_3_27_0_GA.xml	(date 1648813961622)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.javassist:javassist:3.27.0-GA">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.javassist/javassist/3.27.0-GA/f63e6aa899e15eca8fdaa402a79af4c417252213/javassist-3.27.0-GA.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.javassist/javassist/3.27.0-GA/e5dea2989ab81731501c670be0d1514512dbc13a/javassist-3.27.0-GA-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_hibernate_hibernate_core_5_4_32_Final.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_hibernate_hibernate_core_5_4_32_Final.xml b/.idea/libraries/Gradle__org_hibernate_hibernate_core_5_4_32_Final.xml
new file mode 100644
--- /dev/null	(date 1648813961615)
+++ b/.idea/libraries/Gradle__org_hibernate_hibernate_core_5_4_32_Final.xml	(date 1648813961615)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.hibernate:hibernate-core:5.4.32.Final">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.hibernate/hibernate-core/5.4.32.Final/99a5e10bf455337014c190e141ec631e9ff71663/hibernate-core-5.4.32.Final.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.hibernate/hibernate-core/5.4.32.Final/c4476a37353fd886a2584e0de360a1c0cfda4b97/hibernate-core-5.4.32.Final-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_objenesis_objenesis_3_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_objenesis_objenesis_3_2.xml b/.idea/libraries/Gradle__org_objenesis_objenesis_3_2.xml
new file mode 100644
--- /dev/null	(date 1648813961692)
+++ b/.idea/libraries/Gradle__org_objenesis_objenesis_3_2.xml	(date 1648813961692)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.objenesis:objenesis:3.2">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.objenesis/objenesis/3.2/7fadf57620c8b8abdf7519533e5527367cb51f09/objenesis-3.2.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.objenesis/objenesis/3.2/9f5da90020a255f25b6d8da8db273e2d38ce9805/objenesis-3.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_mockito_mockito_junit_jupiter_3_9_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_mockito_mockito_junit_jupiter_3_9_0.xml b/.idea/libraries/Gradle__org_mockito_mockito_junit_jupiter_3_9_0.xml
new file mode 100644
--- /dev/null	(date 1648813961684)
+++ b/.idea/libraries/Gradle__org_mockito_mockito_junit_jupiter_3_9_0.xml	(date 1648813961684)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.mockito:mockito-junit-jupiter:3.9.0">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.mockito/mockito-junit-jupiter/3.9.0/871745ab6af5a269411ea3c1f99ced82ed079436/mockito-junit-jupiter-3.9.0.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.mockito/mockito-junit-jupiter/3.9.0/c16ea5cf4c8b06dc63e5bb0af9a9828cce6c5e01/mockito-junit-jupiter-3.9.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../HyperMetro/HyperMetro/task/build/reports/tests/test/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\r\n<meta http-equiv=\"x-ua-compatible\" content=\"IE=edge\"/>\r\n<title>Test results - Test Summary</title>\r\n<link href=\"css/base-style.css\" rel=\"stylesheet\" type=\"text/css\"/>\r\n<link href=\"css/style.css\" rel=\"stylesheet\" type=\"text/css\"/>\r\n<script src=\"js/report.js\" type=\"text/javascript\"></script>\r\n</head>\r\n<body>\r\n<div id=\"content\">\r\n<h1>Test Summary</h1>\r\n<div id=\"summary\">\r\n<table>\r\n<tr>\r\n<td>\r\n<div class=\"summaryGroup\">\r\n<table>\r\n<tr>\r\n<td>\r\n<div class=\"infoBox\" id=\"tests\">\r\n<div class=\"counter\">1</div>\r\n<p>tests</p>\r\n</div>\r\n</td>\r\n<td>\r\n<div class=\"infoBox\" id=\"failures\">\r\n<div class=\"counter\">1</div>\r\n<p>failures</p>\r\n</div>\r\n</td>\r\n<td>\r\n<div class=\"infoBox\" id=\"ignored\">\r\n<div class=\"counter\">0</div>\r\n<p>ignored</p>\r\n</div>\r\n</td>\r\n<td>\r\n<div class=\"infoBox\" id=\"duration\">\r\n<div class=\"counter\">0.136s</div>\r\n<p>duration</p>\r\n</div>\r\n</td>\r\n</tr>\r\n</table>\r\n</div>\r\n</td>\r\n<td>\r\n<div class=\"infoBox failures\" id=\"successRate\">\r\n<div class=\"percent\">0%</div>\r\n<p>successful</p>\r\n</div>\r\n</td>\r\n</tr>\r\n</table>\r\n</div>\r\n<div id=\"tabs\">\r\n<ul class=\"tabLinks\">\r\n<li>\r\n<a href=\"#tab0\">Failed tests</a>\r\n</li>\r\n<li>\r\n<a href=\"#tab1\">Packages</a>\r\n</li>\r\n<li>\r\n<a href=\"#tab2\">Classes</a>\r\n</li>\r\n</ul>\r\n<div id=\"tab0\" class=\"tab\">\r\n<h2>Failed tests</h2>\r\n<ul class=\"linkList\">\r\n<li>\r\n<a href=\"classes/Tests.html\">Tests</a>.\r\n<a href=\"classes/Tests.html#start\">start</a>\r\n</li>\r\n</ul>\r\n</div>\r\n<div id=\"tab1\" class=\"tab\">\r\n<h2>Packages</h2>\r\n<table>\r\n<thead>\r\n<tr>\r\n<th>Package</th>\r\n<th>Tests</th>\r\n<th>Failures</th>\r\n<th>Ignored</th>\r\n<th>Duration</th>\r\n<th>Success rate</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td class=\"failures\">\r\n<a href=\"packages/default-package.html\">default-package</a>\r\n</td>\r\n<td>1</td>\r\n<td>1</td>\r\n<td>0</td>\r\n<td>0.136s</td>\r\n<td class=\"failures\">0%</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n<div id=\"tab2\" class=\"tab\">\r\n<h2>Classes</h2>\r\n<table>\r\n<thead>\r\n<tr>\r\n<th>Class</th>\r\n<th>Tests</th>\r\n<th>Failures</th>\r\n<th>Ignored</th>\r\n<th>Duration</th>\r\n<th>Success rate</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td class=\"failures\">\r\n<a href=\"classes/Tests.html\">Tests</a>\r\n</td>\r\n<td>1</td>\r\n<td>1</td>\r\n<td>0</td>\r\n<td>0.136s</td>\r\n<td class=\"failures\">0%</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<div id=\"footer\">\r\n<p>\r\n<div>\r\n<label class=\"hidden\" id=\"label-for-line-wrapping-toggle\" for=\"line-wrapping-toggle\">Wrap lines\r\n<input id=\"line-wrapping-toggle\" type=\"checkbox\" autocomplete=\"off\"/>\r\n</label>\r\n</div>Generated by \r\n<a href=\"http://www.gradle.org\">Gradle 7.3.3</a> at 17 мар. 2022 г., 12:55:54</p>\r\n</div>\r\n</div>\r\n</body>\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../HyperMetro/HyperMetro/task/build/reports/tests/test/index.html b/../HyperMetro/HyperMetro/task/build/reports/tests/test/index.html
--- a/../HyperMetro/HyperMetro/task/build/reports/tests/test/index.html	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../HyperMetro/HyperMetro/task/build/reports/tests/test/index.html	(date 1648369304419)
@@ -38,7 +38,7 @@
 </td>
 <td>
 <div class="infoBox" id="duration">
-<div class="counter">0.136s</div>
+<div class="counter">0.104s</div>
 <p>duration</p>
 </div>
 </td>
@@ -97,7 +97,7 @@
 <td>1</td>
 <td>1</td>
 <td>0</td>
-<td>0.136s</td>
+<td>0.104s</td>
 <td class="failures">0%</td>
 </tr>
 </tbody>
@@ -124,7 +124,7 @@
 <td>1</td>
 <td>1</td>
 <td>0</td>
-<td>0.136s</td>
+<td>0.104s</td>
 <td class="failures">0%</td>
 </tr>
 </tbody>
@@ -138,7 +138,7 @@
 <input id="line-wrapping-toggle" type="checkbox" autocomplete="off"/>
 </label>
 </div>Generated by 
-<a href="http://www.gradle.org">Gradle 7.3.3</a> at 17 мар. 2022 г., 12:55:54</p>
+<a href="http://www.gradle.org">Gradle 7.3.3</a> at 27 мар. 2022 г., 11:21:44</p>
 </div>
 </div>
 </body>
Index: .idea/libraries/Gradle__org_ow2_asm_asm_9_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_ow2_asm_asm_9_1.xml b/.idea/libraries/Gradle__org_ow2_asm_asm_9_1.xml
new file mode 100644
--- /dev/null	(date 1648813961706)
+++ b/.idea/libraries/Gradle__org_ow2_asm_asm_9_1.xml	(date 1648813961706)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.ow2.asm:asm:9.1">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.ow2.asm/asm/9.1/a99500cf6eea30535eeac6be73899d048f8d12a8/asm-9.1.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.ow2.asm/asm/9.1/3fb15dd478bf8dcb039aa0d035f9fff9e4229c61/asm-9.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: Web Quiz Engine/task/src/engine/presentation/Answer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Web Quiz Engine/task/src/engine/presentation/Answer.java b/Web Quiz Engine/task/src/engine/presentation/Answer.java
new file mode 100644
--- /dev/null	(date 1649084757010)
+++ b/Web Quiz Engine/task/src/engine/presentation/Answer.java	(date 1649084757010)
@@ -0,0 +1,50 @@
+package engine.presentation;
+
+
+import com.fasterxml.jackson.annotation.JsonIgnore;
+import com.fasterxml.jackson.annotation.JsonProperty;
+
+import java.util.List;
+
+public class Answer {
+
+    private boolean success;
+    private String feedback;
+    private List<Integer> answer;
+
+    @JsonIgnore
+    public List<Integer> getAnswer() {
+        return answer;
+    }
+
+    @JsonProperty
+    public void setAnswer(List<Integer> answer) {
+        this.answer = answer;
+    }
+
+    public Answer() {
+
+    }
+
+    public Answer(boolean success, String feedback) {
+        this.success = success;
+        this.feedback = feedback;
+
+    }
+
+    public boolean getSuccess() {
+        return success;
+    }
+
+    public void setSuccess(boolean success) {
+        this.success = success;
+    }
+
+    public String getFeedback() {
+        return feedback;
+    }
+
+    public void setFeedback(String feedback) {
+        this.feedback = feedback;
+    }
+}
Index: .idea/libraries/Gradle__org_opentest4j_opentest4j_1_2_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_opentest4j_opentest4j_1_2_0.xml b/.idea/libraries/Gradle__org_opentest4j_opentest4j_1_2_0.xml
new file mode 100644
--- /dev/null	(date 1648813961698)
+++ b/.idea/libraries/Gradle__org_opentest4j_opentest4j_1_2_0.xml	(date 1648813961698)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.opentest4j:opentest4j:1.2.0">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.opentest4j/opentest4j/1.2.0/28c11eb91f9b6d8e200631d46e20a7f407f2a046/opentest4j-1.2.0.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.opentest4j/opentest4j/1.2.0/41d55b3c2254de9837b4ec8923cbd371b8a7eab5/opentest4j-1.2.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_junit_platform_junit_platform_commons_1_7_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_junit_platform_junit_platform_commons_1_7_2.xml b/.idea/libraries/Gradle__org_junit_platform_junit_platform_commons_1_7_2.xml
new file mode 100644
--- /dev/null	(date 1648813961661)
+++ b/.idea/libraries/Gradle__org_junit_platform_junit_platform_commons_1_7_2.xml	(date 1648813961661)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.junit.platform:junit-platform-commons:1.7.2">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.junit.platform/junit-platform-commons/1.7.2/34adfea6c13fc4a996cf38cdad80800ce850d198/junit-platform-commons-1.7.2.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.junit.platform/junit-platform-commons/1.7.2/1ff6be63f8bb2ef0d8c20b771a1d9160b6077a81/junit-platform-commons-1.7.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: Web Quiz Engine/task/src/engine/businesslayer/services/QuizService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Web Quiz Engine/task/src/engine/businesslayer/services/QuizService.java b/Web Quiz Engine/task/src/engine/businesslayer/services/QuizService.java
new file mode 100644
--- /dev/null	(date 1649351803242)
+++ b/Web Quiz Engine/task/src/engine/businesslayer/services/QuizService.java	(date 1649351803242)
@@ -0,0 +1,60 @@
+package engine.businesslayer.services;
+
+import engine.businesslayer.Quiz;
+import engine.persistence.QuizRepository;
+import engine.presentation.Answer;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.http.HttpStatus;
+import org.springframework.stereotype.Service;
+import org.springframework.web.server.ResponseStatusException;
+
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.List;
+import java.util.Objects;
+
+@Service
+public class QuizService {
+    private final QuizRepository quizRepository;
+
+    @Autowired
+    public QuizService(QuizRepository quizRepository) {
+        this.quizRepository = quizRepository;
+    }
+
+    public Quiz findQuizById(Long id) {
+        return quizRepository.findById(id).orElseThrow(() -> new ResponseStatusException(HttpStatus.NOT_FOUND, "No such quiz"));
+    }
+
+    public List<Quiz> findAllQuiz() {
+        Iterable<Quiz> iterable = quizRepository.findAll();
+        List<Quiz> quizzes = new ArrayList<>();
+        iterable.iterator().forEachRemaining(quizzes::add);
+        return quizzes;
+    }
+
+    public void saveNewQuizzes(Quiz quiz) {
+        quizRepository.save(quiz);
+    }
+
+    public Answer returnAnswer(Quiz quiz, Answer answer) {
+        if (answer.getAnswer() == null)
+            answer.setAnswer(new ArrayList<>());
+        if (quiz.getAnswer() == null)
+            quiz.setAnswer(new ArrayList<>());
+        List<Integer> listFromQuiz = quiz.getAnswer();
+        List<Integer> listFromAnswer = answer.getAnswer();
+        Collections.sort(listFromAnswer);
+        Collections.sort(listFromQuiz);
+
+        return Objects.deepEquals(listFromAnswer, listFromQuiz) ?
+                new Answer(true, "Congratulations, you're right!") :
+                new Answer(false, "Wrong answer! Please, try again.");
+    }
+
+    public void delete(Long id) {
+        quizRepository.delete(quizRepository.findById(id)
+                .orElseThrow(() -> new ResponseStatusException(HttpStatus.NOT_FOUND, "No such quiz")));
+        quizRepository.findById(id).orElseThrow(() -> new ResponseStatusException(HttpStatus.NO_CONTENT));
+    }
+}
Index: .idea/libraries/Gradle__org_junit_jupiter_junit_jupiter_params_5_7_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_junit_jupiter_junit_jupiter_params_5_7_2.xml b/.idea/libraries/Gradle__org_junit_jupiter_junit_jupiter_params_5_7_2.xml
new file mode 100644
--- /dev/null	(date 1648813961654)
+++ b/.idea/libraries/Gradle__org_junit_jupiter_junit_jupiter_params_5_7_2.xml	(date 1648813961654)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.junit.jupiter:junit-jupiter-params:5.7.2">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.junit.jupiter/junit-jupiter-params/5.7.2/685f832f8c54dd40100f646d61aca88ed9545421/junit-jupiter-params-5.7.2.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.junit.jupiter/junit-jupiter-params/5.7.2/45d7318c86fa4c826fab267fadc0839d40267da2/junit-jupiter-params-5.7.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_mockito_mockito_core_3_9_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_mockito_mockito_core_3_9_0.xml b/.idea/libraries/Gradle__org_mockito_mockito_core_3_9_0.xml
new file mode 100644
--- /dev/null	(date 1648813961675)
+++ b/.idea/libraries/Gradle__org_mockito_mockito_core_3_9_0.xml	(date 1648813961675)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.mockito:mockito-core:3.9.0">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.mockito/mockito-core/3.9.0/b7573430aea743b26434b44f4f46272af613e660/mockito-core-3.9.0.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.mockito/mockito-core/3.9.0/3f2009c0b6ec7ed0274491dedd71bc4b9e19ab33/mockito-core-3.9.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: Web Quiz Engine/task/out/production/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>server.port=8889\r\nmanagement.endpoints.web.exposure.include=*\r\nmanagement.endpoint.shutdown.enabled=true\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Web Quiz Engine/task/out/production/resources/application.properties b/Web Quiz Engine/task/out/production/resources/application.properties
--- a/Web Quiz Engine/task/out/production/resources/application.properties	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/Web Quiz Engine/task/out/production/resources/application.properties	(date 1649353232798)
@@ -1,3 +1,20 @@
 server.port=8889
 management.endpoints.web.exposure.include=*
 management.endpoint.shutdown.enabled=true
+server.error.include-message=always
+
+#datasource settings
+spring.datasource.url=jdbc:h2:file:../quizdb
+spring.datasource.driverClassName=org.h2.Driver
+spring.datasource.username=sa
+spring.datasource.password=password
+
+#data settings
+spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
+spring.jpa.hibernate.ddl-auto=create
+
+#console settings
+spring.h2.console.enabled=true
+spring.h2.console.settings.trace=false
+spring.h2.console.settings.web-allow-others=false
+spring.jpa.show-sql=false
\ No newline at end of file
Index: Web Quiz Engine/task/src/engine/persistence/QuizRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Web Quiz Engine/task/src/engine/persistence/QuizRepository.java b/Web Quiz Engine/task/src/engine/persistence/QuizRepository.java
new file mode 100644
--- /dev/null	(date 1649084307535)
+++ b/Web Quiz Engine/task/src/engine/persistence/QuizRepository.java	(date 1649084307535)
@@ -0,0 +1,7 @@
+package engine.persistence;
+
+import engine.businesslayer.Quiz;
+import org.springframework.data.repository.CrudRepository;
+
+public interface QuizRepository extends CrudRepository<Quiz, Long> {
+}
Index: .idea/libraries/Gradle__org_junit_platform_junit_platform_engine_1_7_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_junit_platform_junit_platform_engine_1_7_2.xml b/.idea/libraries/Gradle__org_junit_platform_junit_platform_engine_1_7_2.xml
new file mode 100644
--- /dev/null	(date 1648813961668)
+++ b/.idea/libraries/Gradle__org_junit_platform_junit_platform_engine_1_7_2.xml	(date 1648813961668)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.junit.platform:junit-platform-engine:1.7.2">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.junit.platform/junit-platform-engine/1.7.2/2573770b46b8a199ed5f6b0f96fb99e468bfe891/junit-platform-engine-1.7.2.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.junit.platform/junit-platform-engine/1.7.2/4d160bb45611331ab4feba5dde85ebceb05a824e/junit-platform-engine-1.7.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_springframework_boot_spring_boot_test_2_5_6.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_springframework_boot_spring_boot_test_2_5_6.xml b/.idea/libraries/Gradle__org_springframework_boot_spring_boot_test_2_5_6.xml
new file mode 100644
--- /dev/null	(date 1648813961744)
+++ b/.idea/libraries/Gradle__org_springframework_boot_spring_boot_test_2_5_6.xml	(date 1648813961744)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.springframework.boot:spring-boot-test:2.5.6">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-test/2.5.6/d51fcfd9c4f1236e6460a476be93c96a5687612e/spring-boot-test-2.5.6.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-test/2.5.6/4e40dc9a204a4f0b5f560a4002e64814f4f409ad/spring-boot-test-2.5.6-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../HyperMetro/HyperMetro/task/build/reports/tests/test/classes/Tests.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\r\n<meta http-equiv=\"x-ua-compatible\" content=\"IE=edge\"/>\r\n<title>Test results - Class Tests</title>\r\n<link href=\"../css/base-style.css\" rel=\"stylesheet\" type=\"text/css\"/>\r\n<link href=\"../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/>\r\n<script src=\"../js/report.js\" type=\"text/javascript\"></script>\r\n</head>\r\n<body>\r\n<div id=\"content\">\r\n<h1>Class Tests</h1>\r\n<div class=\"breadcrumbs\">\r\n<a href=\"../index.html\">all</a> &gt; \r\n<a href=\"../packages/default-package.html\">default-package</a> &gt; Tests</div>\r\n<div id=\"summary\">\r\n<table>\r\n<tr>\r\n<td>\r\n<div class=\"summaryGroup\">\r\n<table>\r\n<tr>\r\n<td>\r\n<div class=\"infoBox\" id=\"tests\">\r\n<div class=\"counter\">1</div>\r\n<p>tests</p>\r\n</div>\r\n</td>\r\n<td>\r\n<div class=\"infoBox\" id=\"failures\">\r\n<div class=\"counter\">1</div>\r\n<p>failures</p>\r\n</div>\r\n</td>\r\n<td>\r\n<div class=\"infoBox\" id=\"ignored\">\r\n<div class=\"counter\">0</div>\r\n<p>ignored</p>\r\n</div>\r\n</td>\r\n<td>\r\n<div class=\"infoBox\" id=\"duration\">\r\n<div class=\"counter\">0.136s</div>\r\n<p>duration</p>\r\n</div>\r\n</td>\r\n</tr>\r\n</table>\r\n</div>\r\n</td>\r\n<td>\r\n<div class=\"infoBox failures\" id=\"successRate\">\r\n<div class=\"percent\">0%</div>\r\n<p>successful</p>\r\n</div>\r\n</td>\r\n</tr>\r\n</table>\r\n</div>\r\n<div id=\"tabs\">\r\n<ul class=\"tabLinks\">\r\n<li>\r\n<a href=\"#tab0\">Failed tests</a>\r\n</li>\r\n<li>\r\n<a href=\"#tab1\">Tests</a>\r\n</li>\r\n<li>\r\n<a href=\"#tab2\">Standard output</a>\r\n</li>\r\n</ul>\r\n<div id=\"tab0\" class=\"tab\">\r\n<h2>Failed tests</h2>\r\n<div class=\"test\">\r\n<a name=\"start\"></a>\r\n<h3 class=\"failures\">start</h3>\r\n<span class=\"code\">\r\n<pre>java.lang.AssertionError: Error in test #1\r\n\r\nThe program Main has unexpectedly terminated.\r\nIt finished execution too early, should continue running.\r\n\r\nPlease find below the output of your program during this failed test.\r\n\r\n---\r\n\r\nArguments: ./test/baltimore.json\r\n\r\ndepot - { -   &quot;SubwayLink&quot;: {\r\n{ -   &quot;SubwayLink&quot;: { -     &quot;1&quot;: &quot;Owings Mills&quot;,\r\n  &quot;SubwayLink&quot;: { -     &quot;1&quot;: &quot;Owings Mills&quot;, -     &quot;2&quot;: &quot;Old Court&quot;,\r\n    &quot;1&quot;: &quot;Owings Mills&quot;, -     &quot;2&quot;: &quot;Old Court&quot;, -     &quot;3&quot;: &quot;Milford Mill&quot;,\r\n    &quot;2&quot;: &quot;Old Court&quot;, -     &quot;3&quot;: &quot;Milford Mill&quot;, -     &quot;4&quot;: &quot;Reiserstown Plaza&quot;,\r\n    &quot;3&quot;: &quot;Milford Mill&quot;, -     &quot;4&quot;: &quot;Reiserstown Plaza&quot;, -     &quot;5&quot;: &quot;Rogers Avenue&quot;,\r\n    &quot;4&quot;: &quot;Reiserstown Plaza&quot;, -     &quot;5&quot;: &quot;Rogers Avenue&quot;, -     &quot;6&quot;: &quot;West Cold Spring&quot;,\r\n    &quot;5&quot;: &quot;Rogers Avenue&quot;, -     &quot;6&quot;: &quot;West Cold Spring&quot;, -     &quot;7&quot;: &quot;Mondawmin&quot;,\r\n    &quot;6&quot;: &quot;West Cold Spring&quot;, -     &quot;7&quot;: &quot;Mondawmin&quot;, -     &quot;8&quot;: &quot;Penn North&quot;,\r\n    &quot;7&quot;: &quot;Mondawmin&quot;, -     &quot;8&quot;: &quot;Penn North&quot;, -     &quot;9&quot;: &quot;Uptown&quot;,\r\n    &quot;8&quot;: &quot;Penn North&quot;, -     &quot;9&quot;: &quot;Uptown&quot;, -     &quot;10&quot;: &quot;State Center&quot;,\r\n    &quot;9&quot;: &quot;Uptown&quot;, -     &quot;10&quot;: &quot;State Center&quot;, -     &quot;11&quot;: &quot;Lexington Market&quot;,\r\n    &quot;10&quot;: &quot;State Center&quot;, -     &quot;11&quot;: &quot;Lexington Market&quot;, -     &quot;12&quot;: &quot;Charles Center&quot;,\r\n    &quot;11&quot;: &quot;Lexington Market&quot;, -     &quot;12&quot;: &quot;Charles Center&quot;, -     &quot;13&quot;: &quot;Shot Tower/Market Place&quot;,\r\n    &quot;12&quot;: &quot;Charles Center&quot;, -     &quot;13&quot;: &quot;Shot Tower/Market Place&quot;, -     &quot;14&quot;: &quot;Johns Hopkins Hospital&quot;\r\n    &quot;13&quot;: &quot;Shot Tower/Market Place&quot;, -     &quot;14&quot;: &quot;Johns Hopkins Hospital&quot; -   }\r\n    &quot;14&quot;: &quot;Johns Hopkins Hospital&quot; -   } - }\r\n  } - } - depot\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.hyperskill.hstest.stage.StageTest.start(StageTest.java:155)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)\r\n\tat org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)\r\n\tat org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)\r\n\tat org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)\r\n\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\r\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\r\n\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)\r\n\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)\r\n\tat jdk.proxy1/jdk.proxy1.$Proxy2.processTestClass(Unknown Source)\r\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker$2.run(TestWorker.java:176)\r\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)\r\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)\r\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)\r\n\tat org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)\r\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133)\r\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)\r\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)\r\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)\r\n</pre>\r\n</span>\r\n</div>\r\n</div>\r\n<div id=\"tab1\" class=\"tab\">\r\n<h2>Tests</h2>\r\n<table>\r\n<thead>\r\n<tr>\r\n<th>Test</th>\r\n<th>Duration</th>\r\n<th>Result</th>\r\n</tr>\r\n</thead>\r\n<tr>\r\n<td class=\"failures\">start</td>\r\n<td class=\"failures\">0.136s</td>\r\n<td class=\"failures\">failed</td>\r\n</tr>\r\n</table>\r\n</div>\r\n<div id=\"tab2\" class=\"tab\">\r\n<h2>Standard output</h2>\r\n<span class=\"code\">\r\n<pre>?[1;31m\r\nStart test 1?[0m\r\ndepot - { -   &quot;SubwayLink&quot;: {\r\n{ -   &quot;SubwayLink&quot;: { -     &quot;1&quot;: &quot;Owings Mills&quot;,\r\n  &quot;SubwayLink&quot;: { -     &quot;1&quot;: &quot;Owings Mills&quot;, -     &quot;2&quot;: &quot;Old Court&quot;,\r\n    &quot;1&quot;: &quot;Owings Mills&quot;, -     &quot;2&quot;: &quot;Old Court&quot;, -     &quot;3&quot;: &quot;Milford Mill&quot;,\r\n    &quot;2&quot;: &quot;Old Court&quot;, -     &quot;3&quot;: &quot;Milford Mill&quot;, -     &quot;4&quot;: &quot;Reiserstown Plaza&quot;,\r\n    &quot;3&quot;: &quot;Milford Mill&quot;, -     &quot;4&quot;: &quot;Reiserstown Plaza&quot;, -     &quot;5&quot;: &quot;Rogers Avenue&quot;,\r\n    &quot;4&quot;: &quot;Reiserstown Plaza&quot;, -     &quot;5&quot;: &quot;Rogers Avenue&quot;, -     &quot;6&quot;: &quot;West Cold Spring&quot;,\r\n    &quot;5&quot;: &quot;Rogers Avenue&quot;, -     &quot;6&quot;: &quot;West Cold Spring&quot;, -     &quot;7&quot;: &quot;Mondawmin&quot;,\r\n    &quot;6&quot;: &quot;West Cold Spring&quot;, -     &quot;7&quot;: &quot;Mondawmin&quot;, -     &quot;8&quot;: &quot;Penn North&quot;,\r\n    &quot;7&quot;: &quot;Mondawmin&quot;, -     &quot;8&quot;: &quot;Penn North&quot;, -     &quot;9&quot;: &quot;Uptown&quot;,\r\n    &quot;8&quot;: &quot;Penn North&quot;, -     &quot;9&quot;: &quot;Uptown&quot;, -     &quot;10&quot;: &quot;State Center&quot;,\r\n    &quot;9&quot;: &quot;Uptown&quot;, -     &quot;10&quot;: &quot;State Center&quot;, -     &quot;11&quot;: &quot;Lexington Market&quot;,\r\n    &quot;10&quot;: &quot;State Center&quot;, -     &quot;11&quot;: &quot;Lexington Market&quot;, -     &quot;12&quot;: &quot;Charles Center&quot;,\r\n    &quot;11&quot;: &quot;Lexington Market&quot;, -     &quot;12&quot;: &quot;Charles Center&quot;, -     &quot;13&quot;: &quot;Shot Tower/Market Place&quot;,\r\n    &quot;12&quot;: &quot;Charles Center&quot;, -     &quot;13&quot;: &quot;Shot Tower/Market Place&quot;, -     &quot;14&quot;: &quot;Johns Hopkins Hospital&quot;\r\n    &quot;13&quot;: &quot;Shot Tower/Market Place&quot;, -     &quot;14&quot;: &quot;Johns Hopkins Hospital&quot; -   }\r\n    &quot;14&quot;: &quot;Johns Hopkins Hospital&quot; -   } - }\r\n  } - } - depot\r\n</pre>\r\n</span>\r\n</div>\r\n</div>\r\n<div id=\"footer\">\r\n<p>\r\n<div>\r\n<label class=\"hidden\" id=\"label-for-line-wrapping-toggle\" for=\"line-wrapping-toggle\">Wrap lines\r\n<input id=\"line-wrapping-toggle\" type=\"checkbox\" autocomplete=\"off\"/>\r\n</label>\r\n</div>Generated by \r\n<a href=\"http://www.gradle.org\">Gradle 7.3.3</a> at 17 мар. 2022 г., 12:55:54</p>\r\n</div>\r\n</div>\r\n</body>\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../HyperMetro/HyperMetro/task/build/reports/tests/test/classes/Tests.html b/../HyperMetro/HyperMetro/task/build/reports/tests/test/classes/Tests.html
--- a/../HyperMetro/HyperMetro/task/build/reports/tests/test/classes/Tests.html	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../HyperMetro/HyperMetro/task/build/reports/tests/test/classes/Tests.html	(date 1648369304419)
@@ -41,7 +41,7 @@
 </td>
 <td>
 <div class="infoBox" id="duration">
-<div class="counter">0.136s</div>
+<div class="counter">0.104s</div>
 <p>duration</p>
 </div>
 </td>
@@ -76,35 +76,16 @@
 <a name="start"></a>
 <h3 class="failures">start</h3>
 <span class="code">
-<pre>java.lang.AssertionError: Error in test #1
-
-The program Main has unexpectedly terminated.
-It finished execution too early, should continue running.
+<pre>java.lang.AssertionError: Exception in test #1
 
-Please find below the output of your program during this failed test.
+java.lang.IllegalStateException: Not a JSON Array: {&quot;1&quot;:{&quot;name&quot;:&quot;Renes—Gare&quot;,&quot;transfer&quot;:[],&quot;time&quot;:3},&quot;2&quot;:{&quot;name&quot;:&quot;Epenex&quot;,&quot;transfer&quot;:[],&quot;time&quot;:2},&quot;3&quot;:{&quot;name&quot;:&quot;Crochy&quot;,&quot;transfer&quot;:[],&quot;time&quot;:6},&quot;4&quot;:{&quot;name&quot;:&quot;Cerisaie&quot;,&quot;transfer&quot;:[],&quot;time&quot;:5},&quot;5&quot;:{&quot;name&quot;:&quot;Bassenges&quot;,&quot;transfer&quot;:[],&quot;time&quot;:4},&quot;6&quot;:{&quot;name&quot;:&quot;EPFL&quot;,&quot;transfer&quot;:[],&quot;time&quot;:6},&quot;7&quot;:{&quot;name&quot;:&quot;UNL—Sorge&quot;,&quot;transfer&quot;:[],&quot;time&quot;:8},&quot;8&quot;:{&quot;name&quot;:&quot;Mouline&quot;,&quot;transfer&quot;:[],&quot;time&quot;:5},&quot;9&quot;:{&quot;name&quot;:&quot;UNL—Chemberonne&quot;,&quot;transfer&quot;:[],&quot;time&quot;:4},&quot;10&quot;:{&quot;name&quot;:&quot;Bourdonnette&quot;,&quot;transfer&quot;:[],&quot;time&quot;:5},&quot;11&quot;:{&quot;name&quot;:&quot;Melley&quot;,&quot;transfer&quot;:[],&quot;time&quot;:7},&quot;12&quot;:{&quot;name&quot;:&quot;Provence&quot;,&quot;transfer&quot;:[],&quot;time&quot;:6},&quot;13&quot;:{&quot;name&quot;:&quot;Montelly&quot;,&quot;transfer&quot;:[],&quot;time&quot;:5},&quot;14&quot;:{&quot;name&quot;:&quot;Vigie&quot;,&quot;transfer&quot;:[],&quot;time&quot;:4},&quot;15&quot;:{&quot;name&quot;:&quot;Lausanne—Flon&quot;,&quot;transfer&quot;:[],&quot;time&quot;:null}}
+	at com.google.gson.JsonElement.getAsJsonArray(JsonElement.java:107)
+	at metro.database.ReadSubwayData.fillMap(ReadSubwayData.java:53)
+	at metro.database.ReadSubwayData.readFromFile(ReadSubwayData.java:30)
+	at metro.database.Subway.populateMap(Subway.java:16)
+	at metro.Main.main(Main.java:12)
 
----
-
-Arguments: ./test/baltimore.json
-
-depot - { -   &quot;SubwayLink&quot;: {
-{ -   &quot;SubwayLink&quot;: { -     &quot;1&quot;: &quot;Owings Mills&quot;,
-  &quot;SubwayLink&quot;: { -     &quot;1&quot;: &quot;Owings Mills&quot;, -     &quot;2&quot;: &quot;Old Court&quot;,
-    &quot;1&quot;: &quot;Owings Mills&quot;, -     &quot;2&quot;: &quot;Old Court&quot;, -     &quot;3&quot;: &quot;Milford Mill&quot;,
-    &quot;2&quot;: &quot;Old Court&quot;, -     &quot;3&quot;: &quot;Milford Mill&quot;, -     &quot;4&quot;: &quot;Reiserstown Plaza&quot;,
-    &quot;3&quot;: &quot;Milford Mill&quot;, -     &quot;4&quot;: &quot;Reiserstown Plaza&quot;, -     &quot;5&quot;: &quot;Rogers Avenue&quot;,
-    &quot;4&quot;: &quot;Reiserstown Plaza&quot;, -     &quot;5&quot;: &quot;Rogers Avenue&quot;, -     &quot;6&quot;: &quot;West Cold Spring&quot;,
-    &quot;5&quot;: &quot;Rogers Avenue&quot;, -     &quot;6&quot;: &quot;West Cold Spring&quot;, -     &quot;7&quot;: &quot;Mondawmin&quot;,
-    &quot;6&quot;: &quot;West Cold Spring&quot;, -     &quot;7&quot;: &quot;Mondawmin&quot;, -     &quot;8&quot;: &quot;Penn North&quot;,
-    &quot;7&quot;: &quot;Mondawmin&quot;, -     &quot;8&quot;: &quot;Penn North&quot;, -     &quot;9&quot;: &quot;Uptown&quot;,
-    &quot;8&quot;: &quot;Penn North&quot;, -     &quot;9&quot;: &quot;Uptown&quot;, -     &quot;10&quot;: &quot;State Center&quot;,
-    &quot;9&quot;: &quot;Uptown&quot;, -     &quot;10&quot;: &quot;State Center&quot;, -     &quot;11&quot;: &quot;Lexington Market&quot;,
-    &quot;10&quot;: &quot;State Center&quot;, -     &quot;11&quot;: &quot;Lexington Market&quot;, -     &quot;12&quot;: &quot;Charles Center&quot;,
-    &quot;11&quot;: &quot;Lexington Market&quot;, -     &quot;12&quot;: &quot;Charles Center&quot;, -     &quot;13&quot;: &quot;Shot Tower/Market Place&quot;,
-    &quot;12&quot;: &quot;Charles Center&quot;, -     &quot;13&quot;: &quot;Shot Tower/Market Place&quot;, -     &quot;14&quot;: &quot;Johns Hopkins Hospital&quot;
-    &quot;13&quot;: &quot;Shot Tower/Market Place&quot;, -     &quot;14&quot;: &quot;Johns Hopkins Hospital&quot; -   }
-    &quot;14&quot;: &quot;Johns Hopkins Hospital&quot; -   } - }
-  } - } - depot
+Arguments: ./test/lausanne.json
 	at org.junit.Assert.fail(Assert.java:88)
 	at org.hyperskill.hstest.stage.StageTest.start(StageTest.java:155)
 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
@@ -163,7 +144,7 @@
 </thead>
 <tr>
 <td class="failures">start</td>
-<td class="failures">0.136s</td>
+<td class="failures">0.104s</td>
 <td class="failures">failed</td>
 </tr>
 </table>
@@ -173,24 +154,6 @@
 <span class="code">
 <pre>?[1;31m
 Start test 1?[0m
-depot - { -   &quot;SubwayLink&quot;: {
-{ -   &quot;SubwayLink&quot;: { -     &quot;1&quot;: &quot;Owings Mills&quot;,
-  &quot;SubwayLink&quot;: { -     &quot;1&quot;: &quot;Owings Mills&quot;, -     &quot;2&quot;: &quot;Old Court&quot;,
-    &quot;1&quot;: &quot;Owings Mills&quot;, -     &quot;2&quot;: &quot;Old Court&quot;, -     &quot;3&quot;: &quot;Milford Mill&quot;,
-    &quot;2&quot;: &quot;Old Court&quot;, -     &quot;3&quot;: &quot;Milford Mill&quot;, -     &quot;4&quot;: &quot;Reiserstown Plaza&quot;,
-    &quot;3&quot;: &quot;Milford Mill&quot;, -     &quot;4&quot;: &quot;Reiserstown Plaza&quot;, -     &quot;5&quot;: &quot;Rogers Avenue&quot;,
-    &quot;4&quot;: &quot;Reiserstown Plaza&quot;, -     &quot;5&quot;: &quot;Rogers Avenue&quot;, -     &quot;6&quot;: &quot;West Cold Spring&quot;,
-    &quot;5&quot;: &quot;Rogers Avenue&quot;, -     &quot;6&quot;: &quot;West Cold Spring&quot;, -     &quot;7&quot;: &quot;Mondawmin&quot;,
-    &quot;6&quot;: &quot;West Cold Spring&quot;, -     &quot;7&quot;: &quot;Mondawmin&quot;, -     &quot;8&quot;: &quot;Penn North&quot;,
-    &quot;7&quot;: &quot;Mondawmin&quot;, -     &quot;8&quot;: &quot;Penn North&quot;, -     &quot;9&quot;: &quot;Uptown&quot;,
-    &quot;8&quot;: &quot;Penn North&quot;, -     &quot;9&quot;: &quot;Uptown&quot;, -     &quot;10&quot;: &quot;State Center&quot;,
-    &quot;9&quot;: &quot;Uptown&quot;, -     &quot;10&quot;: &quot;State Center&quot;, -     &quot;11&quot;: &quot;Lexington Market&quot;,
-    &quot;10&quot;: &quot;State Center&quot;, -     &quot;11&quot;: &quot;Lexington Market&quot;, -     &quot;12&quot;: &quot;Charles Center&quot;,
-    &quot;11&quot;: &quot;Lexington Market&quot;, -     &quot;12&quot;: &quot;Charles Center&quot;, -     &quot;13&quot;: &quot;Shot Tower/Market Place&quot;,
-    &quot;12&quot;: &quot;Charles Center&quot;, -     &quot;13&quot;: &quot;Shot Tower/Market Place&quot;, -     &quot;14&quot;: &quot;Johns Hopkins Hospital&quot;
-    &quot;13&quot;: &quot;Shot Tower/Market Place&quot;, -     &quot;14&quot;: &quot;Johns Hopkins Hospital&quot; -   }
-    &quot;14&quot;: &quot;Johns Hopkins Hospital&quot; -   } - }
-  } - } - depot
 </pre>
 </span>
 </div>
@@ -202,7 +165,7 @@
 <input id="line-wrapping-toggle" type="checkbox" autocomplete="off"/>
 </label>
 </div>Generated by 
-<a href="http://www.gradle.org">Gradle 7.3.3</a> at 17 мар. 2022 г., 12:55:54</p>
+<a href="http://www.gradle.org">Gradle 7.3.3</a> at 27 мар. 2022 г., 11:21:44</p>
 </div>
 </div>
 </body>
Index: .idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_test_2_5_6.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_test_2_5_6.xml b/.idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_test_2_5_6.xml
new file mode 100644
--- /dev/null	(date 1648813961739)
+++ b/.idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_test_2_5_6.xml	(date 1648813961739)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.springframework.boot:spring-boot-starter-test:2.5.6">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-test/2.5.6/ae7b6c974539d7789bfff7bb150b333f1ffb5795/spring-boot-starter-test-2.5.6.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-test/2.5.6/e80d49065e0c4b65583419b0493d63059ba6ad98/spring-boot-starter-test-2.5.6-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../HyperMetro/HyperMetro/task/build/reports/tests/test/packages/default-package.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\r\n<meta http-equiv=\"x-ua-compatible\" content=\"IE=edge\"/>\r\n<title>Test results - Default package</title>\r\n<link href=\"../css/base-style.css\" rel=\"stylesheet\" type=\"text/css\"/>\r\n<link href=\"../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/>\r\n<script src=\"../js/report.js\" type=\"text/javascript\"></script>\r\n</head>\r\n<body>\r\n<div id=\"content\">\r\n<h1>Default package</h1>\r\n<div class=\"breadcrumbs\">\r\n<a href=\"../index.html\">all</a> &gt; default-package</div>\r\n<div id=\"summary\">\r\n<table>\r\n<tr>\r\n<td>\r\n<div class=\"summaryGroup\">\r\n<table>\r\n<tr>\r\n<td>\r\n<div class=\"infoBox\" id=\"tests\">\r\n<div class=\"counter\">1</div>\r\n<p>tests</p>\r\n</div>\r\n</td>\r\n<td>\r\n<div class=\"infoBox\" id=\"failures\">\r\n<div class=\"counter\">1</div>\r\n<p>failures</p>\r\n</div>\r\n</td>\r\n<td>\r\n<div class=\"infoBox\" id=\"ignored\">\r\n<div class=\"counter\">0</div>\r\n<p>ignored</p>\r\n</div>\r\n</td>\r\n<td>\r\n<div class=\"infoBox\" id=\"duration\">\r\n<div class=\"counter\">0.136s</div>\r\n<p>duration</p>\r\n</div>\r\n</td>\r\n</tr>\r\n</table>\r\n</div>\r\n</td>\r\n<td>\r\n<div class=\"infoBox failures\" id=\"successRate\">\r\n<div class=\"percent\">0%</div>\r\n<p>successful</p>\r\n</div>\r\n</td>\r\n</tr>\r\n</table>\r\n</div>\r\n<div id=\"tabs\">\r\n<ul class=\"tabLinks\">\r\n<li>\r\n<a href=\"#tab0\">Failed tests</a>\r\n</li>\r\n<li>\r\n<a href=\"#tab1\">Classes</a>\r\n</li>\r\n</ul>\r\n<div id=\"tab0\" class=\"tab\">\r\n<h2>Failed tests</h2>\r\n<ul class=\"linkList\">\r\n<li>\r\n<a href=\"../classes/Tests.html\">Tests</a>.\r\n<a href=\"../classes/Tests.html#start\">start</a>\r\n</li>\r\n</ul>\r\n</div>\r\n<div id=\"tab1\" class=\"tab\">\r\n<h2>Classes</h2>\r\n<table>\r\n<thread>\r\n<tr>\r\n<th>Class</th>\r\n<th>Tests</th>\r\n<th>Failures</th>\r\n<th>Ignored</th>\r\n<th>Duration</th>\r\n<th>Success rate</th>\r\n</tr>\r\n</thread>\r\n<tr>\r\n<td class=\"failures\">\r\n<a href=\"../classes/Tests.html\">Tests</a>\r\n</td>\r\n<td>1</td>\r\n<td>1</td>\r\n<td>0</td>\r\n<td>0.136s</td>\r\n<td class=\"failures\">0%</td>\r\n</tr>\r\n</table>\r\n</div>\r\n</div>\r\n<div id=\"footer\">\r\n<p>\r\n<div>\r\n<label class=\"hidden\" id=\"label-for-line-wrapping-toggle\" for=\"line-wrapping-toggle\">Wrap lines\r\n<input id=\"line-wrapping-toggle\" type=\"checkbox\" autocomplete=\"off\"/>\r\n</label>\r\n</div>Generated by \r\n<a href=\"http://www.gradle.org\">Gradle 7.3.3</a> at 17 мар. 2022 г., 12:55:54</p>\r\n</div>\r\n</div>\r\n</body>\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../HyperMetro/HyperMetro/task/build/reports/tests/test/packages/default-package.html b/../HyperMetro/HyperMetro/task/build/reports/tests/test/packages/default-package.html
--- a/../HyperMetro/HyperMetro/task/build/reports/tests/test/packages/default-package.html	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../HyperMetro/HyperMetro/task/build/reports/tests/test/packages/default-package.html	(date 1648369304419)
@@ -40,7 +40,7 @@
 </td>
 <td>
 <div class="infoBox" id="duration">
-<div class="counter">0.136s</div>
+<div class="counter">0.104s</div>
 <p>duration</p>
 </div>
 </td>
@@ -95,7 +95,7 @@
 <td>1</td>
 <td>1</td>
 <td>0</td>
-<td>0.136s</td>
+<td>0.104s</td>
 <td class="failures">0%</td>
 </tr>
 </table>
@@ -108,7 +108,7 @@
 <input id="line-wrapping-toggle" type="checkbox" autocomplete="off"/>
 </label>
 </div>Generated by 
-<a href="http://www.gradle.org">Gradle 7.3.3</a> at 17 мар. 2022 г., 12:55:54</p>
+<a href="http://www.gradle.org">Gradle 7.3.3</a> at 27 мар. 2022 г., 11:21:44</p>
 </div>
 </div>
 </body>
Index: .idea/libraries/Gradle__org_springframework_data_spring_data_commons_2_5_6.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_springframework_data_spring_data_commons_2_5_6.xml b/.idea/libraries/Gradle__org_springframework_data_spring_data_commons_2_5_6.xml
new file mode 100644
--- /dev/null	(date 1648813961757)
+++ b/.idea/libraries/Gradle__org_springframework_data_spring_data_commons_2_5_6.xml	(date 1648813961757)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.springframework.data:spring-data-commons:2.5.6">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.data/spring-data-commons/2.5.6/15a2384f4eaf7fee512fb295174f6c0fb6c55ee1/spring-data-commons-2.5.6.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.data/spring-data-commons/2.5.6/f4628dd762dde2009f2ef9ba42e763c6b2ca0df7/spring-data-commons-2.5.6-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_springframework_boot_spring_boot_test_autoconfigure_2_5_6.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_springframework_boot_spring_boot_test_autoconfigure_2_5_6.xml b/.idea/libraries/Gradle__org_springframework_boot_spring_boot_test_autoconfigure_2_5_6.xml
new file mode 100644
--- /dev/null	(date 1648813961750)
+++ b/.idea/libraries/Gradle__org_springframework_boot_spring_boot_test_autoconfigure_2_5_6.xml	(date 1648813961750)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.springframework.boot:spring-boot-test-autoconfigure:2.5.6">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-test-autoconfigure/2.5.6/8e5fdad6e7e508fde028f8f5179b061ec47c5636/spring-boot-test-autoconfigure-2.5.6.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-test-autoconfigure/2.5.6/310d093d284b94c22320d44b7f727e843921f900/spring-boot-test-autoconfigure-2.5.6-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../Learning Progress Tracker/.idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CompilerConfiguration\">\r\n    <bytecodeTargetLevel target=\"17\">\r\n      <module name=\"Learning_Progress_Tracker.Learning_Progress_Tracker-task.main\" target=\"11\" />\r\n      <module name=\"Learning_Progress_Tracker.util.main\" target=\"11\" />\r\n    </bytecodeTargetLevel>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Learning Progress Tracker/.idea/compiler.xml b/../Learning Progress Tracker/.idea/compiler.xml
--- a/../Learning Progress Tracker/.idea/compiler.xml	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../Learning Progress Tracker/.idea/compiler.xml	(date 1648131771175)
@@ -2,6 +2,12 @@
 <project version="4">
   <component name="CompilerConfiguration">
     <bytecodeTargetLevel target="17">
+      <module name="Learning_Progress_Tracker.Learning_Progress_Tracker-task-build-classes-java.main" target="11" />
+      <module name="Learning_Progress_Tracker.Learning_Progress_Tracker-task-build-generated-sources-annotationProcessor-java.main" target="11" />
+      <module name="Learning_Progress_Tracker.Learning_Progress_Tracker-task-build-generated-sources-headers-java.main" target="11" />
+      <module name="Learning_Progress_Tracker.Learning_Progress_Tracker-task-build-reports-tests.main" target="11" />
+      <module name="Learning_Progress_Tracker.Learning_Progress_Tracker-task-build-test-results.main" target="11" />
+      <module name="Learning_Progress_Tracker.Learning_Progress_Tracker-task-build-tmp.main" target="11" />
       <module name="Learning_Progress_Tracker.Learning_Progress_Tracker-task.main" target="11" />
       <module name="Learning_Progress_Tracker.util.main" target="11" />
     </bytecodeTargetLevel>
Index: .idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_aop_2_5_6.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_aop_2_5_6.xml b/.idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_aop_2_5_6.xml
new file mode 100644
--- /dev/null	(date 1648813961718)
+++ b/.idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_aop_2_5_6.xml	(date 1648813961718)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.springframework.boot:spring-boot-starter-aop:2.5.6">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-aop/2.5.6/c5db1260ecf447f55419f1a17da75a42f211aca3/spring-boot-starter-aop-2.5.6.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-aop/2.5.6/5874cb4e05b46cea3120603a77d6164957b17dbc/spring-boot-starter-aop-2.5.6-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_skyscreamer_jsonassert_1_5_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_skyscreamer_jsonassert_1_5_0.xml b/.idea/libraries/Gradle__org_skyscreamer_jsonassert_1_5_0.xml
new file mode 100644
--- /dev/null	(date 1648813961712)
+++ b/.idea/libraries/Gradle__org_skyscreamer_jsonassert_1_5_0.xml	(date 1648813961712)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.skyscreamer:jsonassert:1.5.0">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.skyscreamer/jsonassert/1.5.0/6c9d5fe2f59da598d9aefc1cfc6528ff3cf32df3/jsonassert-1.5.0.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.skyscreamer/jsonassert/1.5.0/d729b258165a2fd9b5d6156c05c4c4f7ca053117/jsonassert-1.5.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../Learning Progress Tracker/.idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"delegatedBuild\" value=\"false\" />\r\n        <option name=\"testRunner\" value=\"GRADLE\" />\r\n        <option name=\"distributionType\" value=\"WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"gradleJvm\" value=\"#JAVA_INTERNAL\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/Learning Progress Tracker/task\" />\r\n            <option value=\"$PROJECT_DIR$/util\" />\r\n          </set>\r\n        </option>\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Learning Progress Tracker/.idea/gradle.xml b/../Learning Progress Tracker/.idea/gradle.xml
--- a/../Learning Progress Tracker/.idea/gradle.xml	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../Learning Progress Tracker/.idea/gradle.xml	(date 1648131771185)
@@ -1,5 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="GradleMigrationSettings" migrationVersion="1" />
   <component name="GradleSettings">
     <option name="linkedExternalProjectsSettings">
       <GradleProjectSettings>
@@ -12,6 +13,12 @@
           <set>
             <option value="$PROJECT_DIR$" />
             <option value="$PROJECT_DIR$/Learning Progress Tracker/task" />
+            <option value="$PROJECT_DIR$/Learning Progress Tracker/task/build/classes/java" />
+            <option value="$PROJECT_DIR$/Learning Progress Tracker/task/build/generated/sources/annotationProcessor/java" />
+            <option value="$PROJECT_DIR$/Learning Progress Tracker/task/build/generated/sources/headers/java" />
+            <option value="$PROJECT_DIR$/Learning Progress Tracker/task/build/reports/tests" />
+            <option value="$PROJECT_DIR$/Learning Progress Tracker/task/build/test-results" />
+            <option value="$PROJECT_DIR$/Learning Progress Tracker/task/build/tmp" />
             <option value="$PROJECT_DIR$/util" />
           </set>
         </option>
Index: .idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_jdbc_2_5_6.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_jdbc_2_5_6.xml b/.idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_jdbc_2_5_6.xml
new file mode 100644
--- /dev/null	(date 1648813961731)
+++ b/.idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_jdbc_2_5_6.xml	(date 1648813961731)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.springframework.boot:spring-boot-starter-jdbc:2.5.6">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-jdbc/2.5.6/cf01e787378c2d30b695f0c9f76fb48a6b490984/spring-boot-starter-jdbc-2.5.6.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-jdbc/2.5.6/6cfacbd51a55b2ed4b4908830df0ed8d65227017/spring-boot-starter-jdbc-2.5.6-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/modules/Web Quiz Engine/task/build/classes/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-classes-java.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules/Web Quiz Engine/task/build/classes/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-classes-java.iml b/.idea/modules/Web Quiz Engine/task/build/classes/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-classes-java.iml
new file mode 100644
--- /dev/null	(date 1648637880854)
+++ b/.idea/modules/Web Quiz Engine/task/build/classes/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-classes-java.iml	(date 1648637880854)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module external.linked.project.id=":Web_Quiz_Engine-task-build-classes-java" external.linked.project.path="$MODULE_DIR$/../../../../../../../Web Quiz Engine/task/build/classes/java" external.root.project.path="$MODULE_DIR$/../../../../../../.." external.system.id="GRADLE" external.system.module.group="Web Quiz Engine" external.system.module.version="unspecified" type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$/../../../../../../../Web Quiz Engine/task/build/classes/java">
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../../../Web Quiz Engine/task/build/classes/java/.gradle" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../../../Web Quiz Engine/task/build/classes/java/build" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../../../Web Quiz Engine/task/build/classes/java/out" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_data_jpa_2_5_6.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_data_jpa_2_5_6.xml b/.idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_data_jpa_2_5_6.xml
new file mode 100644
--- /dev/null	(date 1648813961724)
+++ b/.idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_data_jpa_2_5_6.xml	(date 1648813961724)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.springframework.boot:spring-boot-starter-data-jpa:2.5.6">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-data-jpa/2.5.6/8d7fe99c33e09390316749614d9795d80b49207b/spring-boot-starter-data-jpa-2.5.6.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-data-jpa/2.5.6/1458527d47143398803daa1fede89d1f3cb8a1c5/spring-boot-starter-data-jpa-2.5.6-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_springframework_spring_tx_5_3_12.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_springframework_spring_tx_5_3_12.xml b/.idea/libraries/Gradle__org_springframework_spring_tx_5_3_12.xml
new file mode 100644
--- /dev/null	(date 1648813961795)
+++ b/.idea/libraries/Gradle__org_springframework_spring_tx_5_3_12.xml	(date 1648813961795)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.springframework:spring-tx:5.3.12">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework/spring-tx/5.3.12/7f2e61a22682baa22ed5bef0724a4386c41477cb/spring-tx-5.3.12.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework/spring-tx/5.3.12/d7bf95dd283c0661aad4afda889cead7ba19f08a/spring-tx-5.3.12-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_springframework_spring_test_5_3_12.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_springframework_spring_test_5_3_12.xml b/.idea/libraries/Gradle__org_springframework_spring_test_5_3_12.xml
new file mode 100644
--- /dev/null	(date 1648813961789)
+++ b/.idea/libraries/Gradle__org_springframework_spring_test_5_3_12.xml	(date 1648813961789)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.springframework:spring-test:5.3.12">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework/spring-test/5.3.12/f993b6846c26a1f0f4ed60bc5fdba22a4839c9c1/spring-test-5.3.12.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework/spring-test/5.3.12/b3aba0b3b5a27a6d09cf29075dbe57fdd34896f0/spring-test-5.3.12-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_xmlunit_xmlunit_core_2_8_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_xmlunit_xmlunit_core_2_8_3.xml b/.idea/libraries/Gradle__org_xmlunit_xmlunit_core_2_8_3.xml
new file mode 100644
--- /dev/null	(date 1648813961801)
+++ b/.idea/libraries/Gradle__org_xmlunit_xmlunit_core_2_8_3.xml	(date 1648813961801)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.xmlunit:xmlunit-core:2.8.3">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.xmlunit/xmlunit-core/2.8.3/79be4916d0203c17944d0e891c2b17c555727af/xmlunit-core-2.8.3.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.xmlunit/xmlunit-core/2.8.3/65237775784c9a6ff3ff5c4430ef07a941a5aa15/xmlunit-core-2.8.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/modules/Web Quiz Engine/task/build/reports/tests/Web_Quiz_Engine.Web_Quiz_Engine-task-build-reports-tests.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules/Web Quiz Engine/task/build/reports/tests/Web_Quiz_Engine.Web_Quiz_Engine-task-build-reports-tests.iml b/.idea/modules/Web Quiz Engine/task/build/reports/tests/Web_Quiz_Engine.Web_Quiz_Engine-task-build-reports-tests.iml
new file mode 100644
--- /dev/null	(date 1648637880900)
+++ b/.idea/modules/Web Quiz Engine/task/build/reports/tests/Web_Quiz_Engine.Web_Quiz_Engine-task-build-reports-tests.iml	(date 1648637880900)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module external.linked.project.id=":Web_Quiz_Engine-task-build-reports-tests" external.linked.project.path="$MODULE_DIR$/../../../../../../../Web Quiz Engine/task/build/reports/tests" external.root.project.path="$MODULE_DIR$/../../../../../../.." external.system.id="GRADLE" external.system.module.group="Web Quiz Engine" external.system.module.version="unspecified" type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$/../../../../../../../Web Quiz Engine/task/build/reports/tests">
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../../../Web Quiz Engine/task/build/reports/tests/.gradle" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../../../Web Quiz Engine/task/build/reports/tests/build" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../../../Web Quiz Engine/task/build/reports/tests/out" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_springframework_spring_aspects_5_3_12.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_springframework_spring_aspects_5_3_12.xml b/.idea/libraries/Gradle__org_springframework_spring_aspects_5_3_12.xml
new file mode 100644
--- /dev/null	(date 1648813961769)
+++ b/.idea/libraries/Gradle__org_springframework_spring_aspects_5_3_12.xml	(date 1648813961769)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.springframework:spring-aspects:5.3.12">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework/spring-aspects/5.3.12/3cccc3052c6973c059eb2be7c4baf0b9558d49b7/spring-aspects-5.3.12.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework/spring-aspects/5.3.12/1d7def9507c8492dadb5e7b3abf3c67a43c601e1/spring-aspects-5.3.12-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/modules/Web Quiz Engine/task/build/generated/sources/annotationProcessor/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-generated-sources-annotationProcessor-java.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules/Web Quiz Engine/task/build/generated/sources/annotationProcessor/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-generated-sources-annotationProcessor-java.iml b/.idea/modules/Web Quiz Engine/task/build/generated/sources/annotationProcessor/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-generated-sources-annotationProcessor-java.iml
new file mode 100644
--- /dev/null	(date 1648637880870)
+++ b/.idea/modules/Web Quiz Engine/task/build/generated/sources/annotationProcessor/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-generated-sources-annotationProcessor-java.iml	(date 1648637880870)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module external.linked.project.id=":Web_Quiz_Engine-task-build-generated-sources-annotationProcessor-java" external.linked.project.path="$MODULE_DIR$/../../../../../../../../../Web Quiz Engine/task/build/generated/sources/annotationProcessor/java" external.root.project.path="$MODULE_DIR$/../../../../../../../../.." external.system.id="GRADLE" external.system.module.group="Web Quiz Engine" external.system.module.version="unspecified" type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$/../../../../../../../../../Web Quiz Engine/task/build/generated/sources/annotationProcessor/java">
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../../../../../Web Quiz Engine/task/build/generated/sources/annotationProcessor/java/.gradle" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../../../../../Web Quiz Engine/task/build/generated/sources/annotationProcessor/java/build" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../../../../../Web Quiz Engine/task/build/generated/sources/annotationProcessor/java/out" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_springframework_data_spring_data_jpa_2_5_6.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_springframework_data_spring_data_jpa_2_5_6.xml b/.idea/libraries/Gradle__org_springframework_data_spring_data_jpa_2_5_6.xml
new file mode 100644
--- /dev/null	(date 1648813961763)
+++ b/.idea/libraries/Gradle__org_springframework_data_spring_data_jpa_2_5_6.xml	(date 1648813961763)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.springframework.data:spring-data-jpa:2.5.6">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.data/spring-data-jpa/2.5.6/8e0ec2f54f3fcda49dfb3123f3a40f34b55df92a/spring-data-jpa-2.5.6.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.data/spring-data-jpa/2.5.6/d9c747256bc6f577ea111074f18fefb36fbb8ee9/spring-data-jpa-2.5.6-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_springframework_spring_orm_5_3_12.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_springframework_spring_orm_5_3_12.xml b/.idea/libraries/Gradle__org_springframework_spring_orm_5_3_12.xml
new file mode 100644
--- /dev/null	(date 1648813961783)
+++ b/.idea/libraries/Gradle__org_springframework_spring_orm_5_3_12.xml	(date 1648813961783)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.springframework:spring-orm:5.3.12">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework/spring-orm/5.3.12/2881f9e71889b35fa3785bf67706a201cea93004/spring-orm-5.3.12.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework/spring-orm/5.3.12/3bd6e93dc99aed1e9665187bdb17634baea38ab9/spring-orm-5.3.12-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/modules/Web Quiz Engine/task/build/generated/sources/headers/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-generated-sources-headers-java.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules/Web Quiz Engine/task/build/generated/sources/headers/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-generated-sources-headers-java.iml b/.idea/modules/Web Quiz Engine/task/build/generated/sources/headers/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-generated-sources-headers-java.iml
new file mode 100644
--- /dev/null	(date 1648637880885)
+++ b/.idea/modules/Web Quiz Engine/task/build/generated/sources/headers/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-generated-sources-headers-java.iml	(date 1648637880885)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module external.linked.project.id=":Web_Quiz_Engine-task-build-generated-sources-headers-java" external.linked.project.path="$MODULE_DIR$/../../../../../../../../../Web Quiz Engine/task/build/generated/sources/headers/java" external.root.project.path="$MODULE_DIR$/../../../../../../../../.." external.system.id="GRADLE" external.system.module.group="Web Quiz Engine" external.system.module.version="unspecified" type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$/../../../../../../../../../Web Quiz Engine/task/build/generated/sources/headers/java">
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../../../../../Web Quiz Engine/task/build/generated/sources/headers/java/.gradle" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../../../../../Web Quiz Engine/task/build/generated/sources/headers/java/build" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../../../../../Web Quiz Engine/task/build/generated/sources/headers/java/out" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_springframework_spring_jdbc_5_3_12.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_springframework_spring_jdbc_5_3_12.xml b/.idea/libraries/Gradle__org_springframework_spring_jdbc_5_3_12.xml
new file mode 100644
--- /dev/null	(date 1648813961775)
+++ b/.idea/libraries/Gradle__org_springframework_spring_jdbc_5_3_12.xml	(date 1648813961775)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.springframework:spring-jdbc:5.3.12">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework/spring-jdbc/5.3.12/957d6ddc80fbf52d965e6af90ddd0dccfed42d7d/spring-jdbc-5.3.12.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework/spring-jdbc/5.3.12/146b4c5c18f5947b2a68089c0ddac77746a03ab8/spring-jdbc-5.3.12-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/modules/Web Quiz Engine/task/build/generated/sources/annotationProcessor/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-generated-sources-annotationProcessor-java.test.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules/Web Quiz Engine/task/build/generated/sources/annotationProcessor/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-generated-sources-annotationProcessor-java.test.iml b/.idea/modules/Web Quiz Engine/task/build/generated/sources/annotationProcessor/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-generated-sources-annotationProcessor-java.test.iml
new file mode 100644
--- /dev/null	(date 1648637880954)
+++ b/.idea/modules/Web Quiz Engine/task/build/generated/sources/annotationProcessor/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-generated-sources-annotationProcessor-java.test.iml	(date 1648637880954)
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module external.linked.project.id=":Web_Quiz_Engine-task-build-generated-sources-annotationProcessor-java:test" external.linked.project.path="$MODULE_DIR$/../../../../../../../../../Web Quiz Engine/task/build/generated/sources/annotationProcessor/java" external.root.project.path="$MODULE_DIR$/../../../../../../../../.." external.system.id="GRADLE" external.system.module.group="Web Quiz Engine" external.system.module.type="sourceSet" external.system.module.version="unspecified" type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager">
+    <output-test url="file://$MODULE_DIR$/../../../../../../../../../Web Quiz Engine/task/build/generated/sources/annotationProcessor/java/out/test/classes" />
+    <exclude-output />
+    <content url="file://$MODULE_DIR$/../../../../../../../../../Web Quiz Engine/task/build/generated/sources/annotationProcessor/java/src/test" />
+    <content url="file://$MODULE_DIR$/../../../../../../../../../Web Quiz Engine/task/build/generated/sources/annotationProcessor/java/test">
+      <sourceFolder url="file://$MODULE_DIR$/../../../../../../../../../Web Quiz Engine/task/build/generated/sources/annotationProcessor/java/test" isTestSource="true" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="module" module-name="Web_Quiz_Engine.Web_Quiz_Engine-task-build-generated-sources-annotationProcessor-java.main" />
+    <orderEntry type="module" module-name="Web_Quiz_Engine.util.main" />
+    <orderEntry type="module" module-name="Web_Quiz_Engine.util.test" production-on-test="" />
+    <orderEntry type="library" name="Gradle: com.github.hyperskill:hs-test:release-SNAPSHOT" level="project" />
+    <orderEntry type="library" name="Gradle: org.assertj:assertj-swing-junit:3.9.2" level="project" />
+    <orderEntry type="library" name="Gradle: junit:junit:4.12" level="project" />
+    <orderEntry type="library" name="Gradle: org.apache.httpcomponents:httpclient:4.5.9" level="project" />
+    <orderEntry type="library" name="Gradle: com.google.code.gson:gson:2.8.5" level="project" />
+    <orderEntry type="library" name="Gradle: org.assertj:assertj-swing:3.9.2" level="project" />
+    <orderEntry type="library" name="Gradle: org.easytesting:fest-reflect:1.4.1" level="project" />
+    <orderEntry type="library" name="Gradle: org.hamcrest:hamcrest-core:1.3" level="project" />
+    <orderEntry type="library" name="Gradle: org.apache.httpcomponents:httpcore:4.4.11" level="project" />
+    <orderEntry type="library" name="Gradle: commons-logging:commons-logging:1.2" level="project" />
+    <orderEntry type="library" name="Gradle: commons-codec:commons-codec:1.11" level="project" />
+    <orderEntry type="library" name="Gradle: org.assertj:assertj-core:3.11.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Gradle: org.easytesting:fest-util:1.2.5" level="project" />
+  </component>
+  <component name="TestModuleProperties" production-module="Web_Quiz_Engine.Web_Quiz_Engine-task-build-generated-sources-annotationProcessor-java.main" />
+</module>
\ No newline at end of file
Index: .idea/modules/Web Quiz Engine/task/build/classes/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-classes-java.main.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules/Web Quiz Engine/task/build/classes/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-classes-java.main.iml b/.idea/modules/Web Quiz Engine/task/build/classes/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-classes-java.main.iml
new file mode 100644
--- /dev/null	(date 1648637880946)
+++ b/.idea/modules/Web Quiz Engine/task/build/classes/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-classes-java.main.iml	(date 1648637880946)
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module external.linked.project.id=":Web_Quiz_Engine-task-build-classes-java:main" external.linked.project.path="$MODULE_DIR$/../../../../../../../Web Quiz Engine/task/build/classes/java" external.root.project.path="$MODULE_DIR$/../../../../../../.." external.system.id="GRADLE" external.system.module.group="Web Quiz Engine" external.system.module.type="sourceSet" external.system.module.version="unspecified" type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_11">
+    <output url="file://$MODULE_DIR$/../../../../../../../Web Quiz Engine/task/build/classes/java/out/production/classes" />
+    <exclude-output />
+    <content url="file://$MODULE_DIR$/../../../../../../../Web Quiz Engine/task/build/classes/java/src" />
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: .idea/modules/Web Quiz Engine/task/build/generated/sources/headers/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-generated-sources-headers-java.test.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules/Web Quiz Engine/task/build/generated/sources/headers/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-generated-sources-headers-java.test.iml b/.idea/modules/Web Quiz Engine/task/build/generated/sources/headers/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-generated-sources-headers-java.test.iml
new file mode 100644
--- /dev/null	(date 1648637880971)
+++ b/.idea/modules/Web Quiz Engine/task/build/generated/sources/headers/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-generated-sources-headers-java.test.iml	(date 1648637880971)
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module external.linked.project.id=":Web_Quiz_Engine-task-build-generated-sources-headers-java:test" external.linked.project.path="$MODULE_DIR$/../../../../../../../../../Web Quiz Engine/task/build/generated/sources/headers/java" external.root.project.path="$MODULE_DIR$/../../../../../../../../.." external.system.id="GRADLE" external.system.module.group="Web Quiz Engine" external.system.module.type="sourceSet" external.system.module.version="unspecified" type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager">
+    <output-test url="file://$MODULE_DIR$/../../../../../../../../../Web Quiz Engine/task/build/generated/sources/headers/java/out/test/classes" />
+    <exclude-output />
+    <content url="file://$MODULE_DIR$/../../../../../../../../../Web Quiz Engine/task/build/generated/sources/headers/java/src/test" />
+    <content url="file://$MODULE_DIR$/../../../../../../../../../Web Quiz Engine/task/build/generated/sources/headers/java/test">
+      <sourceFolder url="file://$MODULE_DIR$/../../../../../../../../../Web Quiz Engine/task/build/generated/sources/headers/java/test" isTestSource="true" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="module" module-name="Web_Quiz_Engine.Web_Quiz_Engine-task-build-generated-sources-headers-java.main" />
+    <orderEntry type="module" module-name="Web_Quiz_Engine.util.main" />
+    <orderEntry type="module" module-name="Web_Quiz_Engine.util.test" production-on-test="" />
+    <orderEntry type="library" name="Gradle: com.github.hyperskill:hs-test:release-SNAPSHOT" level="project" />
+    <orderEntry type="library" name="Gradle: org.assertj:assertj-swing-junit:3.9.2" level="project" />
+    <orderEntry type="library" name="Gradle: junit:junit:4.12" level="project" />
+    <orderEntry type="library" name="Gradle: org.apache.httpcomponents:httpclient:4.5.9" level="project" />
+    <orderEntry type="library" name="Gradle: com.google.code.gson:gson:2.8.5" level="project" />
+    <orderEntry type="library" name="Gradle: org.assertj:assertj-swing:3.9.2" level="project" />
+    <orderEntry type="library" name="Gradle: org.easytesting:fest-reflect:1.4.1" level="project" />
+    <orderEntry type="library" name="Gradle: org.hamcrest:hamcrest-core:1.3" level="project" />
+    <orderEntry type="library" name="Gradle: org.apache.httpcomponents:httpcore:4.4.11" level="project" />
+    <orderEntry type="library" name="Gradle: commons-logging:commons-logging:1.2" level="project" />
+    <orderEntry type="library" name="Gradle: commons-codec:commons-codec:1.11" level="project" />
+    <orderEntry type="library" name="Gradle: org.assertj:assertj-core:3.11.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Gradle: org.easytesting:fest-util:1.2.5" level="project" />
+  </component>
+  <component name="TestModuleProperties" production-module="Web_Quiz_Engine.Web_Quiz_Engine-task-build-generated-sources-headers-java.main" />
+</module>
\ No newline at end of file
Index: .idea/modules/Web Quiz Engine/task/build/generated/sources/annotationProcessor/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-generated-sources-annotationProcessor-java.main.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules/Web Quiz Engine/task/build/generated/sources/annotationProcessor/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-generated-sources-annotationProcessor-java.main.iml b/.idea/modules/Web Quiz Engine/task/build/generated/sources/annotationProcessor/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-generated-sources-annotationProcessor-java.main.iml
new file mode 100644
--- /dev/null	(date 1648637880962)
+++ b/.idea/modules/Web Quiz Engine/task/build/generated/sources/annotationProcessor/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-generated-sources-annotationProcessor-java.main.iml	(date 1648637880962)
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module external.linked.project.id=":Web_Quiz_Engine-task-build-generated-sources-annotationProcessor-java:main" external.linked.project.path="$MODULE_DIR$/../../../../../../../../../Web Quiz Engine/task/build/generated/sources/annotationProcessor/java" external.root.project.path="$MODULE_DIR$/../../../../../../../../.." external.system.id="GRADLE" external.system.module.group="Web Quiz Engine" external.system.module.type="sourceSet" external.system.module.version="unspecified" type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_11">
+    <output url="file://$MODULE_DIR$/../../../../../../../../../Web Quiz Engine/task/build/generated/sources/annotationProcessor/java/out/production/classes" />
+    <exclude-output />
+    <content url="file://$MODULE_DIR$/../../../../../../../../../Web Quiz Engine/task/build/generated/sources/annotationProcessor/java/src" />
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: .idea/modules/Web Quiz Engine/task/build/test-results/Web_Quiz_Engine.Web_Quiz_Engine-task-build-test-results.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules/Web Quiz Engine/task/build/test-results/Web_Quiz_Engine.Web_Quiz_Engine-task-build-test-results.iml b/.idea/modules/Web Quiz Engine/task/build/test-results/Web_Quiz_Engine.Web_Quiz_Engine-task-build-test-results.iml
new file mode 100644
--- /dev/null	(date 1648637880913)
+++ b/.idea/modules/Web Quiz Engine/task/build/test-results/Web_Quiz_Engine.Web_Quiz_Engine-task-build-test-results.iml	(date 1648637880913)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module external.linked.project.id=":Web_Quiz_Engine-task-build-test-results" external.linked.project.path="$MODULE_DIR$/../../../../../../Web Quiz Engine/task/build/test-results" external.root.project.path="$MODULE_DIR$/../../../../../.." external.system.id="GRADLE" external.system.module.group="Web Quiz Engine" external.system.module.version="unspecified" type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$/../../../../../../Web Quiz Engine/task/build/test-results">
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../../Web Quiz Engine/task/build/test-results/.gradle" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../../Web Quiz Engine/task/build/test-results/build" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../../Web Quiz Engine/task/build/test-results/out" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: ../HyperMetro/HyperMetro/task/build/test-results/test/TEST-Tests.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<testsuite name=\"Tests\" tests=\"1\" skipped=\"0\" failures=\"1\" errors=\"0\" timestamp=\"2022-03-17T09:55:54\" hostname=\"FRACTAL\" time=\"0.136\">\r\n  <properties/>\r\n  <testcase name=\"start\" classname=\"Tests\" time=\"0.136\">\r\n    <failure message=\"java.lang.AssertionError: Error in test #1&#10;&#10;The program Main has unexpectedly terminated.&#10;It finished execution too early, should continue running.&#10;&#10;Please find below the output of your program during this failed test.&#10;&#10;---&#10;&#10;Arguments: ./test/baltimore.json&#10;&#10;depot - { -   &quot;SubwayLink&quot;: {&#10;{ -   &quot;SubwayLink&quot;: { -     &quot;1&quot;: &quot;Owings Mills&quot;,&#10;  &quot;SubwayLink&quot;: { -     &quot;1&quot;: &quot;Owings Mills&quot;, -     &quot;2&quot;: &quot;Old Court&quot;,&#10;    &quot;1&quot;: &quot;Owings Mills&quot;, -     &quot;2&quot;: &quot;Old Court&quot;, -     &quot;3&quot;: &quot;Milford Mill&quot;,&#10;    &quot;2&quot;: &quot;Old Court&quot;, -     &quot;3&quot;: &quot;Milford Mill&quot;, -     &quot;4&quot;: &quot;Reiserstown Plaza&quot;,&#10;    &quot;3&quot;: &quot;Milford Mill&quot;, -     &quot;4&quot;: &quot;Reiserstown Plaza&quot;, -     &quot;5&quot;: &quot;Rogers Avenue&quot;,&#10;    &quot;4&quot;: &quot;Reiserstown Plaza&quot;, -     &quot;5&quot;: &quot;Rogers Avenue&quot;, -     &quot;6&quot;: &quot;West Cold Spring&quot;,&#10;    &quot;5&quot;: &quot;Rogers Avenue&quot;, -     &quot;6&quot;: &quot;West Cold Spring&quot;, -     &quot;7&quot;: &quot;Mondawmin&quot;,&#10;    &quot;6&quot;: &quot;West Cold Spring&quot;, -     &quot;7&quot;: &quot;Mondawmin&quot;, -     &quot;8&quot;: &quot;Penn North&quot;,&#10;    &quot;7&quot;: &quot;Mondawmin&quot;, -     &quot;8&quot;: &quot;Penn North&quot;, -     &quot;9&quot;: &quot;Uptown&quot;,&#10;    &quot;8&quot;: &quot;Penn North&quot;, -     &quot;9&quot;: &quot;Uptown&quot;, -     &quot;10&quot;: &quot;State Center&quot;,&#10;    &quot;9&quot;: &quot;Uptown&quot;, -     &quot;10&quot;: &quot;State Center&quot;, -     &quot;11&quot;: &quot;Lexington Market&quot;,&#10;    &quot;10&quot;: &quot;State Center&quot;, -     &quot;11&quot;: &quot;Lexington Market&quot;, -     &quot;12&quot;: &quot;Charles Center&quot;,&#10;    &quot;11&quot;: &quot;Lexington Market&quot;, -     &quot;12&quot;: &quot;Charles Center&quot;, -     &quot;13&quot;: &quot;Shot Tower/Market Place&quot;,&#10;    &quot;12&quot;: &quot;Charles Center&quot;, -     &quot;13&quot;: &quot;Shot Tower/Market Place&quot;, -     &quot;14&quot;: &quot;Johns Hopkins Hospital&quot;&#10;    &quot;13&quot;: &quot;Shot Tower/Market Place&quot;, -     &quot;14&quot;: &quot;Johns Hopkins Hospital&quot; -   }&#10;    &quot;14&quot;: &quot;Johns Hopkins Hospital&quot; -   } - }&#10;  } - } - depot\" type=\"java.lang.AssertionError\">java.lang.AssertionError: Error in test #1\r\n\r\nThe program Main has unexpectedly terminated.\r\nIt finished execution too early, should continue running.\r\n\r\nPlease find below the output of your program during this failed test.\r\n\r\n---\r\n\r\nArguments: ./test/baltimore.json\r\n\r\ndepot - { -   &quot;SubwayLink&quot;: {\r\n{ -   &quot;SubwayLink&quot;: { -     &quot;1&quot;: &quot;Owings Mills&quot;,\r\n  &quot;SubwayLink&quot;: { -     &quot;1&quot;: &quot;Owings Mills&quot;, -     &quot;2&quot;: &quot;Old Court&quot;,\r\n    &quot;1&quot;: &quot;Owings Mills&quot;, -     &quot;2&quot;: &quot;Old Court&quot;, -     &quot;3&quot;: &quot;Milford Mill&quot;,\r\n    &quot;2&quot;: &quot;Old Court&quot;, -     &quot;3&quot;: &quot;Milford Mill&quot;, -     &quot;4&quot;: &quot;Reiserstown Plaza&quot;,\r\n    &quot;3&quot;: &quot;Milford Mill&quot;, -     &quot;4&quot;: &quot;Reiserstown Plaza&quot;, -     &quot;5&quot;: &quot;Rogers Avenue&quot;,\r\n    &quot;4&quot;: &quot;Reiserstown Plaza&quot;, -     &quot;5&quot;: &quot;Rogers Avenue&quot;, -     &quot;6&quot;: &quot;West Cold Spring&quot;,\r\n    &quot;5&quot;: &quot;Rogers Avenue&quot;, -     &quot;6&quot;: &quot;West Cold Spring&quot;, -     &quot;7&quot;: &quot;Mondawmin&quot;,\r\n    &quot;6&quot;: &quot;West Cold Spring&quot;, -     &quot;7&quot;: &quot;Mondawmin&quot;, -     &quot;8&quot;: &quot;Penn North&quot;,\r\n    &quot;7&quot;: &quot;Mondawmin&quot;, -     &quot;8&quot;: &quot;Penn North&quot;, -     &quot;9&quot;: &quot;Uptown&quot;,\r\n    &quot;8&quot;: &quot;Penn North&quot;, -     &quot;9&quot;: &quot;Uptown&quot;, -     &quot;10&quot;: &quot;State Center&quot;,\r\n    &quot;9&quot;: &quot;Uptown&quot;, -     &quot;10&quot;: &quot;State Center&quot;, -     &quot;11&quot;: &quot;Lexington Market&quot;,\r\n    &quot;10&quot;: &quot;State Center&quot;, -     &quot;11&quot;: &quot;Lexington Market&quot;, -     &quot;12&quot;: &quot;Charles Center&quot;,\r\n    &quot;11&quot;: &quot;Lexington Market&quot;, -     &quot;12&quot;: &quot;Charles Center&quot;, -     &quot;13&quot;: &quot;Shot Tower/Market Place&quot;,\r\n    &quot;12&quot;: &quot;Charles Center&quot;, -     &quot;13&quot;: &quot;Shot Tower/Market Place&quot;, -     &quot;14&quot;: &quot;Johns Hopkins Hospital&quot;\r\n    &quot;13&quot;: &quot;Shot Tower/Market Place&quot;, -     &quot;14&quot;: &quot;Johns Hopkins Hospital&quot; -   }\r\n    &quot;14&quot;: &quot;Johns Hopkins Hospital&quot; -   } - }\r\n  } - } - depot\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.hyperskill.hstest.stage.StageTest.start(StageTest.java:155)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)\r\n\tat org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)\r\n\tat org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)\r\n\tat org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)\r\n\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\r\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\r\n\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)\r\n\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)\r\n\tat jdk.proxy1/jdk.proxy1.$Proxy2.processTestClass(Unknown Source)\r\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker$2.run(TestWorker.java:176)\r\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)\r\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)\r\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)\r\n\tat org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)\r\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133)\r\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)\r\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)\r\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)\r\n</failure>\r\n  </testcase>\r\n  <system-out><![CDATA[?[1;31m\r\nStart test 1?[0m\r\ndepot - { -   \"SubwayLink\": {\r\n{ -   \"SubwayLink\": { -     \"1\": \"Owings Mills\",\r\n  \"SubwayLink\": { -     \"1\": \"Owings Mills\", -     \"2\": \"Old Court\",\r\n    \"1\": \"Owings Mills\", -     \"2\": \"Old Court\", -     \"3\": \"Milford Mill\",\r\n    \"2\": \"Old Court\", -     \"3\": \"Milford Mill\", -     \"4\": \"Reiserstown Plaza\",\r\n    \"3\": \"Milford Mill\", -     \"4\": \"Reiserstown Plaza\", -     \"5\": \"Rogers Avenue\",\r\n    \"4\": \"Reiserstown Plaza\", -     \"5\": \"Rogers Avenue\", -     \"6\": \"West Cold Spring\",\r\n    \"5\": \"Rogers Avenue\", -     \"6\": \"West Cold Spring\", -     \"7\": \"Mondawmin\",\r\n    \"6\": \"West Cold Spring\", -     \"7\": \"Mondawmin\", -     \"8\": \"Penn North\",\r\n    \"7\": \"Mondawmin\", -     \"8\": \"Penn North\", -     \"9\": \"Uptown\",\r\n    \"8\": \"Penn North\", -     \"9\": \"Uptown\", -     \"10\": \"State Center\",\r\n    \"9\": \"Uptown\", -     \"10\": \"State Center\", -     \"11\": \"Lexington Market\",\r\n    \"10\": \"State Center\", -     \"11\": \"Lexington Market\", -     \"12\": \"Charles Center\",\r\n    \"11\": \"Lexington Market\", -     \"12\": \"Charles Center\", -     \"13\": \"Shot Tower/Market Place\",\r\n    \"12\": \"Charles Center\", -     \"13\": \"Shot Tower/Market Place\", -     \"14\": \"Johns Hopkins Hospital\"\r\n    \"13\": \"Shot Tower/Market Place\", -     \"14\": \"Johns Hopkins Hospital\" -   }\r\n    \"14\": \"Johns Hopkins Hospital\" -   } - }\r\n  } - } - depot\r\n]]></system-out>\r\n  <system-err><![CDATA[]]></system-err>\r\n</testsuite>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../HyperMetro/HyperMetro/task/build/test-results/test/TEST-Tests.xml b/../HyperMetro/HyperMetro/task/build/test-results/test/TEST-Tests.xml
--- a/../HyperMetro/HyperMetro/task/build/test-results/test/TEST-Tests.xml	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../HyperMetro/HyperMetro/task/build/test-results/test/TEST-Tests.xml	(date 1648369304417)
@@ -1,36 +1,17 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<testsuite name="Tests" tests="1" skipped="0" failures="1" errors="0" timestamp="2022-03-17T09:55:54" hostname="FRACTAL" time="0.136">
+<testsuite name="Tests" tests="1" skipped="0" failures="1" errors="0" timestamp="2022-03-27T08:21:44" hostname="FRACTAL" time="0.104">
   <properties/>
-  <testcase name="start" classname="Tests" time="0.136">
-    <failure message="java.lang.AssertionError: Error in test #1&#10;&#10;The program Main has unexpectedly terminated.&#10;It finished execution too early, should continue running.&#10;&#10;Please find below the output of your program during this failed test.&#10;&#10;---&#10;&#10;Arguments: ./test/baltimore.json&#10;&#10;depot - { -   &quot;SubwayLink&quot;: {&#10;{ -   &quot;SubwayLink&quot;: { -     &quot;1&quot;: &quot;Owings Mills&quot;,&#10;  &quot;SubwayLink&quot;: { -     &quot;1&quot;: &quot;Owings Mills&quot;, -     &quot;2&quot;: &quot;Old Court&quot;,&#10;    &quot;1&quot;: &quot;Owings Mills&quot;, -     &quot;2&quot;: &quot;Old Court&quot;, -     &quot;3&quot;: &quot;Milford Mill&quot;,&#10;    &quot;2&quot;: &quot;Old Court&quot;, -     &quot;3&quot;: &quot;Milford Mill&quot;, -     &quot;4&quot;: &quot;Reiserstown Plaza&quot;,&#10;    &quot;3&quot;: &quot;Milford Mill&quot;, -     &quot;4&quot;: &quot;Reiserstown Plaza&quot;, -     &quot;5&quot;: &quot;Rogers Avenue&quot;,&#10;    &quot;4&quot;: &quot;Reiserstown Plaza&quot;, -     &quot;5&quot;: &quot;Rogers Avenue&quot;, -     &quot;6&quot;: &quot;West Cold Spring&quot;,&#10;    &quot;5&quot;: &quot;Rogers Avenue&quot;, -     &quot;6&quot;: &quot;West Cold Spring&quot;, -     &quot;7&quot;: &quot;Mondawmin&quot;,&#10;    &quot;6&quot;: &quot;West Cold Spring&quot;, -     &quot;7&quot;: &quot;Mondawmin&quot;, -     &quot;8&quot;: &quot;Penn North&quot;,&#10;    &quot;7&quot;: &quot;Mondawmin&quot;, -     &quot;8&quot;: &quot;Penn North&quot;, -     &quot;9&quot;: &quot;Uptown&quot;,&#10;    &quot;8&quot;: &quot;Penn North&quot;, -     &quot;9&quot;: &quot;Uptown&quot;, -     &quot;10&quot;: &quot;State Center&quot;,&#10;    &quot;9&quot;: &quot;Uptown&quot;, -     &quot;10&quot;: &quot;State Center&quot;, -     &quot;11&quot;: &quot;Lexington Market&quot;,&#10;    &quot;10&quot;: &quot;State Center&quot;, -     &quot;11&quot;: &quot;Lexington Market&quot;, -     &quot;12&quot;: &quot;Charles Center&quot;,&#10;    &quot;11&quot;: &quot;Lexington Market&quot;, -     &quot;12&quot;: &quot;Charles Center&quot;, -     &quot;13&quot;: &quot;Shot Tower/Market Place&quot;,&#10;    &quot;12&quot;: &quot;Charles Center&quot;, -     &quot;13&quot;: &quot;Shot Tower/Market Place&quot;, -     &quot;14&quot;: &quot;Johns Hopkins Hospital&quot;&#10;    &quot;13&quot;: &quot;Shot Tower/Market Place&quot;, -     &quot;14&quot;: &quot;Johns Hopkins Hospital&quot; -   }&#10;    &quot;14&quot;: &quot;Johns Hopkins Hospital&quot; -   } - }&#10;  } - } - depot" type="java.lang.AssertionError">java.lang.AssertionError: Error in test #1
-
-The program Main has unexpectedly terminated.
-It finished execution too early, should continue running.
+  <testcase name="start" classname="Tests" time="0.104">
+    <failure message="java.lang.AssertionError: Exception in test #1&#10;&#10;java.lang.IllegalStateException: Not a JSON Array: {&quot;1&quot;:{&quot;name&quot;:&quot;Renes—Gare&quot;,&quot;transfer&quot;:[],&quot;time&quot;:3},&quot;2&quot;:{&quot;name&quot;:&quot;Epenex&quot;,&quot;transfer&quot;:[],&quot;time&quot;:2},&quot;3&quot;:{&quot;name&quot;:&quot;Crochy&quot;,&quot;transfer&quot;:[],&quot;time&quot;:6},&quot;4&quot;:{&quot;name&quot;:&quot;Cerisaie&quot;,&quot;transfer&quot;:[],&quot;time&quot;:5},&quot;5&quot;:{&quot;name&quot;:&quot;Bassenges&quot;,&quot;transfer&quot;:[],&quot;time&quot;:4},&quot;6&quot;:{&quot;name&quot;:&quot;EPFL&quot;,&quot;transfer&quot;:[],&quot;time&quot;:6},&quot;7&quot;:{&quot;name&quot;:&quot;UNL—Sorge&quot;,&quot;transfer&quot;:[],&quot;time&quot;:8},&quot;8&quot;:{&quot;name&quot;:&quot;Mouline&quot;,&quot;transfer&quot;:[],&quot;time&quot;:5},&quot;9&quot;:{&quot;name&quot;:&quot;UNL—Chemberonne&quot;,&quot;transfer&quot;:[],&quot;time&quot;:4},&quot;10&quot;:{&quot;name&quot;:&quot;Bourdonnette&quot;,&quot;transfer&quot;:[],&quot;time&quot;:5},&quot;11&quot;:{&quot;name&quot;:&quot;Melley&quot;,&quot;transfer&quot;:[],&quot;time&quot;:7},&quot;12&quot;:{&quot;name&quot;:&quot;Provence&quot;,&quot;transfer&quot;:[],&quot;time&quot;:6},&quot;13&quot;:{&quot;name&quot;:&quot;Montelly&quot;,&quot;transfer&quot;:[],&quot;time&quot;:5},&quot;14&quot;:{&quot;name&quot;:&quot;Vigie&quot;,&quot;transfer&quot;:[],&quot;time&quot;:4},&quot;15&quot;:{&quot;name&quot;:&quot;Lausanne—Flon&quot;,&quot;transfer&quot;:[],&quot;time&quot;:null}}&#13;&#10;&#9;at com.google.gson.JsonElement.getAsJsonArray(JsonElement.java:107)&#13;&#10;&#9;at metro.database.ReadSubwayData.fillMap(ReadSubwayData.java:53)&#13;&#10;&#9;at metro.database.ReadSubwayData.readFromFile(ReadSubwayData.java:30)&#13;&#10;&#9;at metro.database.Subway.populateMap(Subway.java:16)&#13;&#10;&#9;at metro.Main.main(Main.java:12)&#10;&#10;Arguments: ./test/lausanne.json" type="java.lang.AssertionError">java.lang.AssertionError: Exception in test #1
 
-Please find below the output of your program during this failed test.
+java.lang.IllegalStateException: Not a JSON Array: {&quot;1&quot;:{&quot;name&quot;:&quot;Renes—Gare&quot;,&quot;transfer&quot;:[],&quot;time&quot;:3},&quot;2&quot;:{&quot;name&quot;:&quot;Epenex&quot;,&quot;transfer&quot;:[],&quot;time&quot;:2},&quot;3&quot;:{&quot;name&quot;:&quot;Crochy&quot;,&quot;transfer&quot;:[],&quot;time&quot;:6},&quot;4&quot;:{&quot;name&quot;:&quot;Cerisaie&quot;,&quot;transfer&quot;:[],&quot;time&quot;:5},&quot;5&quot;:{&quot;name&quot;:&quot;Bassenges&quot;,&quot;transfer&quot;:[],&quot;time&quot;:4},&quot;6&quot;:{&quot;name&quot;:&quot;EPFL&quot;,&quot;transfer&quot;:[],&quot;time&quot;:6},&quot;7&quot;:{&quot;name&quot;:&quot;UNL—Sorge&quot;,&quot;transfer&quot;:[],&quot;time&quot;:8},&quot;8&quot;:{&quot;name&quot;:&quot;Mouline&quot;,&quot;transfer&quot;:[],&quot;time&quot;:5},&quot;9&quot;:{&quot;name&quot;:&quot;UNL—Chemberonne&quot;,&quot;transfer&quot;:[],&quot;time&quot;:4},&quot;10&quot;:{&quot;name&quot;:&quot;Bourdonnette&quot;,&quot;transfer&quot;:[],&quot;time&quot;:5},&quot;11&quot;:{&quot;name&quot;:&quot;Melley&quot;,&quot;transfer&quot;:[],&quot;time&quot;:7},&quot;12&quot;:{&quot;name&quot;:&quot;Provence&quot;,&quot;transfer&quot;:[],&quot;time&quot;:6},&quot;13&quot;:{&quot;name&quot;:&quot;Montelly&quot;,&quot;transfer&quot;:[],&quot;time&quot;:5},&quot;14&quot;:{&quot;name&quot;:&quot;Vigie&quot;,&quot;transfer&quot;:[],&quot;time&quot;:4},&quot;15&quot;:{&quot;name&quot;:&quot;Lausanne—Flon&quot;,&quot;transfer&quot;:[],&quot;time&quot;:null}}
+	at com.google.gson.JsonElement.getAsJsonArray(JsonElement.java:107)
+	at metro.database.ReadSubwayData.fillMap(ReadSubwayData.java:53)
+	at metro.database.ReadSubwayData.readFromFile(ReadSubwayData.java:30)
+	at metro.database.Subway.populateMap(Subway.java:16)
+	at metro.Main.main(Main.java:12)
 
----
-
-Arguments: ./test/baltimore.json
-
-depot - { -   &quot;SubwayLink&quot;: {
-{ -   &quot;SubwayLink&quot;: { -     &quot;1&quot;: &quot;Owings Mills&quot;,
-  &quot;SubwayLink&quot;: { -     &quot;1&quot;: &quot;Owings Mills&quot;, -     &quot;2&quot;: &quot;Old Court&quot;,
-    &quot;1&quot;: &quot;Owings Mills&quot;, -     &quot;2&quot;: &quot;Old Court&quot;, -     &quot;3&quot;: &quot;Milford Mill&quot;,
-    &quot;2&quot;: &quot;Old Court&quot;, -     &quot;3&quot;: &quot;Milford Mill&quot;, -     &quot;4&quot;: &quot;Reiserstown Plaza&quot;,
-    &quot;3&quot;: &quot;Milford Mill&quot;, -     &quot;4&quot;: &quot;Reiserstown Plaza&quot;, -     &quot;5&quot;: &quot;Rogers Avenue&quot;,
-    &quot;4&quot;: &quot;Reiserstown Plaza&quot;, -     &quot;5&quot;: &quot;Rogers Avenue&quot;, -     &quot;6&quot;: &quot;West Cold Spring&quot;,
-    &quot;5&quot;: &quot;Rogers Avenue&quot;, -     &quot;6&quot;: &quot;West Cold Spring&quot;, -     &quot;7&quot;: &quot;Mondawmin&quot;,
-    &quot;6&quot;: &quot;West Cold Spring&quot;, -     &quot;7&quot;: &quot;Mondawmin&quot;, -     &quot;8&quot;: &quot;Penn North&quot;,
-    &quot;7&quot;: &quot;Mondawmin&quot;, -     &quot;8&quot;: &quot;Penn North&quot;, -     &quot;9&quot;: &quot;Uptown&quot;,
-    &quot;8&quot;: &quot;Penn North&quot;, -     &quot;9&quot;: &quot;Uptown&quot;, -     &quot;10&quot;: &quot;State Center&quot;,
-    &quot;9&quot;: &quot;Uptown&quot;, -     &quot;10&quot;: &quot;State Center&quot;, -     &quot;11&quot;: &quot;Lexington Market&quot;,
-    &quot;10&quot;: &quot;State Center&quot;, -     &quot;11&quot;: &quot;Lexington Market&quot;, -     &quot;12&quot;: &quot;Charles Center&quot;,
-    &quot;11&quot;: &quot;Lexington Market&quot;, -     &quot;12&quot;: &quot;Charles Center&quot;, -     &quot;13&quot;: &quot;Shot Tower/Market Place&quot;,
-    &quot;12&quot;: &quot;Charles Center&quot;, -     &quot;13&quot;: &quot;Shot Tower/Market Place&quot;, -     &quot;14&quot;: &quot;Johns Hopkins Hospital&quot;
-    &quot;13&quot;: &quot;Shot Tower/Market Place&quot;, -     &quot;14&quot;: &quot;Johns Hopkins Hospital&quot; -   }
-    &quot;14&quot;: &quot;Johns Hopkins Hospital&quot; -   } - }
-  } - } - depot
+Arguments: ./test/lausanne.json
 	at org.junit.Assert.fail(Assert.java:88)
 	at org.hyperskill.hstest.stage.StageTest.start(StageTest.java:155)
 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
@@ -77,24 +58,6 @@
   </testcase>
   <system-out><![CDATA[?[1;31m
 Start test 1?[0m
-depot - { -   "SubwayLink": {
-{ -   "SubwayLink": { -     "1": "Owings Mills",
-  "SubwayLink": { -     "1": "Owings Mills", -     "2": "Old Court",
-    "1": "Owings Mills", -     "2": "Old Court", -     "3": "Milford Mill",
-    "2": "Old Court", -     "3": "Milford Mill", -     "4": "Reiserstown Plaza",
-    "3": "Milford Mill", -     "4": "Reiserstown Plaza", -     "5": "Rogers Avenue",
-    "4": "Reiserstown Plaza", -     "5": "Rogers Avenue", -     "6": "West Cold Spring",
-    "5": "Rogers Avenue", -     "6": "West Cold Spring", -     "7": "Mondawmin",
-    "6": "West Cold Spring", -     "7": "Mondawmin", -     "8": "Penn North",
-    "7": "Mondawmin", -     "8": "Penn North", -     "9": "Uptown",
-    "8": "Penn North", -     "9": "Uptown", -     "10": "State Center",
-    "9": "Uptown", -     "10": "State Center", -     "11": "Lexington Market",
-    "10": "State Center", -     "11": "Lexington Market", -     "12": "Charles Center",
-    "11": "Lexington Market", -     "12": "Charles Center", -     "13": "Shot Tower/Market Place",
-    "12": "Charles Center", -     "13": "Shot Tower/Market Place", -     "14": "Johns Hopkins Hospital"
-    "13": "Shot Tower/Market Place", -     "14": "Johns Hopkins Hospital" -   }
-    "14": "Johns Hopkins Hospital" -   } - }
-  } - } - depot
 ]]></system-out>
   <system-err><![CDATA[]]></system-err>
 </testsuite>
Index: .idea/modules/Web Quiz Engine/task/build/classes/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-classes-java.test.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules/Web Quiz Engine/task/build/classes/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-classes-java.test.iml b/.idea/modules/Web Quiz Engine/task/build/classes/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-classes-java.test.iml
new file mode 100644
--- /dev/null	(date 1648637880936)
+++ b/.idea/modules/Web Quiz Engine/task/build/classes/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-classes-java.test.iml	(date 1648637880936)
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module external.linked.project.id=":Web_Quiz_Engine-task-build-classes-java:test" external.linked.project.path="$MODULE_DIR$/../../../../../../../Web Quiz Engine/task/build/classes/java" external.root.project.path="$MODULE_DIR$/../../../../../../.." external.system.id="GRADLE" external.system.module.group="Web Quiz Engine" external.system.module.type="sourceSet" external.system.module.version="unspecified" type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager">
+    <output-test url="file://$MODULE_DIR$/../../../../../../../Web Quiz Engine/task/build/classes/java/out/test/classes" />
+    <exclude-output />
+    <content url="file://$MODULE_DIR$/../../../../../../../Web Quiz Engine/task/build/classes/java/src/test" />
+    <content url="file://$MODULE_DIR$/../../../../../../../Web Quiz Engine/task/build/classes/java/test">
+      <sourceFolder url="file://$MODULE_DIR$/../../../../../../../Web Quiz Engine/task/build/classes/java/test" isTestSource="true" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="module" module-name="Web_Quiz_Engine.Web_Quiz_Engine-task-build-classes-java.main" />
+    <orderEntry type="module" module-name="Web_Quiz_Engine.util.main" />
+    <orderEntry type="module" module-name="Web_Quiz_Engine.util.test" production-on-test="" />
+    <orderEntry type="library" name="Gradle: com.github.hyperskill:hs-test:release-SNAPSHOT" level="project" />
+    <orderEntry type="library" name="Gradle: org.assertj:assertj-swing-junit:3.9.2" level="project" />
+    <orderEntry type="library" name="Gradle: junit:junit:4.12" level="project" />
+    <orderEntry type="library" name="Gradle: org.apache.httpcomponents:httpclient:4.5.9" level="project" />
+    <orderEntry type="library" name="Gradle: com.google.code.gson:gson:2.8.5" level="project" />
+    <orderEntry type="library" name="Gradle: org.assertj:assertj-swing:3.9.2" level="project" />
+    <orderEntry type="library" name="Gradle: org.easytesting:fest-reflect:1.4.1" level="project" />
+    <orderEntry type="library" name="Gradle: org.hamcrest:hamcrest-core:1.3" level="project" />
+    <orderEntry type="library" name="Gradle: org.apache.httpcomponents:httpcore:4.4.11" level="project" />
+    <orderEntry type="library" name="Gradle: commons-logging:commons-logging:1.2" level="project" />
+    <orderEntry type="library" name="Gradle: commons-codec:commons-codec:1.11" level="project" />
+    <orderEntry type="library" name="Gradle: org.assertj:assertj-core:3.11.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Gradle: org.easytesting:fest-util:1.2.5" level="project" />
+  </component>
+  <component name="TestModuleProperties" production-module="Web_Quiz_Engine.Web_Quiz_Engine-task-build-classes-java.main" />
+</module>
\ No newline at end of file
Index: .idea/uiDesigner.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/uiDesigner.xml b/.idea/uiDesigner.xml
new file mode 100644
--- /dev/null	(date 1648736597363)
+++ b/.idea/uiDesigner.xml	(date 1648736597363)
@@ -0,0 +1,124 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Palette2">
+    <group name="Swing">
+      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
+      </item>
+      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.png" removable="false" auto-create-binding="false" can-attach-label="true">
+        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
+        <initial-values>
+          <property name="text" value="Button" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="RadioButton" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="CheckBox" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="Label" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
+          <preferred-size width="-1" height="20" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
+      </item>
+    </group>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/modules/Web Quiz Engine/task/build/tmp/Web_Quiz_Engine.Web_Quiz_Engine-task-build-tmp.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules/Web Quiz Engine/task/build/tmp/Web_Quiz_Engine.Web_Quiz_Engine-task-build-tmp.iml b/.idea/modules/Web Quiz Engine/task/build/tmp/Web_Quiz_Engine.Web_Quiz_Engine-task-build-tmp.iml
new file mode 100644
--- /dev/null	(date 1648637880925)
+++ b/.idea/modules/Web Quiz Engine/task/build/tmp/Web_Quiz_Engine.Web_Quiz_Engine-task-build-tmp.iml	(date 1648637880925)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module external.linked.project.id=":Web_Quiz_Engine-task-build-tmp" external.linked.project.path="$MODULE_DIR$/../../../../../../Web Quiz Engine/task/build/tmp" external.root.project.path="$MODULE_DIR$/../../../../../.." external.system.id="GRADLE" external.system.module.group="Web Quiz Engine" external.system.module.version="unspecified" type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$/../../../../../../Web Quiz Engine/task/build/tmp">
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../../Web Quiz Engine/task/build/tmp/.gradle" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../../Web Quiz Engine/task/build/tmp/build" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../../Web Quiz Engine/task/build/tmp/out" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: .idea/modules/Web Quiz Engine/task/build/tmp/Web_Quiz_Engine.Web_Quiz_Engine-task-build-tmp.test.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules/Web Quiz Engine/task/build/tmp/Web_Quiz_Engine.Web_Quiz_Engine-task-build-tmp.test.iml b/.idea/modules/Web Quiz Engine/task/build/tmp/Web_Quiz_Engine.Web_Quiz_Engine-task-build-tmp.test.iml
new file mode 100644
--- /dev/null	(date 1648637881019)
+++ b/.idea/modules/Web Quiz Engine/task/build/tmp/Web_Quiz_Engine.Web_Quiz_Engine-task-build-tmp.test.iml	(date 1648637881019)
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module external.linked.project.id=":Web_Quiz_Engine-task-build-tmp:test" external.linked.project.path="$MODULE_DIR$/../../../../../../Web Quiz Engine/task/build/tmp" external.root.project.path="$MODULE_DIR$/../../../../../.." external.system.id="GRADLE" external.system.module.group="Web Quiz Engine" external.system.module.type="sourceSet" external.system.module.version="unspecified" type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager">
+    <output-test url="file://$MODULE_DIR$/../../../../../../Web Quiz Engine/task/build/tmp/out/test/classes" />
+    <exclude-output />
+    <content url="file://$MODULE_DIR$/../../../../../../Web Quiz Engine/task/build/tmp/src/test" />
+    <content url="file://$MODULE_DIR$/../../../../../../Web Quiz Engine/task/build/tmp/test">
+      <sourceFolder url="file://$MODULE_DIR$/../../../../../../Web Quiz Engine/task/build/tmp/test" isTestSource="true" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="module" module-name="Web_Quiz_Engine.Web_Quiz_Engine-task-build-tmp.main" />
+    <orderEntry type="module" module-name="Web_Quiz_Engine.util.main" />
+    <orderEntry type="module" module-name="Web_Quiz_Engine.util.test" production-on-test="" />
+    <orderEntry type="library" name="Gradle: com.github.hyperskill:hs-test:release-SNAPSHOT" level="project" />
+    <orderEntry type="library" name="Gradle: org.assertj:assertj-swing-junit:3.9.2" level="project" />
+    <orderEntry type="library" name="Gradle: junit:junit:4.12" level="project" />
+    <orderEntry type="library" name="Gradle: org.apache.httpcomponents:httpclient:4.5.9" level="project" />
+    <orderEntry type="library" name="Gradle: com.google.code.gson:gson:2.8.5" level="project" />
+    <orderEntry type="library" name="Gradle: org.assertj:assertj-swing:3.9.2" level="project" />
+    <orderEntry type="library" name="Gradle: org.easytesting:fest-reflect:1.4.1" level="project" />
+    <orderEntry type="library" name="Gradle: org.hamcrest:hamcrest-core:1.3" level="project" />
+    <orderEntry type="library" name="Gradle: org.apache.httpcomponents:httpcore:4.4.11" level="project" />
+    <orderEntry type="library" name="Gradle: commons-logging:commons-logging:1.2" level="project" />
+    <orderEntry type="library" name="Gradle: commons-codec:commons-codec:1.11" level="project" />
+    <orderEntry type="library" name="Gradle: org.assertj:assertj-core:3.11.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Gradle: org.easytesting:fest-util:1.2.5" level="project" />
+  </component>
+  <component name="TestModuleProperties" production-module="Web_Quiz_Engine.Web_Quiz_Engine-task-build-tmp.main" />
+</module>
\ No newline at end of file
Index: .idea/modules/Web Quiz Engine/task/build/test-results/Web_Quiz_Engine.Web_Quiz_Engine-task-build-test-results.main.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules/Web Quiz Engine/task/build/test-results/Web_Quiz_Engine.Web_Quiz_Engine-task-build-test-results.main.iml b/.idea/modules/Web Quiz Engine/task/build/test-results/Web_Quiz_Engine.Web_Quiz_Engine-task-build-test-results.main.iml
new file mode 100644
--- /dev/null	(date 1648637881011)
+++ b/.idea/modules/Web Quiz Engine/task/build/test-results/Web_Quiz_Engine.Web_Quiz_Engine-task-build-test-results.main.iml	(date 1648637881011)
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module external.linked.project.id=":Web_Quiz_Engine-task-build-test-results:main" external.linked.project.path="$MODULE_DIR$/../../../../../../Web Quiz Engine/task/build/test-results" external.root.project.path="$MODULE_DIR$/../../../../../.." external.system.id="GRADLE" external.system.module.group="Web Quiz Engine" external.system.module.type="sourceSet" external.system.module.version="unspecified" type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_11">
+    <output url="file://$MODULE_DIR$/../../../../../../Web Quiz Engine/task/build/test-results/out/production/classes" />
+    <exclude-output />
+    <content url="file://$MODULE_DIR$/../../../../../../Web Quiz Engine/task/build/test-results/src" />
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: .idea/modules/Web Quiz Engine/task/build/tmp/Web_Quiz_Engine.Web_Quiz_Engine-task-build-tmp.main.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules/Web Quiz Engine/task/build/tmp/Web_Quiz_Engine.Web_Quiz_Engine-task-build-tmp.main.iml b/.idea/modules/Web Quiz Engine/task/build/tmp/Web_Quiz_Engine.Web_Quiz_Engine-task-build-tmp.main.iml
new file mode 100644
--- /dev/null	(date 1648637881027)
+++ b/.idea/modules/Web Quiz Engine/task/build/tmp/Web_Quiz_Engine.Web_Quiz_Engine-task-build-tmp.main.iml	(date 1648637881027)
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module external.linked.project.id=":Web_Quiz_Engine-task-build-tmp:main" external.linked.project.path="$MODULE_DIR$/../../../../../../Web Quiz Engine/task/build/tmp" external.root.project.path="$MODULE_DIR$/../../../../../.." external.system.id="GRADLE" external.system.module.group="Web Quiz Engine" external.system.module.type="sourceSet" external.system.module.version="unspecified" type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_11">
+    <output url="file://$MODULE_DIR$/../../../../../../Web Quiz Engine/task/build/tmp/out/production/classes" />
+    <exclude-output />
+    <content url="file://$MODULE_DIR$/../../../../../../Web Quiz Engine/task/build/tmp/src" />
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: .idea/modules/Web Quiz Engine/task/build/reports/tests/Web_Quiz_Engine.Web_Quiz_Engine-task-build-reports-tests.test.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules/Web Quiz Engine/task/build/reports/tests/Web_Quiz_Engine.Web_Quiz_Engine-task-build-reports-tests.test.iml b/.idea/modules/Web Quiz Engine/task/build/reports/tests/Web_Quiz_Engine.Web_Quiz_Engine-task-build-reports-tests.test.iml
new file mode 100644
--- /dev/null	(date 1648637880987)
+++ b/.idea/modules/Web Quiz Engine/task/build/reports/tests/Web_Quiz_Engine.Web_Quiz_Engine-task-build-reports-tests.test.iml	(date 1648637880987)
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module external.linked.project.id=":Web_Quiz_Engine-task-build-reports-tests:test" external.linked.project.path="$MODULE_DIR$/../../../../../../../Web Quiz Engine/task/build/reports/tests" external.root.project.path="$MODULE_DIR$/../../../../../../.." external.system.id="GRADLE" external.system.module.group="Web Quiz Engine" external.system.module.type="sourceSet" external.system.module.version="unspecified" type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager">
+    <output-test url="file://$MODULE_DIR$/../../../../../../../Web Quiz Engine/task/build/reports/tests/out/test/classes" />
+    <exclude-output />
+    <content url="file://$MODULE_DIR$/../../../../../../../Web Quiz Engine/task/build/reports/tests/src/test" />
+    <content url="file://$MODULE_DIR$/../../../../../../../Web Quiz Engine/task/build/reports/tests/test">
+      <sourceFolder url="file://$MODULE_DIR$/../../../../../../../Web Quiz Engine/task/build/reports/tests/test" isTestSource="true" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="module" module-name="Web_Quiz_Engine.Web_Quiz_Engine-task-build-reports-tests.main" />
+    <orderEntry type="module" module-name="Web_Quiz_Engine.util.main" />
+    <orderEntry type="module" module-name="Web_Quiz_Engine.util.test" production-on-test="" />
+    <orderEntry type="library" name="Gradle: com.github.hyperskill:hs-test:release-SNAPSHOT" level="project" />
+    <orderEntry type="library" name="Gradle: org.assertj:assertj-swing-junit:3.9.2" level="project" />
+    <orderEntry type="library" name="Gradle: junit:junit:4.12" level="project" />
+    <orderEntry type="library" name="Gradle: org.apache.httpcomponents:httpclient:4.5.9" level="project" />
+    <orderEntry type="library" name="Gradle: com.google.code.gson:gson:2.8.5" level="project" />
+    <orderEntry type="library" name="Gradle: org.assertj:assertj-swing:3.9.2" level="project" />
+    <orderEntry type="library" name="Gradle: org.easytesting:fest-reflect:1.4.1" level="project" />
+    <orderEntry type="library" name="Gradle: org.hamcrest:hamcrest-core:1.3" level="project" />
+    <orderEntry type="library" name="Gradle: org.apache.httpcomponents:httpcore:4.4.11" level="project" />
+    <orderEntry type="library" name="Gradle: commons-logging:commons-logging:1.2" level="project" />
+    <orderEntry type="library" name="Gradle: commons-codec:commons-codec:1.11" level="project" />
+    <orderEntry type="library" name="Gradle: org.assertj:assertj-core:3.11.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Gradle: org.easytesting:fest-util:1.2.5" level="project" />
+  </component>
+  <component name="TestModuleProperties" production-module="Web_Quiz_Engine.Web_Quiz_Engine-task-build-reports-tests.main" />
+</module>
\ No newline at end of file
Index: .idea/modules/Web Quiz Engine/task/build/generated/sources/headers/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-generated-sources-headers-java.main.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules/Web Quiz Engine/task/build/generated/sources/headers/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-generated-sources-headers-java.main.iml b/.idea/modules/Web Quiz Engine/task/build/generated/sources/headers/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-generated-sources-headers-java.main.iml
new file mode 100644
--- /dev/null	(date 1648637880980)
+++ b/.idea/modules/Web Quiz Engine/task/build/generated/sources/headers/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-generated-sources-headers-java.main.iml	(date 1648637880980)
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module external.linked.project.id=":Web_Quiz_Engine-task-build-generated-sources-headers-java:main" external.linked.project.path="$MODULE_DIR$/../../../../../../../../../Web Quiz Engine/task/build/generated/sources/headers/java" external.root.project.path="$MODULE_DIR$/../../../../../../../../.." external.system.id="GRADLE" external.system.module.group="Web Quiz Engine" external.system.module.type="sourceSet" external.system.module.version="unspecified" type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_11">
+    <output url="file://$MODULE_DIR$/../../../../../../../../../Web Quiz Engine/task/build/generated/sources/headers/java/out/production/classes" />
+    <exclude-output />
+    <content url="file://$MODULE_DIR$/../../../../../../../../../Web Quiz Engine/task/build/generated/sources/headers/java/src" />
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: .idea/modules/Web Quiz Engine/task/build/test-results/Web_Quiz_Engine.Web_Quiz_Engine-task-build-test-results.test.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules/Web Quiz Engine/task/build/test-results/Web_Quiz_Engine.Web_Quiz_Engine-task-build-test-results.test.iml b/.idea/modules/Web Quiz Engine/task/build/test-results/Web_Quiz_Engine.Web_Quiz_Engine-task-build-test-results.test.iml
new file mode 100644
--- /dev/null	(date 1648637881003)
+++ b/.idea/modules/Web Quiz Engine/task/build/test-results/Web_Quiz_Engine.Web_Quiz_Engine-task-build-test-results.test.iml	(date 1648637881003)
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module external.linked.project.id=":Web_Quiz_Engine-task-build-test-results:test" external.linked.project.path="$MODULE_DIR$/../../../../../../Web Quiz Engine/task/build/test-results" external.root.project.path="$MODULE_DIR$/../../../../../.." external.system.id="GRADLE" external.system.module.group="Web Quiz Engine" external.system.module.type="sourceSet" external.system.module.version="unspecified" type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager">
+    <output-test url="file://$MODULE_DIR$/../../../../../../Web Quiz Engine/task/build/test-results/out/test/classes" />
+    <exclude-output />
+    <content url="file://$MODULE_DIR$/../../../../../../Web Quiz Engine/task/build/test-results/src/test" />
+    <content url="file://$MODULE_DIR$/../../../../../../Web Quiz Engine/task/build/test-results/test">
+      <sourceFolder url="file://$MODULE_DIR$/../../../../../../Web Quiz Engine/task/build/test-results/test" isTestSource="true" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="module" module-name="Web_Quiz_Engine.Web_Quiz_Engine-task-build-test-results.main" />
+    <orderEntry type="module" module-name="Web_Quiz_Engine.util.main" />
+    <orderEntry type="module" module-name="Web_Quiz_Engine.util.test" production-on-test="" />
+    <orderEntry type="library" name="Gradle: com.github.hyperskill:hs-test:release-SNAPSHOT" level="project" />
+    <orderEntry type="library" name="Gradle: org.assertj:assertj-swing-junit:3.9.2" level="project" />
+    <orderEntry type="library" name="Gradle: junit:junit:4.12" level="project" />
+    <orderEntry type="library" name="Gradle: org.apache.httpcomponents:httpclient:4.5.9" level="project" />
+    <orderEntry type="library" name="Gradle: com.google.code.gson:gson:2.8.5" level="project" />
+    <orderEntry type="library" name="Gradle: org.assertj:assertj-swing:3.9.2" level="project" />
+    <orderEntry type="library" name="Gradle: org.easytesting:fest-reflect:1.4.1" level="project" />
+    <orderEntry type="library" name="Gradle: org.hamcrest:hamcrest-core:1.3" level="project" />
+    <orderEntry type="library" name="Gradle: org.apache.httpcomponents:httpcore:4.4.11" level="project" />
+    <orderEntry type="library" name="Gradle: commons-logging:commons-logging:1.2" level="project" />
+    <orderEntry type="library" name="Gradle: commons-codec:commons-codec:1.11" level="project" />
+    <orderEntry type="library" name="Gradle: org.assertj:assertj-core:3.11.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Gradle: org.easytesting:fest-util:1.2.5" level="project" />
+  </component>
+  <component name="TestModuleProperties" production-module="Web_Quiz_Engine.Web_Quiz_Engine-task-build-test-results.main" />
+</module>
\ No newline at end of file
Index: .idea/modules/Web Quiz Engine/task/build/reports/tests/Web_Quiz_Engine.Web_Quiz_Engine-task-build-reports-tests.main.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules/Web Quiz Engine/task/build/reports/tests/Web_Quiz_Engine.Web_Quiz_Engine-task-build-reports-tests.main.iml b/.idea/modules/Web Quiz Engine/task/build/reports/tests/Web_Quiz_Engine.Web_Quiz_Engine-task-build-reports-tests.main.iml
new file mode 100644
--- /dev/null	(date 1648637880996)
+++ b/.idea/modules/Web Quiz Engine/task/build/reports/tests/Web_Quiz_Engine.Web_Quiz_Engine-task-build-reports-tests.main.iml	(date 1648637880996)
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module external.linked.project.id=":Web_Quiz_Engine-task-build-reports-tests:main" external.linked.project.path="$MODULE_DIR$/../../../../../../../Web Quiz Engine/task/build/reports/tests" external.root.project.path="$MODULE_DIR$/../../../../../../.." external.system.id="GRADLE" external.system.module.group="Web Quiz Engine" external.system.module.type="sourceSet" external.system.module.version="unspecified" type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_11">
+    <output url="file://$MODULE_DIR$/../../../../../../../Web Quiz Engine/task/build/reports/tests/out/production/classes" />
+    <exclude-output />
+    <content url="file://$MODULE_DIR$/../../../../../../../Web Quiz Engine/task/build/reports/tests/src" />
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: ../HyperMetro/HyperMetro/task/test/lausanne.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"m1\": {\r\n    \"1\": \"Renes—Gare\",\r\n    \"2\": \"Epenex\",\r\n    \"3\": \"Crochy\",\r\n    \"4\": \"Cerisaie\",\r\n    \"5\": \"Bassenges\",\r\n    \"6\": \"EPFL\",\r\n    \"7\": \"UNL—Sorge\",\r\n    \"8\": \"Mouline\",\r\n    \"9\": \"UNL—Chemberonne\",\r\n    \"10\": \"Bourdonnette\",\r\n    \"11\": \"Melley\",\r\n    \"12\": \"Provence\",\r\n    \"13\": \"Montelly\",\r\n    \"14\": \"Vigie\",\r\n    \"15\": \"Lausanne—Flon\"\r\n  },\r\n  \"m2\": {\r\n    \"1\": \"Croisettes\",\r\n    \"2\": \"Vennes\",\r\n    \"3\": \"Fourmi\",\r\n    \"4\": \"Sallaz\",\r\n    \"5\": \"CHUV\",\r\n    \"6\": \"Ours\",\r\n    \"7\": \"Riponne M.Bejart\",\r\n    \"8\": \"Bessieres\",\r\n    \"9\": \"Lausanne—Flon\",\r\n    \"10\": \"Lausanne Gare CFF\",\r\n    \"11\": \"Grancy\",\r\n    \"12\": \"Delices\",\r\n    \"13\": \"Jourdils\",\r\n    \"14\": \"Ouchy—Olympique\"\r\n  }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../HyperMetro/HyperMetro/task/test/lausanne.json b/../HyperMetro/HyperMetro/task/test/lausanne.json
--- a/../HyperMetro/HyperMetro/task/test/lausanne.json	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../HyperMetro/HyperMetro/task/test/lausanne.json	(date 1648366589786)
@@ -1,35 +1,151 @@
 {
   "m1": {
-    "1": "Renes—Gare",
-    "2": "Epenex",
-    "3": "Crochy",
-    "4": "Cerisaie",
-    "5": "Bassenges",
-    "6": "EPFL",
-    "7": "UNL—Sorge",
-    "8": "Mouline",
-    "9": "UNL—Chemberonne",
-    "10": "Bourdonnette",
-    "11": "Melley",
-    "12": "Provence",
-    "13": "Montelly",
-    "14": "Vigie",
-    "15": "Lausanne—Flon"
+    "1": {
+      "name": "Renes—Gare",
+      "transfer": [],
+      "time": 3
+    },
+    "2": {
+      "name": "Epenex",
+      "transfer": [],
+      "time": 2
+    },
+    "3": {
+      "name": "Crochy",
+      "transfer": [],
+      "time": 6
+    },
+    "4": {
+      "name": "Cerisaie",
+      "transfer": [],
+      "time": 5
+    },
+    "5": {
+      "name": "Bassenges",
+      "transfer": [],
+      "time": 4
+    },
+    "6": {
+      "name": "EPFL",
+      "transfer": [],
+      "time": 6
+    },
+    "7": {
+      "name": "UNL—Sorge",
+      "transfer": [],
+      "time": 8
+    },
+    "8": {
+      "name": "Mouline",
+      "transfer": [],
+      "time": 5
+    },
+    "9": {
+      "name": "UNL—Chemberonne",
+      "transfer": [],
+      "time": 4
+    },
+    "10": {
+      "name": "Bourdonnette",
+      "transfer": [],
+      "time": 5
+    },
+    "11": {
+      "name": "Melley",
+      "transfer": [],
+      "time": 7
+    },
+    "12": {
+      "name": "Provence",
+      "transfer": [],
+      "time": 6
+    },
+    "13": {
+      "name": "Montelly",
+      "transfer": [],
+      "time": 5
+    },
+    "14": {
+      "name": "Vigie",
+      "transfer": [],
+      "time": 4
+    },
+    "15": {
+      "name": "Lausanne—Flon",
+      "transfer": [],
+      "time": null
+    }
   },
   "m2": {
-    "1": "Croisettes",
-    "2": "Vennes",
-    "3": "Fourmi",
-    "4": "Sallaz",
-    "5": "CHUV",
-    "6": "Ours",
-    "7": "Riponne M.Bejart",
-    "8": "Bessieres",
-    "9": "Lausanne—Flon",
-    "10": "Lausanne Gare CFF",
-    "11": "Grancy",
-    "12": "Delices",
-    "13": "Jourdils",
-    "14": "Ouchy—Olympique"
+    "1": {
+      "name": "Croisettes",
+      "transfer": [],
+      "time": 6
+    },
+    "2": {
+      "name": "Vennes",
+      "transfer": [],
+      "time": 5
+    },
+    "3": {
+      "name": "Fourmi",
+      "transfer": [],
+      "time": 4
+    },
+    "4": {
+      "name": "Sallaz",
+      "transfer": [],
+      "time": 6
+    },
+    "5": {
+      "name": "CHUV",
+      "transfer": [],
+      "time": 5
+    },
+    "6": {
+      "name": "Ours",
+      "transfer": [],
+      "time": 3
+    },
+    "7": {
+      "name": "Riponne M.Bejart",
+      "transfer": [],
+      "time": 4
+    },
+    "8": {
+      "name": "Bessieres",
+      "transfer": [],
+      "time": 6
+    },
+    "9": {
+      "name": "Lausanne—Flon",
+      "transfer": [],
+      "time": 5
+    },
+    "10": {
+      "name": "Lausanne Gare CFF",
+      "transfer": [],
+      "time": 3
+    },
+    "11": {
+      "name": "Grancy",
+      "transfer": [],
+      "time": 4
+    },
+    "12": {
+      "name": "Delices",
+      "transfer": [],
+      "time": 6
+    },
+    "13": {
+      "name": "Jourdils",
+      "transfer": [],
+      "time": 3
+    },
+    "14": {
+      "name": "Ouchy—Olympique",
+      "transfer": [],
+      "time": null
+    }
   }
 }
\ No newline at end of file
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
new file mode 100644
--- /dev/null	(date 1648637881037)
+++ b/.idea/compiler.xml	(date 1648637881037)
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <bytecodeTargetLevel target="17">
+      <module name="Web_Quiz_Engine.util.main" target="11" />
+      <module name="Web_Quiz_Engine.Web_Quiz_Engine-task-build-classes-java.main" target="11" />
+      <module name="Web_Quiz_Engine.Web_Quiz_Engine-task-build-generated-sources-annotationProcessor-java.main" target="11" />
+      <module name="Web_Quiz_Engine.Web_Quiz_Engine-task-build-generated-sources-headers-java.main" target="11" />
+      <module name="Web_Quiz_Engine.Web_Quiz_Engine-task-build-reports-tests.main" target="11" />
+      <module name="Web_Quiz_Engine.Web_Quiz_Engine-task-build-test-results.main" target="11" />
+      <module name="Web_Quiz_Engine.Web_Quiz_Engine-task-build-tmp.main" target="11" />
+      <module name="Web_Quiz_Engine.Web_Quiz_Engine-task.main" target="11" />
+    </bytecodeTargetLevel>
+  </component>
+</project>
\ No newline at end of file
Index: ../Learning Progress Tracker/.idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectModuleManager\">\r\n    <modules>\r\n      <module fileurl=\"file://$PROJECT_DIR$/.idea/modules/Learning_Progress_Tracker.iml\" filepath=\"$PROJECT_DIR$/.idea/modules/Learning_Progress_Tracker.iml\" />\r\n      <module fileurl=\"file://$PROJECT_DIR$/.idea/modules/Learning Progress Tracker/task/Learning_Progress_Tracker.Learning_Progress_Tracker-task.iml\" filepath=\"$PROJECT_DIR$/.idea/modules/Learning Progress Tracker/task/Learning_Progress_Tracker.Learning_Progress_Tracker-task.iml\" />\r\n      <module fileurl=\"file://$PROJECT_DIR$/.idea/modules/Learning Progress Tracker/task/Learning_Progress_Tracker.Learning_Progress_Tracker-task.main.iml\" filepath=\"$PROJECT_DIR$/.idea/modules/Learning Progress Tracker/task/Learning_Progress_Tracker.Learning_Progress_Tracker-task.main.iml\" />\r\n      <module fileurl=\"file://$PROJECT_DIR$/.idea/modules/Learning Progress Tracker/task/Learning_Progress_Tracker.Learning_Progress_Tracker-task.test.iml\" filepath=\"$PROJECT_DIR$/.idea/modules/Learning Progress Tracker/task/Learning_Progress_Tracker.Learning_Progress_Tracker-task.test.iml\" />\r\n      <module fileurl=\"file://$PROJECT_DIR$/.idea/modules/util/Learning_Progress_Tracker.util.iml\" filepath=\"$PROJECT_DIR$/.idea/modules/util/Learning_Progress_Tracker.util.iml\" />\r\n      <module fileurl=\"file://$PROJECT_DIR$/.idea/modules/util/Learning_Progress_Tracker.util.main.iml\" filepath=\"$PROJECT_DIR$/.idea/modules/util/Learning_Progress_Tracker.util.main.iml\" />\r\n      <module fileurl=\"file://$PROJECT_DIR$/.idea/modules/util/Learning_Progress_Tracker.util.test.iml\" filepath=\"$PROJECT_DIR$/.idea/modules/util/Learning_Progress_Tracker.util.test.iml\" />\r\n    </modules>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Learning Progress Tracker/.idea/modules.xml b/../Learning Progress Tracker/.idea/modules.xml
--- a/../Learning Progress Tracker/.idea/modules.xml	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../Learning Progress Tracker/.idea/modules.xml	(date 1648131771166)
@@ -4,6 +4,24 @@
     <modules>
       <module fileurl="file://$PROJECT_DIR$/.idea/modules/Learning_Progress_Tracker.iml" filepath="$PROJECT_DIR$/.idea/modules/Learning_Progress_Tracker.iml" />
       <module fileurl="file://$PROJECT_DIR$/.idea/modules/Learning Progress Tracker/task/Learning_Progress_Tracker.Learning_Progress_Tracker-task.iml" filepath="$PROJECT_DIR$/.idea/modules/Learning Progress Tracker/task/Learning_Progress_Tracker.Learning_Progress_Tracker-task.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/Learning Progress Tracker/task/build/classes/java/Learning_Progress_Tracker.Learning_Progress_Tracker-task-build-classes-java.iml" filepath="$PROJECT_DIR$/.idea/modules/Learning Progress Tracker/task/build/classes/java/Learning_Progress_Tracker.Learning_Progress_Tracker-task-build-classes-java.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/Learning Progress Tracker/task/build/classes/java/Learning_Progress_Tracker.Learning_Progress_Tracker-task-build-classes-java.main.iml" filepath="$PROJECT_DIR$/.idea/modules/Learning Progress Tracker/task/build/classes/java/Learning_Progress_Tracker.Learning_Progress_Tracker-task-build-classes-java.main.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/Learning Progress Tracker/task/build/classes/java/Learning_Progress_Tracker.Learning_Progress_Tracker-task-build-classes-java.test.iml" filepath="$PROJECT_DIR$/.idea/modules/Learning Progress Tracker/task/build/classes/java/Learning_Progress_Tracker.Learning_Progress_Tracker-task-build-classes-java.test.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/Learning Progress Tracker/task/build/generated/sources/annotationProcessor/java/Learning_Progress_Tracker.Learning_Progress_Tracker-task-build-generated-sources-annotationProcessor-java.iml" filepath="$PROJECT_DIR$/.idea/modules/Learning Progress Tracker/task/build/generated/sources/annotationProcessor/java/Learning_Progress_Tracker.Learning_Progress_Tracker-task-build-generated-sources-annotationProcessor-java.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/Learning Progress Tracker/task/build/generated/sources/annotationProcessor/java/Learning_Progress_Tracker.Learning_Progress_Tracker-task-build-generated-sources-annotationProcessor-java.main.iml" filepath="$PROJECT_DIR$/.idea/modules/Learning Progress Tracker/task/build/generated/sources/annotationProcessor/java/Learning_Progress_Tracker.Learning_Progress_Tracker-task-build-generated-sources-annotationProcessor-java.main.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/Learning Progress Tracker/task/build/generated/sources/annotationProcessor/java/Learning_Progress_Tracker.Learning_Progress_Tracker-task-build-generated-sources-annotationProcessor-java.test.iml" filepath="$PROJECT_DIR$/.idea/modules/Learning Progress Tracker/task/build/generated/sources/annotationProcessor/java/Learning_Progress_Tracker.Learning_Progress_Tracker-task-build-generated-sources-annotationProcessor-java.test.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/Learning Progress Tracker/task/build/generated/sources/headers/java/Learning_Progress_Tracker.Learning_Progress_Tracker-task-build-generated-sources-headers-java.iml" filepath="$PROJECT_DIR$/.idea/modules/Learning Progress Tracker/task/build/generated/sources/headers/java/Learning_Progress_Tracker.Learning_Progress_Tracker-task-build-generated-sources-headers-java.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/Learning Progress Tracker/task/build/generated/sources/headers/java/Learning_Progress_Tracker.Learning_Progress_Tracker-task-build-generated-sources-headers-java.main.iml" filepath="$PROJECT_DIR$/.idea/modules/Learning Progress Tracker/task/build/generated/sources/headers/java/Learning_Progress_Tracker.Learning_Progress_Tracker-task-build-generated-sources-headers-java.main.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/Learning Progress Tracker/task/build/generated/sources/headers/java/Learning_Progress_Tracker.Learning_Progress_Tracker-task-build-generated-sources-headers-java.test.iml" filepath="$PROJECT_DIR$/.idea/modules/Learning Progress Tracker/task/build/generated/sources/headers/java/Learning_Progress_Tracker.Learning_Progress_Tracker-task-build-generated-sources-headers-java.test.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/Learning Progress Tracker/task/build/reports/tests/Learning_Progress_Tracker.Learning_Progress_Tracker-task-build-reports-tests.iml" filepath="$PROJECT_DIR$/.idea/modules/Learning Progress Tracker/task/build/reports/tests/Learning_Progress_Tracker.Learning_Progress_Tracker-task-build-reports-tests.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/Learning Progress Tracker/task/build/reports/tests/Learning_Progress_Tracker.Learning_Progress_Tracker-task-build-reports-tests.main.iml" filepath="$PROJECT_DIR$/.idea/modules/Learning Progress Tracker/task/build/reports/tests/Learning_Progress_Tracker.Learning_Progress_Tracker-task-build-reports-tests.main.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/Learning Progress Tracker/task/build/reports/tests/Learning_Progress_Tracker.Learning_Progress_Tracker-task-build-reports-tests.test.iml" filepath="$PROJECT_DIR$/.idea/modules/Learning Progress Tracker/task/build/reports/tests/Learning_Progress_Tracker.Learning_Progress_Tracker-task-build-reports-tests.test.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/Learning Progress Tracker/task/build/test-results/Learning_Progress_Tracker.Learning_Progress_Tracker-task-build-test-results.iml" filepath="$PROJECT_DIR$/.idea/modules/Learning Progress Tracker/task/build/test-results/Learning_Progress_Tracker.Learning_Progress_Tracker-task-build-test-results.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/Learning Progress Tracker/task/build/test-results/Learning_Progress_Tracker.Learning_Progress_Tracker-task-build-test-results.main.iml" filepath="$PROJECT_DIR$/.idea/modules/Learning Progress Tracker/task/build/test-results/Learning_Progress_Tracker.Learning_Progress_Tracker-task-build-test-results.main.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/Learning Progress Tracker/task/build/test-results/Learning_Progress_Tracker.Learning_Progress_Tracker-task-build-test-results.test.iml" filepath="$PROJECT_DIR$/.idea/modules/Learning Progress Tracker/task/build/test-results/Learning_Progress_Tracker.Learning_Progress_Tracker-task-build-test-results.test.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/Learning Progress Tracker/task/build/tmp/Learning_Progress_Tracker.Learning_Progress_Tracker-task-build-tmp.iml" filepath="$PROJECT_DIR$/.idea/modules/Learning Progress Tracker/task/build/tmp/Learning_Progress_Tracker.Learning_Progress_Tracker-task-build-tmp.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/Learning Progress Tracker/task/build/tmp/Learning_Progress_Tracker.Learning_Progress_Tracker-task-build-tmp.main.iml" filepath="$PROJECT_DIR$/.idea/modules/Learning Progress Tracker/task/build/tmp/Learning_Progress_Tracker.Learning_Progress_Tracker-task-build-tmp.main.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/Learning Progress Tracker/task/build/tmp/Learning_Progress_Tracker.Learning_Progress_Tracker-task-build-tmp.test.iml" filepath="$PROJECT_DIR$/.idea/modules/Learning Progress Tracker/task/build/tmp/Learning_Progress_Tracker.Learning_Progress_Tracker-task-build-tmp.test.iml" />
       <module fileurl="file://$PROJECT_DIR$/.idea/modules/Learning Progress Tracker/task/Learning_Progress_Tracker.Learning_Progress_Tracker-task.main.iml" filepath="$PROJECT_DIR$/.idea/modules/Learning Progress Tracker/task/Learning_Progress_Tracker.Learning_Progress_Tracker-task.main.iml" />
       <module fileurl="file://$PROJECT_DIR$/.idea/modules/Learning Progress Tracker/task/Learning_Progress_Tracker.Learning_Progress_Tracker-task.test.iml" filepath="$PROJECT_DIR$/.idea/modules/Learning Progress Tracker/task/Learning_Progress_Tracker.Learning_Progress_Tracker-task.test.iml" />
       <module fileurl="file://$PROJECT_DIR$/.idea/modules/util/Learning_Progress_Tracker.util.iml" filepath="$PROJECT_DIR$/.idea/modules/util/Learning_Progress_Tracker.util.iml" />
Index: ../HyperMetro/build.gradle.bak
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'hyperskill'\r\n\r\nsubprojects {\r\n    apply plugin: 'application'\r\n    apply plugin: 'java'\r\n\r\n    def userJava = Integer.parseInt(JavaVersion.current().getMajorVersion())\r\n    def hsJava = Integer.parseInt(hs.java.version)\r\n    def testJava = Math.max(userJava, hsJava)\r\n\r\n    java.toolchain.languageVersion = JavaLanguageVersion.of(testJava)\r\n\r\n    compileJava {\r\n        javaCompiler = javaToolchains.compilerFor {\r\n            languageVersion = JavaLanguageVersion.of(userJava)\r\n        }\r\n    }\r\n\r\n    compileTestJava {\r\n        javaCompiler = javaToolchains.compilerFor {\r\n            languageVersion = JavaLanguageVersion.of(testJava)\r\n        }\r\n    }\r\n\r\n    repositories {\r\n        mavenCentral()\r\n        maven { url \"https://jitpack.io\" }\r\n    }\r\n\r\n    dependencies {\r\n        testImplementation 'com.github.hyperskill:hs-test:release-SNAPSHOT'\r\n\t\t// https://mvnrepository.com/artifact/com.beust/jcommander\r\n\t\timplementation group: 'com.beust', name: 'jcommander', version: '1.82'\r\n\r\n    }\r\n\r\n    configurations.all {\r\n        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'\r\n    }\r\n\r\n    sourceSets {\r\n        main.java.srcDir 'src'\r\n        test.java.srcDir 'test'\r\n    }\r\n\r\n    test {\r\n        systemProperty \"file.encoding\", \"utf-8\"\r\n        outputs.upToDateWhen { false }\r\n    }\r\n\r\n    compileJava.options.encoding = 'utf-8'\r\n    tasks.withType(JavaCompile) {\r\n        options.encoding = 'utf-8'\r\n    }\r\n}\r\n\r\nproject(':util') {\r\n    dependencies {\r\n        implementation 'com.github.hyperskill:hs-test:release-SNAPSHOT'\r\n    }\r\n}\r\n\r\nconfigure(subprojects.findAll {it.name != 'util'}) {\r\n    dependencies {\r\n        testImplementation project(':util').sourceSets.main.output\r\n        testImplementation project(':util').sourceSets.test.output\r\n    }\r\n}\r\n\r\nwrapper {\r\n    gradleVersion = hs.gradle.version\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../HyperMetro/build.gradle.bak b/../HyperMetro/build.gradle.bak
--- a/../HyperMetro/build.gradle.bak	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../HyperMetro/build.gradle.bak	(date 1648362105025)
@@ -29,9 +29,6 @@
 
     dependencies {
         testImplementation 'com.github.hyperskill:hs-test:release-SNAPSHOT'
-		// https://mvnrepository.com/artifact/com.beust/jcommander
-		implementation group: 'com.beust', name: 'jcommander', version: '1.82'
-
     }
 
     configurations.all {
Index: ../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/Application.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tracker;\r\n\r\nimport java.util.Scanner;\r\n\r\npublic class Application {\r\n    public static void run() {\r\n        System.out.println(\"Learning Progress Tracker\");\r\n        String command;\r\n        try (Scanner scanner = new Scanner(System.in)) {\r\n            while (scanner.hasNextLine()) {\r\n                command = scanner.nextLine().strip();\r\n                if (command.equals(\"exit\")) {\r\n                    System.out.println(\"Bye!\");\r\n                    break;\r\n                }\r\n                if (command.isBlank()) {\r\n                    System.out.println(\"No input.\");\r\n                }\r\n                if (command.length() > 0) {\r\n                    System.out.println(\"Error: unknown command!\");\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/Application.java b/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/Application.java
--- a/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/Application.java	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/Application.java	(date 1648297010493)
@@ -1,27 +1,57 @@
 package tracker;
 
+import tracker.commands.*;
+
 import java.util.Scanner;
 
 public class Application {
+
     public static void run() {
         System.out.println("Learning Progress Tracker");
-        String command;
+
+        Controller controller = new Controller();
+        Command command = null;
+        StudentsDataBase studentsDataBase = StudentsDataBase.getStudentsDataBase();
+
         try (Scanner scanner = new Scanner(System.in)) {
             while (scanner.hasNextLine()) {
-                command = scanner.nextLine().strip();
-                if (command.equals("exit")) {
-                    System.out.println("Bye!");
+                String input = scanner.nextLine();
+                if (input.equals("add students")) {
+                    command = new AddStudentsCommand(studentsDataBase);
+                    controller.setCommand(command);
+                } else if (input.equals("back")) {
+                    command = new BackCommand(studentsDataBase);
+                    controller.setCommand(command);
+                } else if (input.equals("list")) {
+                    command = new ListCommand(studentsDataBase);
+                    controller.setCommand(command);
+                } else if (input.equals("add points")) {
+                    command = new AddPointsCommand(studentsDataBase);
+                    controller.setCommand(command);
+                } else if (input.equals("find")) {
+                    command = new FindCommand(studentsDataBase);
+                    controller.setCommand(command);
+                } else if (input.equals("statistics")) {
+                    command = new StatisticsCommand(studentsDataBase);
+                    controller.setCommand(command);
+                } else if (input.equals("notify")) {
+                    command = new NotifyCommand(studentsDataBase);
+                    controller.setCommand(command);
+                } else if (input.equals("exit")) {
+                    command = new ExitCommand();
+                    controller.setCommand(command);
+                    controller.executeCommand();
                     break;
                 }
-                if (command.isBlank()) {
+                if (command != null) {
+                    controller.executeCommand();
+                } else if (input.isBlank()) {
                     System.out.println("No input.");
-                }
-                if (command.length() > 0) {
-                    System.out.println("Error: unknown command!");
-                }
+                } else System.out.println("Unknown command!");
+            }
+        }
 
-            }
-        }
-    }
+    }
+}
 
-}
+
Index: ../Learning Progress Tracker/Learning Progress Tracker/task/build/reports/tests/test/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\r\n<meta http-equiv=\"x-ua-compatible\" content=\"IE=edge\"/>\r\n<title>Test results - Test Summary</title>\r\n<link href=\"css/base-style.css\" rel=\"stylesheet\" type=\"text/css\"/>\r\n<link href=\"css/style.css\" rel=\"stylesheet\" type=\"text/css\"/>\r\n<script src=\"js/report.js\" type=\"text/javascript\"></script>\r\n</head>\r\n<body>\r\n<div id=\"content\">\r\n<h1>Test Summary</h1>\r\n<div id=\"summary\">\r\n<table>\r\n<tr>\r\n<td>\r\n<div class=\"summaryGroup\">\r\n<table>\r\n<tr>\r\n<td>\r\n<div class=\"infoBox\" id=\"tests\">\r\n<div class=\"counter\">2</div>\r\n<p>tests</p>\r\n</div>\r\n</td>\r\n<td>\r\n<div class=\"infoBox\" id=\"failures\">\r\n<div class=\"counter\">0</div>\r\n<p>failures</p>\r\n</div>\r\n</td>\r\n<td>\r\n<div class=\"infoBox\" id=\"ignored\">\r\n<div class=\"counter\">0</div>\r\n<p>ignored</p>\r\n</div>\r\n</td>\r\n<td>\r\n<div class=\"infoBox\" id=\"duration\">\r\n<div class=\"counter\">0.146s</div>\r\n<p>duration</p>\r\n</div>\r\n</td>\r\n</tr>\r\n</table>\r\n</div>\r\n</td>\r\n<td>\r\n<div class=\"infoBox success\" id=\"successRate\">\r\n<div class=\"percent\">100%</div>\r\n<p>successful</p>\r\n</div>\r\n</td>\r\n</tr>\r\n</table>\r\n</div>\r\n<div id=\"tabs\">\r\n<ul class=\"tabLinks\">\r\n<li>\r\n<a href=\"#tab0\">Packages</a>\r\n</li>\r\n<li>\r\n<a href=\"#tab1\">Classes</a>\r\n</li>\r\n</ul>\r\n<div id=\"tab0\" class=\"tab\">\r\n<h2>Packages</h2>\r\n<table>\r\n<thead>\r\n<tr>\r\n<th>Package</th>\r\n<th>Tests</th>\r\n<th>Failures</th>\r\n<th>Ignored</th>\r\n<th>Duration</th>\r\n<th>Success rate</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td class=\"success\">\r\n<a href=\"packages/default-package.html\">default-package</a>\r\n</td>\r\n<td>1</td>\r\n<td>0</td>\r\n<td>0</td>\r\n<td>0.134s</td>\r\n<td class=\"success\">100%</td>\r\n</tr>\r\n<tr>\r\n<td class=\"success\">\r\n<a href=\"packages/tracker.html\">tracker</a>\r\n</td>\r\n<td>1</td>\r\n<td>0</td>\r\n<td>0</td>\r\n<td>0.012s</td>\r\n<td class=\"success\">100%</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n<div id=\"tab1\" class=\"tab\">\r\n<h2>Classes</h2>\r\n<table>\r\n<thead>\r\n<tr>\r\n<th>Class</th>\r\n<th>Tests</th>\r\n<th>Failures</th>\r\n<th>Ignored</th>\r\n<th>Duration</th>\r\n<th>Success rate</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td class=\"success\">\r\n<a href=\"classes/LearningProgressTrackerTest.html\">LearningProgressTrackerTest</a>\r\n</td>\r\n<td>1</td>\r\n<td>0</td>\r\n<td>0</td>\r\n<td>0.134s</td>\r\n<td class=\"success\">100%</td>\r\n</tr>\r\n<tr>\r\n<td class=\"success\">\r\n<a href=\"classes/tracker.SampleTest.html\">tracker.SampleTest</a>\r\n</td>\r\n<td>1</td>\r\n<td>0</td>\r\n<td>0</td>\r\n<td>0.012s</td>\r\n<td class=\"success\">100%</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<div id=\"footer\">\r\n<p>\r\n<div>\r\n<label class=\"hidden\" id=\"label-for-line-wrapping-toggle\" for=\"line-wrapping-toggle\">Wrap lines\r\n<input id=\"line-wrapping-toggle\" type=\"checkbox\" autocomplete=\"off\"/>\r\n</label>\r\n</div>Generated by \r\n<a href=\"http://www.gradle.org\">Gradle 7.3.3</a> at 22 мар. 2022 г., 19:08:16</p>\r\n</div>\r\n</div>\r\n</body>\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Learning Progress Tracker/Learning Progress Tracker/task/build/reports/tests/test/index.html b/../Learning Progress Tracker/Learning Progress Tracker/task/build/reports/tests/test/index.html
--- a/../Learning Progress Tracker/Learning Progress Tracker/task/build/reports/tests/test/index.html	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../Learning Progress Tracker/Learning Progress Tracker/task/build/reports/tests/test/index.html	(date 1648299035351)
@@ -38,7 +38,7 @@
 </td>
 <td>
 <div class="infoBox" id="duration">
-<div class="counter">0.146s</div>
+<div class="counter">0.882s</div>
 <p>duration</p>
 </div>
 </td>
@@ -85,7 +85,7 @@
 <td>1</td>
 <td>0</td>
 <td>0</td>
-<td>0.134s</td>
+<td>0.872s</td>
 <td class="success">100%</td>
 </tr>
 <tr>
@@ -95,7 +95,7 @@
 <td>1</td>
 <td>0</td>
 <td>0</td>
-<td>0.012s</td>
+<td>0.010s</td>
 <td class="success">100%</td>
 </tr>
 </tbody>
@@ -122,7 +122,7 @@
 <td>1</td>
 <td>0</td>
 <td>0</td>
-<td>0.134s</td>
+<td>0.872s</td>
 <td class="success">100%</td>
 </tr>
 <tr>
@@ -132,7 +132,7 @@
 <td>1</td>
 <td>0</td>
 <td>0</td>
-<td>0.012s</td>
+<td>0.010s</td>
 <td class="success">100%</td>
 </tr>
 </tbody>
@@ -146,7 +146,7 @@
 <input id="line-wrapping-toggle" type="checkbox" autocomplete="off"/>
 </label>
 </div>Generated by 
-<a href="http://www.gradle.org">Gradle 7.3.3</a> at 22 мар. 2022 г., 19:08:16</p>
+<a href="http://www.gradle.org">Gradle 7.3.3</a> at 26 мар. 2022 г., 15:50:35</p>
 </div>
 </div>
 </body>
Index: ../Learning Progress Tracker/Learning Progress Tracker/task/build/reports/tests/test/classes/tracker.SampleTest.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\r\n<meta http-equiv=\"x-ua-compatible\" content=\"IE=edge\"/>\r\n<title>Test results - SampleTest</title>\r\n<link href=\"../css/base-style.css\" rel=\"stylesheet\" type=\"text/css\"/>\r\n<link href=\"../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/>\r\n<script src=\"../js/report.js\" type=\"text/javascript\"></script>\r\n</head>\r\n<body>\r\n<div id=\"content\">\r\n<h1>SampleTest</h1>\r\n<div class=\"breadcrumbs\">\r\n<a href=\"../index.html\">all</a> &gt; \r\n<a href=\"../packages/tracker.html\">tracker</a> &gt; SampleTest</div>\r\n<div id=\"summary\">\r\n<table>\r\n<tr>\r\n<td>\r\n<div class=\"summaryGroup\">\r\n<table>\r\n<tr>\r\n<td>\r\n<div class=\"infoBox\" id=\"tests\">\r\n<div class=\"counter\">1</div>\r\n<p>tests</p>\r\n</div>\r\n</td>\r\n<td>\r\n<div class=\"infoBox\" id=\"failures\">\r\n<div class=\"counter\">0</div>\r\n<p>failures</p>\r\n</div>\r\n</td>\r\n<td>\r\n<div class=\"infoBox\" id=\"ignored\">\r\n<div class=\"counter\">0</div>\r\n<p>ignored</p>\r\n</div>\r\n</td>\r\n<td>\r\n<div class=\"infoBox\" id=\"duration\">\r\n<div class=\"counter\">0.012s</div>\r\n<p>duration</p>\r\n</div>\r\n</td>\r\n</tr>\r\n</table>\r\n</div>\r\n</td>\r\n<td>\r\n<div class=\"infoBox success\" id=\"successRate\">\r\n<div class=\"percent\">100%</div>\r\n<p>successful</p>\r\n</div>\r\n</td>\r\n</tr>\r\n</table>\r\n</div>\r\n<div id=\"tabs\">\r\n<ul class=\"tabLinks\">\r\n<li>\r\n<a href=\"#tab0\">Tests</a>\r\n</li>\r\n</ul>\r\n<div id=\"tab0\" class=\"tab\">\r\n<h2>Tests</h2>\r\n<table>\r\n<thead>\r\n<tr>\r\n<th>Test</th>\r\n<th>Duration</th>\r\n<th>Result</th>\r\n</tr>\r\n</thead>\r\n<tr>\r\n<td class=\"success\">test()</td>\r\n<td class=\"success\">0.012s</td>\r\n<td class=\"success\">passed</td>\r\n</tr>\r\n</table>\r\n</div>\r\n</div>\r\n<div id=\"footer\">\r\n<p>\r\n<div>\r\n<label class=\"hidden\" id=\"label-for-line-wrapping-toggle\" for=\"line-wrapping-toggle\">Wrap lines\r\n<input id=\"line-wrapping-toggle\" type=\"checkbox\" autocomplete=\"off\"/>\r\n</label>\r\n</div>Generated by \r\n<a href=\"http://www.gradle.org\">Gradle 7.3.3</a> at 22 мар. 2022 г., 19:08:16</p>\r\n</div>\r\n</div>\r\n</body>\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Learning Progress Tracker/Learning Progress Tracker/task/build/reports/tests/test/classes/tracker.SampleTest.html b/../Learning Progress Tracker/Learning Progress Tracker/task/build/reports/tests/test/classes/tracker.SampleTest.html
--- a/../Learning Progress Tracker/Learning Progress Tracker/task/build/reports/tests/test/classes/tracker.SampleTest.html	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../Learning Progress Tracker/Learning Progress Tracker/task/build/reports/tests/test/classes/tracker.SampleTest.html	(date 1648299035351)
@@ -41,7 +41,7 @@
 </td>
 <td>
 <div class="infoBox" id="duration">
-<div class="counter">0.012s</div>
+<div class="counter">0.010s</div>
 <p>duration</p>
 </div>
 </td>
@@ -76,7 +76,7 @@
 </thead>
 <tr>
 <td class="success">test()</td>
-<td class="success">0.012s</td>
+<td class="success">0.010s</td>
 <td class="success">passed</td>
 </tr>
 </table>
@@ -89,7 +89,7 @@
 <input id="line-wrapping-toggle" type="checkbox" autocomplete="off"/>
 </label>
 </div>Generated by 
-<a href="http://www.gradle.org">Gradle 7.3.3</a> at 22 мар. 2022 г., 19:08:16</p>
+<a href="http://www.gradle.org">Gradle 7.3.3</a> at 26 мар. 2022 г., 15:50:35</p>
 </div>
 </div>
 </body>
Index: ../Learning Progress Tracker/Learning Progress Tracker/task/build/reports/tests/test/packages/tracker.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\r\n<meta http-equiv=\"x-ua-compatible\" content=\"IE=edge\"/>\r\n<title>Test results - Package tracker</title>\r\n<link href=\"../css/base-style.css\" rel=\"stylesheet\" type=\"text/css\"/>\r\n<link href=\"../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/>\r\n<script src=\"../js/report.js\" type=\"text/javascript\"></script>\r\n</head>\r\n<body>\r\n<div id=\"content\">\r\n<h1>Package tracker</h1>\r\n<div class=\"breadcrumbs\">\r\n<a href=\"../index.html\">all</a> &gt; tracker</div>\r\n<div id=\"summary\">\r\n<table>\r\n<tr>\r\n<td>\r\n<div class=\"summaryGroup\">\r\n<table>\r\n<tr>\r\n<td>\r\n<div class=\"infoBox\" id=\"tests\">\r\n<div class=\"counter\">1</div>\r\n<p>tests</p>\r\n</div>\r\n</td>\r\n<td>\r\n<div class=\"infoBox\" id=\"failures\">\r\n<div class=\"counter\">0</div>\r\n<p>failures</p>\r\n</div>\r\n</td>\r\n<td>\r\n<div class=\"infoBox\" id=\"ignored\">\r\n<div class=\"counter\">0</div>\r\n<p>ignored</p>\r\n</div>\r\n</td>\r\n<td>\r\n<div class=\"infoBox\" id=\"duration\">\r\n<div class=\"counter\">0.012s</div>\r\n<p>duration</p>\r\n</div>\r\n</td>\r\n</tr>\r\n</table>\r\n</div>\r\n</td>\r\n<td>\r\n<div class=\"infoBox success\" id=\"successRate\">\r\n<div class=\"percent\">100%</div>\r\n<p>successful</p>\r\n</div>\r\n</td>\r\n</tr>\r\n</table>\r\n</div>\r\n<div id=\"tabs\">\r\n<ul class=\"tabLinks\">\r\n<li>\r\n<a href=\"#tab0\">Classes</a>\r\n</li>\r\n</ul>\r\n<div id=\"tab0\" class=\"tab\">\r\n<h2>Classes</h2>\r\n<table>\r\n<thread>\r\n<tr>\r\n<th>Class</th>\r\n<th>Tests</th>\r\n<th>Failures</th>\r\n<th>Ignored</th>\r\n<th>Duration</th>\r\n<th>Success rate</th>\r\n</tr>\r\n</thread>\r\n<tr>\r\n<td class=\"success\">\r\n<a href=\"../classes/tracker.SampleTest.html\">SampleTest</a>\r\n</td>\r\n<td>1</td>\r\n<td>0</td>\r\n<td>0</td>\r\n<td>0.012s</td>\r\n<td class=\"success\">100%</td>\r\n</tr>\r\n</table>\r\n</div>\r\n</div>\r\n<div id=\"footer\">\r\n<p>\r\n<div>\r\n<label class=\"hidden\" id=\"label-for-line-wrapping-toggle\" for=\"line-wrapping-toggle\">Wrap lines\r\n<input id=\"line-wrapping-toggle\" type=\"checkbox\" autocomplete=\"off\"/>\r\n</label>\r\n</div>Generated by \r\n<a href=\"http://www.gradle.org\">Gradle 7.3.3</a> at 22 мар. 2022 г., 19:08:16</p>\r\n</div>\r\n</div>\r\n</body>\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Learning Progress Tracker/Learning Progress Tracker/task/build/reports/tests/test/packages/tracker.html b/../Learning Progress Tracker/Learning Progress Tracker/task/build/reports/tests/test/packages/tracker.html
--- a/../Learning Progress Tracker/Learning Progress Tracker/task/build/reports/tests/test/packages/tracker.html	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../Learning Progress Tracker/Learning Progress Tracker/task/build/reports/tests/test/packages/tracker.html	(date 1648299035351)
@@ -40,7 +40,7 @@
 </td>
 <td>
 <div class="infoBox" id="duration">
-<div class="counter">0.012s</div>
+<div class="counter">0.010s</div>
 <p>duration</p>
 </div>
 </td>
@@ -83,7 +83,7 @@
 <td>1</td>
 <td>0</td>
 <td>0</td>
-<td>0.012s</td>
+<td>0.010s</td>
 <td class="success">100%</td>
 </tr>
 </table>
@@ -96,7 +96,7 @@
 <input id="line-wrapping-toggle" type="checkbox" autocomplete="off"/>
 </label>
 </div>Generated by 
-<a href="http://www.gradle.org">Gradle 7.3.3</a> at 22 мар. 2022 г., 19:08:16</p>
+<a href="http://www.gradle.org">Gradle 7.3.3</a> at 26 мар. 2022 г., 15:50:35</p>
 </div>
 </div>
 </body>
Index: ../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/Student.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tracker;public class Student {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/Student.java b/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/Student.java
--- a/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/Student.java	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/Student.java	(date 1648298775736)
@@ -1,2 +1,104 @@
-package tracker;public class Student {
+package tracker;
+
+public class Student {
+    private String email;
+    private String firstName;
+    private String lastName;
+    private Integer ID;
+    private int grad1 = 0;
+    private int grad2 = 0;
+    private int grad3 = 0;
+    private int grad4 = 0;
+    private boolean accomplishedJava = false;
+    private boolean accomplishedDSA = false;
+    private boolean accomplishedDB = false;
+    private boolean accomplishedSpring = false;
+
+    public Student(String email, String firstName, String lastName, Integer ID) {
+        this.email = email;
+        this.firstName = firstName;
+        this.lastName = lastName;
+        this.ID = ID;
+    }
+
+    public String getEmail() {
+        return email;
+    }
+
+    public String getFirstName() {
+        return firstName;
+    }
+
+    public String getLastName() {
+        return lastName;
+    }
+
+    public boolean isAccomplishedJava() {
+        return accomplishedJava;
+    }
+
+    public void setAccomplishedJava(boolean accomplishedJava) {
+        this.accomplishedJava = accomplishedJava;
+    }
+
+    public boolean isAccomplishedDSA() {
+        return accomplishedDSA;
+    }
+
+    public void setAccomplishedDSA(boolean accomplishedDSA) {
+        this.accomplishedDSA = accomplishedDSA;
+    }
+
+    public boolean isAccomplishedDB() {
+        return accomplishedDB;
+    }
+
+    public void setAccomplishedDB(boolean accomplishedDB) {
+        this.accomplishedDB = accomplishedDB;
+    }
+
+    public boolean isAccomplishedSpring() {
+        return accomplishedSpring;
+    }
+
+    public void setAccomplishedSpring(boolean accomplishedSpring) {
+        this.accomplishedSpring = accomplishedSpring;
+    }
+
+    public int getGrad1() {
+        return grad1;
+    }
+
+    public int getGrad2() {
+        return grad2;
+    }
+
+    public int getGrad3() {
+        return grad3;
+    }
+
+    public int getGrad4() {
+        return grad4;
+    }
+
+    public void setGrad1(int grad1) {
+        this.grad1 = grad1;
+    }
+
+    public void setGrad2(int grad2) {
+        this.grad2 = grad2;
+    }
+
+    public void setGrad3(int grad3) {
+        this.grad3 = grad3;
+    }
+
+    public void setGrad4(int grad4) {
+        this.grad4 = grad4;
+    }
+
+    @Override
+    public String toString() {
+        return " points: Java=" + grad1 + "; DSA=" + grad2 + "; Databases=" + grad3 + "; Spring=" + grad4;
+    }
 }
Index: ../Learning Progress Tracker/Learning Progress Tracker/task/build/test-results/test/TEST-tracker.SampleTest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<testsuite name=\"tracker.SampleTest\" tests=\"1\" skipped=\"0\" failures=\"0\" errors=\"0\" timestamp=\"2022-03-22T16:08:16\" hostname=\"FRACTAL\" time=\"0.012\">\r\n  <properties/>\r\n  <testcase name=\"test()\" classname=\"tracker.SampleTest\" time=\"0.012\"/>\r\n  <system-out><![CDATA[]]></system-out>\r\n  <system-err><![CDATA[]]></system-err>\r\n</testsuite>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Learning Progress Tracker/Learning Progress Tracker/task/build/test-results/test/TEST-tracker.SampleTest.xml b/../Learning Progress Tracker/Learning Progress Tracker/task/build/test-results/test/TEST-tracker.SampleTest.xml
--- a/../Learning Progress Tracker/Learning Progress Tracker/task/build/test-results/test/TEST-tracker.SampleTest.xml	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../Learning Progress Tracker/Learning Progress Tracker/task/build/test-results/test/TEST-tracker.SampleTest.xml	(date 1648299035348)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<testsuite name="tracker.SampleTest" tests="1" skipped="0" failures="0" errors="0" timestamp="2022-03-22T16:08:16" hostname="FRACTAL" time="0.012">
+<testsuite name="tracker.SampleTest" tests="1" skipped="0" failures="0" errors="0" timestamp="2022-03-26T12:50:35" hostname="FRACTAL" time="0.01">
   <properties/>
-  <testcase name="test()" classname="tracker.SampleTest" time="0.012"/>
+  <testcase name="test()" classname="tracker.SampleTest" time="0.01"/>
   <system-out><![CDATA[]]></system-out>
   <system-err><![CDATA[]]></system-err>
 </testsuite>
Index: ../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/FindCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tracker.commands;public class FindCommand {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/FindCommand.java b/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/FindCommand.java
--- a/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/FindCommand.java	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/FindCommand.java	(date 1648227833107)
@@ -1,2 +1,35 @@
-package tracker.commands;public class FindCommand {
+package tracker.commands;
+
+import tracker.StudentsDataBase;
+
+import java.util.Scanner;
+
+public class FindCommand implements Command {
+    StudentsDataBase studentsDataBase;
+
+    public FindCommand(StudentsDataBase studentsDataBase) {
+        this.studentsDataBase = studentsDataBase;
+    }
+
+    @Override
+    public void execute() {
+        System.out.println("Enter an id or 'back' to return.");
+        Scanner scanner = new Scanner(System.in);
+        while (scanner.hasNextLine()) {
+            String input = scanner.nextLine();
+            if (input.equals("back")) {
+                break;
+            } else if (isCorrectID(input)) {
+                System.out.print(input + studentsDataBase.getDbScores().get(input).toString());
+                System.out.println();
+            } else {
+                System.out.println("No student is found for id=" + input);
+            }
+
+        }
+    }
+
+    boolean isCorrectID(String input) {
+        return studentsDataBase.getDbScores().containsKey(input);
+    }
 }
Index: ../Learning Progress Tracker/Learning Progress Tracker/task/build/test-results/test/TEST-LearningProgressTrackerTest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<testsuite name=\"LearningProgressTrackerTest\" tests=\"1\" skipped=\"0\" failures=\"0\" errors=\"0\" timestamp=\"2022-03-22T16:08:15\" hostname=\"FRACTAL\" time=\"0.134\">\r\n  <properties/>\r\n  <testcase name=\"start\" classname=\"LearningProgressTrackerTest\" time=\"0.134\"/>\r\n  <system-out><![CDATA[?[1;31m\r\nStart test 1?[0m\r\nLearning Progress Tracker\r\n> \r\nNo input.\r\n?[1;31m\r\nStart test 2?[0m\r\nLearning Progress Tracker\r\n>   \r\nNo input.\r\n?[1;31m\r\nStart test 3?[0m\r\nLearning Progress Tracker\r\n> \t\r\nNo input.\r\n?[1;31m\r\nStart test 4?[0m\r\nLearning Progress Tracker\r\n>  \t\r\nNo input.\r\n?[1;31m\r\nStart test 5?[0m\r\nLearning Progress Tracker\r\n> exit\r\nBye!\r\n?[1;31m\r\nStart test 6?[0m\r\nLearning Progress Tracker\r\n> abc\r\nError: unknown command!\r\n?[1;31m\r\nStart test 7?[0m\r\nLearning Progress Tracker\r\n> quit\r\nError: unknown command!\r\n?[1;31m\r\nStart test 8?[0m\r\nLearning Progress Tracker\r\n>   brexit \r\nError: unknown command!\r\n?[1;31m\r\nStart test 9?[0m\r\nLearning Progress Tracker\r\n> exi  t\r\nError: unknown command!\r\n?[1;31m\r\nStart test 10?[0m\r\nLearning Progress Tracker\r\n> help\r\nError: unknown command!\r\n?[1;31m\r\nStart test 11?[0m\r\nLearning Progress Tracker\r\n> break\r\nError: unknown command!\r\n?[1;31m\r\nStart test 12?[0m\r\nLearning Progress Tracker\r\n> -help\r\nError: unknown command!\r\n?[1;31m\r\nStart test 13?[0m\r\nLearning Progress Tracker\r\n> Ctrl+C\r\nError: unknown command!\r\n?[1;31m\r\nStart test 14?[0m\r\nLearning Progress Tracker\r\n> exit please\r\nError: unknown command!\r\n?[1;31m\r\nStart test 15?[0m\r\nLearning Progress Tracker\r\n> :q\r\nError: unknown command!\r\n]]></system-out>\r\n  <system-err><![CDATA[]]></system-err>\r\n</testsuite>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Learning Progress Tracker/Learning Progress Tracker/task/build/test-results/test/TEST-LearningProgressTrackerTest.xml b/../Learning Progress Tracker/Learning Progress Tracker/task/build/test-results/test/TEST-LearningProgressTrackerTest.xml
--- a/../Learning Progress Tracker/Learning Progress Tracker/task/build/test-results/test/TEST-LearningProgressTrackerTest.xml	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../Learning Progress Tracker/Learning Progress Tracker/task/build/test-results/test/TEST-LearningProgressTrackerTest.xml	(date 1648299035348)
@@ -1,82 +1,759 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<testsuite name="LearningProgressTrackerTest" tests="1" skipped="0" failures="0" errors="0" timestamp="2022-03-22T16:08:15" hostname="FRACTAL" time="0.134">
+<testsuite name="LearningProgressTrackerTest" tests="1" skipped="0" failures="0" errors="0" timestamp="2022-03-26T12:50:34" hostname="FRACTAL" time="0.872">
   <properties/>
-  <testcase name="start" classname="LearningProgressTrackerTest" time="0.134"/>
+  <testcase name="start" classname="LearningProgressTrackerTest" time="0.872"/>
   <system-out><![CDATA[?[1;31m
 Start test 1?[0m
 Learning Progress Tracker
-> 
-No input.
+> back
+Enter 'exit' to exit the program.
+> exit
+Bye!
 ?[1;31m
 Start test 2?[0m
 Learning Progress Tracker
->   
+> 
 No input.
 ?[1;31m
 Start test 3?[0m
 Learning Progress Tracker
-> 	
+>   
 No input.
 ?[1;31m
 Start test 4?[0m
 Learning Progress Tracker
->  	
+> 	
 No input.
 ?[1;31m
 Start test 5?[0m
 Learning Progress Tracker
-> exit
-Bye!
+>  	
+No input.
 ?[1;31m
 Start test 6?[0m
 Learning Progress Tracker
 > abc
-Error: unknown command!
+Unknown command!
 ?[1;31m
 Start test 7?[0m
 Learning Progress Tracker
 > quit
-Error: unknown command!
+Unknown command!
 ?[1;31m
 Start test 8?[0m
 Learning Progress Tracker
 >   brexit 
-Error: unknown command!
+Unknown command!
 ?[1;31m
 Start test 9?[0m
 Learning Progress Tracker
 > exi  t
-Error: unknown command!
+Unknown command!
 ?[1;31m
 Start test 10?[0m
 Learning Progress Tracker
-> help
-Error: unknown command!
+> ?
+Unknown command!
 ?[1;31m
 Start test 11?[0m
 Learning Progress Tracker
 > break
-Error: unknown command!
+Unknown command!
 ?[1;31m
 Start test 12?[0m
 Learning Progress Tracker
-> -help
-Error: unknown command!
+> -exit
+Unknown command!
 ?[1;31m
 Start test 13?[0m
 Learning Progress Tracker
 > Ctrl+C
-Error: unknown command!
+Unknown command!
 ?[1;31m
 Start test 14?[0m
 Learning Progress Tracker
 > exit please
-Error: unknown command!
+Unknown command!
 ?[1;31m
 Start test 15?[0m
 Learning Progress Tracker
 > :q
-Error: unknown command!
+Unknown command!
+?[1;31m
+Start test 16?[0m
+Learning Progress Tracker
+> java
+Unknown command!
+?[1;31m
+Start test 17?[0m
+Learning Progress Tracker
+> spring
+Unknown command!
+?[1;31m
+Start test 18?[0m
+Learning Progress Tracker
+> dsa
+Unknown command!
+?[1;31m
+Start test 19?[0m
+Learning Progress Tracker
+> databases
+Unknown command!
+?[1;31m
+Start test 20?[0m
+Learning Progress Tracker
+> add students
+Enter student credentials or 'back' to return:
+> exit
+Incorrect credentials.
+> back
+Total 0 students have been added.
+> back
+Enter 'exit' to exit the program.
+> exit
+Bye!
+?[1;31m
+Start test 21?[0m
+Learning Progress Tracker
+> add students
+Enter student credentials or 'back' to return:
+> John Smith jsmith@hotmail.com
+The student has been added.
+> Anny Doolittle anny.md@mail.edu
+The student has been added.
+> Jean-Claude O'Connor jcda123@google.net
+The student has been added.
+> Mary Emelianenko 125367at@zzz90.z9
+The student has been added.
+> Al Owen u15da125@a1s2f4f7.a1c2c5s4
+The student has been added.
+> Robert Jemison Van de Graaff robertvdgraaff@mit.edu
+The student has been added.
+> Ed Eden a1@a1.a1
+The student has been added.
+> na'me s-u ii@ii.ii
+The student has been added.
+> n'a me su aa-b'b ab@ab.ab
+The student has been added.
+> nA me 1@1.1
+The student has been added.
+> back
+Total 10 students have been added.
+?[1;31m
+Start test 22?[0m
+Learning Progress Tracker
+> add students
+Enter student credentials or 'back' to return:
+> 
+Incorrect credentials.
+>  	
+Incorrect credentials.
+> name surname
+Incorrect credentials.
+> n surname email@email.xyz
+Incorrect first name.
+> 'name surname email@email.xyz
+Incorrect first name.
+> -name surname email@email.xyz
+Incorrect first name.
+> name- surname email@email.xyz
+Incorrect first name.
+> name' surname email@email.xyz
+Incorrect first name.
+> nam-'e surname email@email.xyz
+Incorrect first name.
+> na'-me surname email@email.xyz
+Incorrect first name.
+> na--me surname email@email.xyz
+Incorrect first name.
+> na''me surname email@email.xyz
+Incorrect first name.
+> námé surname email@email.xyz
+Incorrect first name.
+> name s email@email.xyz
+Incorrect last name.
+> name -surname email@email.xyz
+Incorrect last name.
+> name 'surname email@email.xyz
+Incorrect last name.
+> name surnam''e email@email.xyz
+Incorrect last name.
+> name surn--ame email@email.xyz
+Incorrect last name.
+> name s'-urname email@email.xyz
+Incorrect last name.
+> name su-'rname email@email.xyz
+Incorrect last name.
+> name surname- email@email.xyz
+Incorrect last name.
+> name surname' email@email.xyz
+Incorrect last name.
+> name surnámé email@email.xyz
+Incorrect last name.
+> name surname emailemail.xyz
+Incorrect email.
+> name surname email@emailxyz
+Incorrect email.
+> name surname email@e@mail.xyz
+Incorrect email.
+> back
+Total 0 students have been added.
+?[1;31m
+Start test 23?[0m
+Learning Progress Tracker
+> add students
+Enter student credentials or 'back' to return:
+> back
+Total 0 students have been added.
+> list
+No students found.
+?[1;31m
+Start test 24?[0m
+Learning Progress Tracker
+> add students
+Enter student credentials or 'back' to return:
+> Charlena Girardo address1@mail.com
+The student has been added.
+> Charlena Girardo address1@mail.com
+This email is already taken.
+> Shoshana Utica address2@mail.com
+The student has been added.
+> Shoshana Utica address2@mail.com
+This email is already taken.
+> Amye Uriisa address3@mail.com
+The student has been added.
+> Amye Uriisa address3@mail.com
+This email is already taken.
+> Van Fawnia address4@mail.com
+The student has been added.
+> Van Fawnia address4@mail.com
+This email is already taken.
+> Ann Agnella address5@mail.com
+The student has been added.
+> Ann Agnella address5@mail.com
+This email is already taken.
+> Carmella Campman address6@mail.com
+The student has been added.
+> Carmella Campman address6@mail.com
+This email is already taken.
+> Alexina Belcher address7@mail.com
+The student has been added.
+> Alexina Belcher address7@mail.com
+This email is already taken.
+> Olga Rosanne address8@mail.com
+The student has been added.
+> Olga Rosanne address8@mail.com
+This email is already taken.
+> Beatrisa Jegar address9@mail.com
+The student has been added.
+> Beatrisa Jegar address9@mail.com
+This email is already taken.
+> Anjanette Uis address10@mail.com
+The student has been added.
+> Anjanette Uis address10@mail.com
+This email is already taken.
+> Gwenette Anagnos address11@mail.com
+The student has been added.
+> Gwenette Anagnos address11@mail.com
+This email is already taken.
+> Leola Whelan address12@mail.com
+The student has been added.
+> Leola Whelan address12@mail.com
+This email is already taken.
+> back
+Total 12 students have been added.
+?[1;31m
+Start test 25?[0m
+Learning Progress Tracker
+> add students
+Enter student credentials or 'back' to return:
+> Alexina Belcher address1@mail.com
+The student has been added.
+> Dolley Panther address2@mail.com
+The student has been added.
+> Marisa Firman address3@mail.com
+The student has been added.
+> Trixie Winer address4@mail.com
+The student has been added.
+> Gwenette Anagnos address5@mail.com
+The student has been added.
+> Natka Herculie address6@mail.com
+The student has been added.
+> Elysha Quinlan address7@mail.com
+The student has been added.
+> Emelia Annnora address8@mail.com
+The student has been added.
+> Ricki Trovillion address9@mail.com
+The student has been added.
+> Toby Bleier address10@mail.com
+The student has been added.
+> Francesca Francis address11@mail.com
+The student has been added.
+> Carmella Campman address12@mail.com
+The student has been added.
+> back
+Total 12 students have been added.
+> list
+Students:
+110
+100
+111
+101
+102
+103
+104
+105
+106
+107
+108
+109
+?[1;31m
+Start test 26?[0m
+Learning Progress Tracker
+> add points
+Enter an id and points or 'back' to return:
+> back
+> back
+Enter 'exit' to exit the program.
+> exit
+Bye!
+?[1;31m
+Start test 27?[0m
+Learning Progress Tracker
+> add students
+Enter student credentials or 'back' to return:
+> Tasha Chem address1@mail.com
+The student has been added.
+> Emelia Annnora address2@mail.com
+The student has been added.
+> Alexina Belcher address3@mail.com
+The student has been added.
+> Toby Bleier address4@mail.com
+The student has been added.
+> Marisa Firman address5@mail.com
+The student has been added.
+> Ricki Trovillion address6@mail.com
+The student has been added.
+> back
+Total 6 students have been added.
+> list
+Students:
+100
+101
+102
+103
+104
+105
+> add points
+Enter an id and points or 'back' to return:
+> 100 
+Incorrect points format.
+> 100 -1 1 1 1
+Incorrect points format.
+> 100 1 1 2 A
+Incorrect points format.
+> 100 1 1 1
+Incorrect points format.
+> 100 1 1 1 1 1
+Incorrect points format.
+> imsurethereisnosuchstudentid 1 1 1 1
+No student is found for id=imsurethereisnosuchstudentid
+?[1;31m
+Start test 28?[0m
+Learning Progress Tracker
+> add students
+Enter student credentials or 'back' to return:
+> Nonna Miko address1@mail.com
+The student has been added.
+> Dolley Panther address2@mail.com
+The student has been added.
+> Ann Agnella address3@mail.com
+The student has been added.
+> Hedwig Wally address4@mail.com
+The student has been added.
+> Lebbie Alabaster address5@mail.com
+The student has been added.
+> Francesca Francis address6@mail.com
+The student has been added.
+> back
+Total 6 students have been added.
+> list
+Students:
+100
+101
+102
+103
+104
+105
+> add points
+Enter an id and points or 'back' to return:
+> 100 4 3 2 3
+Points updated.
+> 101 2 2 4 6
+Points updated.
+> 102 10 6 7 1
+Points updated.
+> 103 8 8 4 4
+Points updated.
+> 104 8 1 9 2
+Points updated.
+> 105 6 7 10 3
+Points updated.
+?[1;31m
+Start test 29?[0m
+Learning Progress Tracker
+> find
+Enter an id or 'back' to return.
+> back
+> back
+Enter 'exit' to exit the program.
+> exit
+Bye!
+?[1;31m
+Start test 30?[0m
+Learning Progress Tracker
+> add students
+Enter student credentials or 'back' to return:
+> Charlena Girardo address1@mail.com
+The student has been added.
+> Olga Rosanne address2@mail.com
+The student has been added.
+> Nonna Miko address3@mail.com
+The student has been added.
+> Marisa Firman address4@mail.com
+The student has been added.
+> Brandise Hardan address5@mail.com
+The student has been added.
+> back
+Total 5 students have been added.
+> list
+Students:
+100
+101
+102
+103
+104
+> add points
+Enter an id and points or 'back' to return:
+> 100 0 0 0 0
+Points updated.
+> 100 0 0 0 0
+Points updated.
+> 101 1 1 1 1
+Points updated.
+> 101 1 1 1 1
+Points updated.
+> 102 2 2 2 2
+Points updated.
+> 102 2 2 2 2
+Points updated.
+> 103 3 3 3 3
+Points updated.
+> 103 3 3 3 3
+Points updated.
+> 104 4 4 4 4
+Points updated.
+> 104 4 4 4 4
+Points updated.
+> back
+> find
+Enter an id or 'back' to return.
+> 100
+100 points: Java=0; DSA=0; Databases=0; Spring=0
+> 101
+101 points: Java=2; DSA=2; Databases=2; Spring=2
+> 102
+102 points: Java=4; DSA=4; Databases=4; Spring=4
+> 103
+103 points: Java=6; DSA=6; Databases=6; Spring=6
+> 104
+104 points: Java=8; DSA=8; Databases=8; Spring=8
+?[1;31m
+Start test 31?[0m
+Learning Progress Tracker
+> statistics
+Type the name of a course to see details or 'back' to quit:
+most popular: n/a
+Least popular: n/a
+Highest activity: n/a
+Lowest activity: n/a
+Easiest course: n/a
+Hardest course: n/a
+> back
+> back
+Enter 'exit' to exit the program.
+> exit
+Bye!
+?[1;31m
+Start test 32?[0m
+Learning Progress Tracker
+> statistics
+Type the name of a course to see details or 'back' to quit:
+most popular: n/a
+Least popular: n/a
+Highest activity: n/a
+Lowest activity: n/a
+Easiest course: n/a
+Hardest course: n/a
+?[1;31m
+Start test 33?[0m
+Learning Progress Tracker
+> statistics
+Type the name of a course to see details or 'back' to quit:
+most popular: n/a
+Least popular: n/a
+Highest activity: n/a
+Lowest activity: n/a
+Easiest course: n/a
+Hardest course: n/a
+> Java
+Java
+id     points completed
+> DSA
+DSA
+id     points completed
+> Databases
+Databases
+id     points completed
+> Spring
+Spring
+id     points completed
+> abc
+Unknown course.
+> quit
+Unknown course.
+>   brexit 
+Unknown course.
+> exi  t
+Unknown course.
+> ?
+Unknown course.
+> break
+Unknown course.
+> -exit
+Unknown course.
+> Ctrl+C
+Unknown course.
+> exit please
+Unknown course.
+> :q
+Unknown course.
+?[1;31m
+Start test 34?[0m
+Learning Progress Tracker
+> statistics
+Type the name of a course to see details or 'back' to quit:
+most popular: n/a
+Least popular: n/a
+Highest activity: n/a
+Lowest activity: n/a
+Easiest course: n/a
+Hardest course: n/a
+> back
+> back
+Enter 'exit' to exit the program.
+> exit
+Bye!
+?[1;31m
+Start test 35?[0m
+Learning Progress Tracker
+> add students
+Enter student credentials or 'back' to return:
+> Gwenette Kironde address1@mail.com
+The student has been added.
+> Annecorinne Ause address2@mail.com
+The student has been added.
+> Elwira Florrie address3@mail.com
+The student has been added.
+> Gwenette Anagnos address4@mail.com
+The student has been added.
+> back
+Total 4 students have been added.
+> list
+Students:
+100
+101
+102
+103
+> add points
+Enter an id and points or 'back' to return:
+> 100 5 4 3 1
+Points updated.
+> 101 5 4 3 1
+Points updated.
+> 102 5 4 3 1
+Points updated.
+> 103 5 4 3 1
+Points updated.
+> back
+> statistics
+Type the name of a course to see details or 'back' to quit:
+most popular: Java, DSA, Databases, Spring,
+Least popular: n/a
+Highest activity: Java, DSA, Databases, Spring,
+Lowest activity: n/a
+Easiest course: Java
+Hardest course: Spring
+?[1;31m
+Start test 36?[0m
+Learning Progress Tracker
+> add students
+Enter student credentials or 'back' to return:
+> Jermaine Naaman address1@mail.com
+The student has been added.
+> Roxi Hett address2@mail.com
+The student has been added.
+> Olga Rosanne address3@mail.com
+The student has been added.
+> Elysha Quinlan address4@mail.com
+The student has been added.
+> back
+Total 4 students have been added.
+> list
+Students:
+100
+101
+102
+103
+> add points
+Enter an id and points or 'back' to return:
+> 100 10 10 10 10
+Points updated.
+> 101 5 5 5 5
+Points updated.
+> 102 5 5 5 5
+Points updated.
+> 103 2 2 2 2
+Points updated.
+> back
+> statistics
+Type the name of a course to see details or 'back' to quit:
+most popular: Java, DSA, Databases, Spring,
+Least popular: n/a
+Highest activity: Java, DSA, Databases, Spring,
+Lowest activity: n/a
+Easiest course: Java
+Hardest course: Java
+> Java
+Java
+id     points completed
+100    10     1.7%
+101    5      0.8%
+102    5      0.8%
+103    2      0.3%
+> DSA
+DSA
+id     points completed
+100    10     2.5%
+101    5      1.3%
+102    5      1.3%
+103    2      0.5%
+> Databases
+Databases
+id     points completed
+100    10     2.1%
+101    5      1.0%
+102    5      1.0%
+103    2      0.4%
+> Spring
+Spring
+id     points completed
+100    10     1.8%
+101    5      0.9%
+102    5      0.9%
+103    2      0.4%
+?[1;31m
+Start test 37?[0m
+Learning Progress Tracker
+> add students
+Enter student credentials or 'back' to return:
+> John Doe johnd@email.net
+The student has been added.
+> Jane Spark jspark@yahoo.com
+The student has been added.
+> back
+Total 2 students have been added.
+> list
+Students:
+100
+101
+> add points
+Enter an id and points or 'back' to return:
+> 100 8 7 7 5
+Points updated.
+> 100 7 6 9 7
+Points updated.
+> 100 6 5 5 0
+Points updated.
+> 101 8 0 8 6
+Points updated.
+> 101 7 0 0 0
+Points updated.
+> 101 9 0 0 5
+Points updated.
+> back
+> statistics
+Type the name of a course to see details or 'back' to quit:
+most popular: Java, DSA, Databases, Spring,
+Least popular: n/a
+Highest activity: Java, DSA, Databases, Spring,
+Lowest activity: n/a
+Easiest course: Java
+Hardest course: DSA
+> Java
+Java
+id     points completed
+101    24     4.0%
+100    21     3.5%
+> DSA
+DSA
+id     points completed
+100    18     4.5%
+> Databases
+Databases
+id     points completed
+100    21     4.4%
+101    8      1.7%
+> Spring
+Spring
+id     points completed
+100    12     2.2%
+101    11     2.0%
+?[1;31m
+Start test 38?[0m
+Learning Progress Tracker
+> notify
+Total 0 students have been notified.
+?[1;31m
+Start test 39?[0m
+Learning Progress Tracker
+> add students
+Enter student credentials or 'back' to return:
+> John Doe johnd@email.net
+The student has been added.
+> Jane Spark jspark@yahoo.com
+The student has been added.
+> back
+Total 2 students have been added.
+> list
+Students:
+100
+101
+> add points
+Enter an id and points or 'back' to return:
+> 100 600 400 0 0
+Points updated.
+> back
+> notify
+To: johnd@email.net
+Re: Your Learning Progress
+Hello, John Doe! You have accomplished our Java course!
+To: johnd@email.net
+Re: Your Learning Progress
+Hello, John Doe! You have accomplished our DSA course!
+Total 1 students have been notified.
+> notify
+Total 0 students have been notified.
 ]]></system-out>
   <system-err><![CDATA[]]></system-err>
 </testsuite>
Index: ../Learning Progress Tracker/Learning Progress Tracker/task/build/reports/tests/test/classes/LearningProgressTrackerTest.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\r\n<meta http-equiv=\"x-ua-compatible\" content=\"IE=edge\"/>\r\n<title>Test results - Class LearningProgressTrackerTest</title>\r\n<link href=\"../css/base-style.css\" rel=\"stylesheet\" type=\"text/css\"/>\r\n<link href=\"../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/>\r\n<script src=\"../js/report.js\" type=\"text/javascript\"></script>\r\n</head>\r\n<body>\r\n<div id=\"content\">\r\n<h1>Class LearningProgressTrackerTest</h1>\r\n<div class=\"breadcrumbs\">\r\n<a href=\"../index.html\">all</a> &gt; \r\n<a href=\"../packages/default-package.html\">default-package</a> &gt; LearningProgressTrackerTest</div>\r\n<div id=\"summary\">\r\n<table>\r\n<tr>\r\n<td>\r\n<div class=\"summaryGroup\">\r\n<table>\r\n<tr>\r\n<td>\r\n<div class=\"infoBox\" id=\"tests\">\r\n<div class=\"counter\">1</div>\r\n<p>tests</p>\r\n</div>\r\n</td>\r\n<td>\r\n<div class=\"infoBox\" id=\"failures\">\r\n<div class=\"counter\">0</div>\r\n<p>failures</p>\r\n</div>\r\n</td>\r\n<td>\r\n<div class=\"infoBox\" id=\"ignored\">\r\n<div class=\"counter\">0</div>\r\n<p>ignored</p>\r\n</div>\r\n</td>\r\n<td>\r\n<div class=\"infoBox\" id=\"duration\">\r\n<div class=\"counter\">0.134s</div>\r\n<p>duration</p>\r\n</div>\r\n</td>\r\n</tr>\r\n</table>\r\n</div>\r\n</td>\r\n<td>\r\n<div class=\"infoBox success\" id=\"successRate\">\r\n<div class=\"percent\">100%</div>\r\n<p>successful</p>\r\n</div>\r\n</td>\r\n</tr>\r\n</table>\r\n</div>\r\n<div id=\"tabs\">\r\n<ul class=\"tabLinks\">\r\n<li>\r\n<a href=\"#tab0\">Tests</a>\r\n</li>\r\n<li>\r\n<a href=\"#tab1\">Standard output</a>\r\n</li>\r\n</ul>\r\n<div id=\"tab0\" class=\"tab\">\r\n<h2>Tests</h2>\r\n<table>\r\n<thead>\r\n<tr>\r\n<th>Test</th>\r\n<th>Duration</th>\r\n<th>Result</th>\r\n</tr>\r\n</thead>\r\n<tr>\r\n<td class=\"success\">start</td>\r\n<td class=\"success\">0.134s</td>\r\n<td class=\"success\">passed</td>\r\n</tr>\r\n</table>\r\n</div>\r\n<div id=\"tab1\" class=\"tab\">\r\n<h2>Standard output</h2>\r\n<span class=\"code\">\r\n<pre>?[1;31m\r\nStart test 1?[0m\r\nLearning Progress Tracker\r\n&gt; \r\nNo input.\r\n?[1;31m\r\nStart test 2?[0m\r\nLearning Progress Tracker\r\n&gt;   \r\nNo input.\r\n?[1;31m\r\nStart test 3?[0m\r\nLearning Progress Tracker\r\n&gt; \t\r\nNo input.\r\n?[1;31m\r\nStart test 4?[0m\r\nLearning Progress Tracker\r\n&gt;  \t\r\nNo input.\r\n?[1;31m\r\nStart test 5?[0m\r\nLearning Progress Tracker\r\n&gt; exit\r\nBye!\r\n?[1;31m\r\nStart test 6?[0m\r\nLearning Progress Tracker\r\n&gt; abc\r\nError: unknown command!\r\n?[1;31m\r\nStart test 7?[0m\r\nLearning Progress Tracker\r\n&gt; quit\r\nError: unknown command!\r\n?[1;31m\r\nStart test 8?[0m\r\nLearning Progress Tracker\r\n&gt;   brexit \r\nError: unknown command!\r\n?[1;31m\r\nStart test 9?[0m\r\nLearning Progress Tracker\r\n&gt; exi  t\r\nError: unknown command!\r\n?[1;31m\r\nStart test 10?[0m\r\nLearning Progress Tracker\r\n&gt; help\r\nError: unknown command!\r\n?[1;31m\r\nStart test 11?[0m\r\nLearning Progress Tracker\r\n&gt; break\r\nError: unknown command!\r\n?[1;31m\r\nStart test 12?[0m\r\nLearning Progress Tracker\r\n&gt; -help\r\nError: unknown command!\r\n?[1;31m\r\nStart test 13?[0m\r\nLearning Progress Tracker\r\n&gt; Ctrl+C\r\nError: unknown command!\r\n?[1;31m\r\nStart test 14?[0m\r\nLearning Progress Tracker\r\n&gt; exit please\r\nError: unknown command!\r\n?[1;31m\r\nStart test 15?[0m\r\nLearning Progress Tracker\r\n&gt; :q\r\nError: unknown command!\r\n</pre>\r\n</span>\r\n</div>\r\n</div>\r\n<div id=\"footer\">\r\n<p>\r\n<div>\r\n<label class=\"hidden\" id=\"label-for-line-wrapping-toggle\" for=\"line-wrapping-toggle\">Wrap lines\r\n<input id=\"line-wrapping-toggle\" type=\"checkbox\" autocomplete=\"off\"/>\r\n</label>\r\n</div>Generated by \r\n<a href=\"http://www.gradle.org\">Gradle 7.3.3</a> at 22 мар. 2022 г., 19:08:16</p>\r\n</div>\r\n</div>\r\n</body>\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Learning Progress Tracker/Learning Progress Tracker/task/build/reports/tests/test/classes/LearningProgressTrackerTest.html b/../Learning Progress Tracker/Learning Progress Tracker/task/build/reports/tests/test/classes/LearningProgressTrackerTest.html
--- a/../Learning Progress Tracker/Learning Progress Tracker/task/build/reports/tests/test/classes/LearningProgressTrackerTest.html	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../Learning Progress Tracker/Learning Progress Tracker/task/build/reports/tests/test/classes/LearningProgressTrackerTest.html	(date 1648299035351)
@@ -41,7 +41,7 @@
 </td>
 <td>
 <div class="infoBox" id="duration">
-<div class="counter">0.134s</div>
+<div class="counter">0.872s</div>
 <p>duration</p>
 </div>
 </td>
@@ -79,7 +79,7 @@
 </thead>
 <tr>
 <td class="success">start</td>
-<td class="success">0.134s</td>
+<td class="success">0.872s</td>
 <td class="success">passed</td>
 </tr>
 </table>
@@ -90,78 +90,755 @@
 <pre>?[1;31m
 Start test 1?[0m
 Learning Progress Tracker
-&gt; 
-No input.
+&gt; back
+Enter 'exit' to exit the program.
+&gt; exit
+Bye!
 ?[1;31m
 Start test 2?[0m
 Learning Progress Tracker
-&gt;   
+&gt; 
 No input.
 ?[1;31m
 Start test 3?[0m
 Learning Progress Tracker
-&gt; 	
+&gt;   
 No input.
 ?[1;31m
 Start test 4?[0m
 Learning Progress Tracker
-&gt;  	
+&gt; 	
 No input.
 ?[1;31m
 Start test 5?[0m
 Learning Progress Tracker
-&gt; exit
-Bye!
+&gt;  	
+No input.
 ?[1;31m
 Start test 6?[0m
 Learning Progress Tracker
 &gt; abc
-Error: unknown command!
+Unknown command!
 ?[1;31m
 Start test 7?[0m
 Learning Progress Tracker
 &gt; quit
-Error: unknown command!
+Unknown command!
 ?[1;31m
 Start test 8?[0m
 Learning Progress Tracker
 &gt;   brexit 
-Error: unknown command!
+Unknown command!
 ?[1;31m
 Start test 9?[0m
 Learning Progress Tracker
 &gt; exi  t
-Error: unknown command!
+Unknown command!
 ?[1;31m
 Start test 10?[0m
 Learning Progress Tracker
-&gt; help
-Error: unknown command!
+&gt; ?
+Unknown command!
 ?[1;31m
 Start test 11?[0m
 Learning Progress Tracker
 &gt; break
-Error: unknown command!
+Unknown command!
 ?[1;31m
 Start test 12?[0m
 Learning Progress Tracker
-&gt; -help
-Error: unknown command!
+&gt; -exit
+Unknown command!
 ?[1;31m
 Start test 13?[0m
 Learning Progress Tracker
 &gt; Ctrl+C
-Error: unknown command!
+Unknown command!
 ?[1;31m
 Start test 14?[0m
 Learning Progress Tracker
 &gt; exit please
-Error: unknown command!
+Unknown command!
 ?[1;31m
 Start test 15?[0m
 Learning Progress Tracker
 &gt; :q
-Error: unknown command!
+Unknown command!
+?[1;31m
+Start test 16?[0m
+Learning Progress Tracker
+&gt; java
+Unknown command!
+?[1;31m
+Start test 17?[0m
+Learning Progress Tracker
+&gt; spring
+Unknown command!
+?[1;31m
+Start test 18?[0m
+Learning Progress Tracker
+&gt; dsa
+Unknown command!
+?[1;31m
+Start test 19?[0m
+Learning Progress Tracker
+&gt; databases
+Unknown command!
+?[1;31m
+Start test 20?[0m
+Learning Progress Tracker
+&gt; add students
+Enter student credentials or 'back' to return:
+&gt; exit
+Incorrect credentials.
+&gt; back
+Total 0 students have been added.
+&gt; back
+Enter 'exit' to exit the program.
+&gt; exit
+Bye!
+?[1;31m
+Start test 21?[0m
+Learning Progress Tracker
+&gt; add students
+Enter student credentials or 'back' to return:
+&gt; John Smith jsmith@hotmail.com
+The student has been added.
+&gt; Anny Doolittle anny.md@mail.edu
+The student has been added.
+&gt; Jean-Claude O'Connor jcda123@google.net
+The student has been added.
+&gt; Mary Emelianenko 125367at@zzz90.z9
+The student has been added.
+&gt; Al Owen u15da125@a1s2f4f7.a1c2c5s4
+The student has been added.
+&gt; Robert Jemison Van de Graaff robertvdgraaff@mit.edu
+The student has been added.
+&gt; Ed Eden a1@a1.a1
+The student has been added.
+&gt; na'me s-u ii@ii.ii
+The student has been added.
+&gt; n'a me su aa-b'b ab@ab.ab
+The student has been added.
+&gt; nA me 1@1.1
+The student has been added.
+&gt; back
+Total 10 students have been added.
+?[1;31m
+Start test 22?[0m
+Learning Progress Tracker
+&gt; add students
+Enter student credentials or 'back' to return:
+&gt; 
+Incorrect credentials.
+&gt;  	
+Incorrect credentials.
+&gt; name surname
+Incorrect credentials.
+&gt; n surname email@email.xyz
+Incorrect first name.
+&gt; 'name surname email@email.xyz
+Incorrect first name.
+&gt; -name surname email@email.xyz
+Incorrect first name.
+&gt; name- surname email@email.xyz
+Incorrect first name.
+&gt; name' surname email@email.xyz
+Incorrect first name.
+&gt; nam-'e surname email@email.xyz
+Incorrect first name.
+&gt; na'-me surname email@email.xyz
+Incorrect first name.
+&gt; na--me surname email@email.xyz
+Incorrect first name.
+&gt; na''me surname email@email.xyz
+Incorrect first name.
+&gt; námé surname email@email.xyz
+Incorrect first name.
+&gt; name s email@email.xyz
+Incorrect last name.
+&gt; name -surname email@email.xyz
+Incorrect last name.
+&gt; name 'surname email@email.xyz
+Incorrect last name.
+&gt; name surnam''e email@email.xyz
+Incorrect last name.
+&gt; name surn--ame email@email.xyz
+Incorrect last name.
+&gt; name s'-urname email@email.xyz
+Incorrect last name.
+&gt; name su-'rname email@email.xyz
+Incorrect last name.
+&gt; name surname- email@email.xyz
+Incorrect last name.
+&gt; name surname' email@email.xyz
+Incorrect last name.
+&gt; name surnámé email@email.xyz
+Incorrect last name.
+&gt; name surname emailemail.xyz
+Incorrect email.
+&gt; name surname email@emailxyz
+Incorrect email.
+&gt; name surname email@e@mail.xyz
+Incorrect email.
+&gt; back
+Total 0 students have been added.
+?[1;31m
+Start test 23?[0m
+Learning Progress Tracker
+&gt; add students
+Enter student credentials or 'back' to return:
+&gt; back
+Total 0 students have been added.
+&gt; list
+No students found.
+?[1;31m
+Start test 24?[0m
+Learning Progress Tracker
+&gt; add students
+Enter student credentials or 'back' to return:
+&gt; Charlena Girardo address1@mail.com
+The student has been added.
+&gt; Charlena Girardo address1@mail.com
+This email is already taken.
+&gt; Shoshana Utica address2@mail.com
+The student has been added.
+&gt; Shoshana Utica address2@mail.com
+This email is already taken.
+&gt; Amye Uriisa address3@mail.com
+The student has been added.
+&gt; Amye Uriisa address3@mail.com
+This email is already taken.
+&gt; Van Fawnia address4@mail.com
+The student has been added.
+&gt; Van Fawnia address4@mail.com
+This email is already taken.
+&gt; Ann Agnella address5@mail.com
+The student has been added.
+&gt; Ann Agnella address5@mail.com
+This email is already taken.
+&gt; Carmella Campman address6@mail.com
+The student has been added.
+&gt; Carmella Campman address6@mail.com
+This email is already taken.
+&gt; Alexina Belcher address7@mail.com
+The student has been added.
+&gt; Alexina Belcher address7@mail.com
+This email is already taken.
+&gt; Olga Rosanne address8@mail.com
+The student has been added.
+&gt; Olga Rosanne address8@mail.com
+This email is already taken.
+&gt; Beatrisa Jegar address9@mail.com
+The student has been added.
+&gt; Beatrisa Jegar address9@mail.com
+This email is already taken.
+&gt; Anjanette Uis address10@mail.com
+The student has been added.
+&gt; Anjanette Uis address10@mail.com
+This email is already taken.
+&gt; Gwenette Anagnos address11@mail.com
+The student has been added.
+&gt; Gwenette Anagnos address11@mail.com
+This email is already taken.
+&gt; Leola Whelan address12@mail.com
+The student has been added.
+&gt; Leola Whelan address12@mail.com
+This email is already taken.
+&gt; back
+Total 12 students have been added.
+?[1;31m
+Start test 25?[0m
+Learning Progress Tracker
+&gt; add students
+Enter student credentials or 'back' to return:
+&gt; Alexina Belcher address1@mail.com
+The student has been added.
+&gt; Dolley Panther address2@mail.com
+The student has been added.
+&gt; Marisa Firman address3@mail.com
+The student has been added.
+&gt; Trixie Winer address4@mail.com
+The student has been added.
+&gt; Gwenette Anagnos address5@mail.com
+The student has been added.
+&gt; Natka Herculie address6@mail.com
+The student has been added.
+&gt; Elysha Quinlan address7@mail.com
+The student has been added.
+&gt; Emelia Annnora address8@mail.com
+The student has been added.
+&gt; Ricki Trovillion address9@mail.com
+The student has been added.
+&gt; Toby Bleier address10@mail.com
+The student has been added.
+&gt; Francesca Francis address11@mail.com
+The student has been added.
+&gt; Carmella Campman address12@mail.com
+The student has been added.
+&gt; back
+Total 12 students have been added.
+&gt; list
+Students:
+110
+100
+111
+101
+102
+103
+104
+105
+106
+107
+108
+109
+?[1;31m
+Start test 26?[0m
+Learning Progress Tracker
+&gt; add points
+Enter an id and points or 'back' to return:
+&gt; back
+&gt; back
+Enter 'exit' to exit the program.
+&gt; exit
+Bye!
+?[1;31m
+Start test 27?[0m
+Learning Progress Tracker
+&gt; add students
+Enter student credentials or 'back' to return:
+&gt; Tasha Chem address1@mail.com
+The student has been added.
+&gt; Emelia Annnora address2@mail.com
+The student has been added.
+&gt; Alexina Belcher address3@mail.com
+The student has been added.
+&gt; Toby Bleier address4@mail.com
+The student has been added.
+&gt; Marisa Firman address5@mail.com
+The student has been added.
+&gt; Ricki Trovillion address6@mail.com
+The student has been added.
+&gt; back
+Total 6 students have been added.
+&gt; list
+Students:
+100
+101
+102
+103
+104
+105
+&gt; add points
+Enter an id and points or 'back' to return:
+&gt; 100 
+Incorrect points format.
+&gt; 100 -1 1 1 1
+Incorrect points format.
+&gt; 100 1 1 2 A
+Incorrect points format.
+&gt; 100 1 1 1
+Incorrect points format.
+&gt; 100 1 1 1 1 1
+Incorrect points format.
+&gt; imsurethereisnosuchstudentid 1 1 1 1
+No student is found for id=imsurethereisnosuchstudentid
+?[1;31m
+Start test 28?[0m
+Learning Progress Tracker
+&gt; add students
+Enter student credentials or 'back' to return:
+&gt; Nonna Miko address1@mail.com
+The student has been added.
+&gt; Dolley Panther address2@mail.com
+The student has been added.
+&gt; Ann Agnella address3@mail.com
+The student has been added.
+&gt; Hedwig Wally address4@mail.com
+The student has been added.
+&gt; Lebbie Alabaster address5@mail.com
+The student has been added.
+&gt; Francesca Francis address6@mail.com
+The student has been added.
+&gt; back
+Total 6 students have been added.
+&gt; list
+Students:
+100
+101
+102
+103
+104
+105
+&gt; add points
+Enter an id and points or 'back' to return:
+&gt; 100 4 3 2 3
+Points updated.
+&gt; 101 2 2 4 6
+Points updated.
+&gt; 102 10 6 7 1
+Points updated.
+&gt; 103 8 8 4 4
+Points updated.
+&gt; 104 8 1 9 2
+Points updated.
+&gt; 105 6 7 10 3
+Points updated.
+?[1;31m
+Start test 29?[0m
+Learning Progress Tracker
+&gt; find
+Enter an id or 'back' to return.
+&gt; back
+&gt; back
+Enter 'exit' to exit the program.
+&gt; exit
+Bye!
+?[1;31m
+Start test 30?[0m
+Learning Progress Tracker
+&gt; add students
+Enter student credentials or 'back' to return:
+&gt; Charlena Girardo address1@mail.com
+The student has been added.
+&gt; Olga Rosanne address2@mail.com
+The student has been added.
+&gt; Nonna Miko address3@mail.com
+The student has been added.
+&gt; Marisa Firman address4@mail.com
+The student has been added.
+&gt; Brandise Hardan address5@mail.com
+The student has been added.
+&gt; back
+Total 5 students have been added.
+&gt; list
+Students:
+100
+101
+102
+103
+104
+&gt; add points
+Enter an id and points or 'back' to return:
+&gt; 100 0 0 0 0
+Points updated.
+&gt; 100 0 0 0 0
+Points updated.
+&gt; 101 1 1 1 1
+Points updated.
+&gt; 101 1 1 1 1
+Points updated.
+&gt; 102 2 2 2 2
+Points updated.
+&gt; 102 2 2 2 2
+Points updated.
+&gt; 103 3 3 3 3
+Points updated.
+&gt; 103 3 3 3 3
+Points updated.
+&gt; 104 4 4 4 4
+Points updated.
+&gt; 104 4 4 4 4
+Points updated.
+&gt; back
+&gt; find
+Enter an id or 'back' to return.
+&gt; 100
+100 points: Java=0; DSA=0; Databases=0; Spring=0
+&gt; 101
+101 points: Java=2; DSA=2; Databases=2; Spring=2
+&gt; 102
+102 points: Java=4; DSA=4; Databases=4; Spring=4
+&gt; 103
+103 points: Java=6; DSA=6; Databases=6; Spring=6
+&gt; 104
+104 points: Java=8; DSA=8; Databases=8; Spring=8
+?[1;31m
+Start test 31?[0m
+Learning Progress Tracker
+&gt; statistics
+Type the name of a course to see details or 'back' to quit:
+most popular: n/a
+Least popular: n/a
+Highest activity: n/a
+Lowest activity: n/a
+Easiest course: n/a
+Hardest course: n/a
+&gt; back
+&gt; back
+Enter 'exit' to exit the program.
+&gt; exit
+Bye!
+?[1;31m
+Start test 32?[0m
+Learning Progress Tracker
+&gt; statistics
+Type the name of a course to see details or 'back' to quit:
+most popular: n/a
+Least popular: n/a
+Highest activity: n/a
+Lowest activity: n/a
+Easiest course: n/a
+Hardest course: n/a
+?[1;31m
+Start test 33?[0m
+Learning Progress Tracker
+&gt; statistics
+Type the name of a course to see details or 'back' to quit:
+most popular: n/a
+Least popular: n/a
+Highest activity: n/a
+Lowest activity: n/a
+Easiest course: n/a
+Hardest course: n/a
+&gt; Java
+Java
+id     points completed
+&gt; DSA
+DSA
+id     points completed
+&gt; Databases
+Databases
+id     points completed
+&gt; Spring
+Spring
+id     points completed
+&gt; abc
+Unknown course.
+&gt; quit
+Unknown course.
+&gt;   brexit 
+Unknown course.
+&gt; exi  t
+Unknown course.
+&gt; ?
+Unknown course.
+&gt; break
+Unknown course.
+&gt; -exit
+Unknown course.
+&gt; Ctrl+C
+Unknown course.
+&gt; exit please
+Unknown course.
+&gt; :q
+Unknown course.
+?[1;31m
+Start test 34?[0m
+Learning Progress Tracker
+&gt; statistics
+Type the name of a course to see details or 'back' to quit:
+most popular: n/a
+Least popular: n/a
+Highest activity: n/a
+Lowest activity: n/a
+Easiest course: n/a
+Hardest course: n/a
+&gt; back
+&gt; back
+Enter 'exit' to exit the program.
+&gt; exit
+Bye!
+?[1;31m
+Start test 35?[0m
+Learning Progress Tracker
+&gt; add students
+Enter student credentials or 'back' to return:
+&gt; Gwenette Kironde address1@mail.com
+The student has been added.
+&gt; Annecorinne Ause address2@mail.com
+The student has been added.
+&gt; Elwira Florrie address3@mail.com
+The student has been added.
+&gt; Gwenette Anagnos address4@mail.com
+The student has been added.
+&gt; back
+Total 4 students have been added.
+&gt; list
+Students:
+100
+101
+102
+103
+&gt; add points
+Enter an id and points or 'back' to return:
+&gt; 100 5 4 3 1
+Points updated.
+&gt; 101 5 4 3 1
+Points updated.
+&gt; 102 5 4 3 1
+Points updated.
+&gt; 103 5 4 3 1
+Points updated.
+&gt; back
+&gt; statistics
+Type the name of a course to see details or 'back' to quit:
+most popular: Java, DSA, Databases, Spring,
+Least popular: n/a
+Highest activity: Java, DSA, Databases, Spring,
+Lowest activity: n/a
+Easiest course: Java
+Hardest course: Spring
+?[1;31m
+Start test 36?[0m
+Learning Progress Tracker
+&gt; add students
+Enter student credentials or 'back' to return:
+&gt; Jermaine Naaman address1@mail.com
+The student has been added.
+&gt; Roxi Hett address2@mail.com
+The student has been added.
+&gt; Olga Rosanne address3@mail.com
+The student has been added.
+&gt; Elysha Quinlan address4@mail.com
+The student has been added.
+&gt; back
+Total 4 students have been added.
+&gt; list
+Students:
+100
+101
+102
+103
+&gt; add points
+Enter an id and points or 'back' to return:
+&gt; 100 10 10 10 10
+Points updated.
+&gt; 101 5 5 5 5
+Points updated.
+&gt; 102 5 5 5 5
+Points updated.
+&gt; 103 2 2 2 2
+Points updated.
+&gt; back
+&gt; statistics
+Type the name of a course to see details or 'back' to quit:
+most popular: Java, DSA, Databases, Spring,
+Least popular: n/a
+Highest activity: Java, DSA, Databases, Spring,
+Lowest activity: n/a
+Easiest course: Java
+Hardest course: Java
+&gt; Java
+Java
+id     points completed
+100    10     1.7%
+101    5      0.8%
+102    5      0.8%
+103    2      0.3%
+&gt; DSA
+DSA
+id     points completed
+100    10     2.5%
+101    5      1.3%
+102    5      1.3%
+103    2      0.5%
+&gt; Databases
+Databases
+id     points completed
+100    10     2.1%
+101    5      1.0%
+102    5      1.0%
+103    2      0.4%
+&gt; Spring
+Spring
+id     points completed
+100    10     1.8%
+101    5      0.9%
+102    5      0.9%
+103    2      0.4%
+?[1;31m
+Start test 37?[0m
+Learning Progress Tracker
+&gt; add students
+Enter student credentials or 'back' to return:
+&gt; John Doe johnd@email.net
+The student has been added.
+&gt; Jane Spark jspark@yahoo.com
+The student has been added.
+&gt; back
+Total 2 students have been added.
+&gt; list
+Students:
+100
+101
+&gt; add points
+Enter an id and points or 'back' to return:
+&gt; 100 8 7 7 5
+Points updated.
+&gt; 100 7 6 9 7
+Points updated.
+&gt; 100 6 5 5 0
+Points updated.
+&gt; 101 8 0 8 6
+Points updated.
+&gt; 101 7 0 0 0
+Points updated.
+&gt; 101 9 0 0 5
+Points updated.
+&gt; back
+&gt; statistics
+Type the name of a course to see details or 'back' to quit:
+most popular: Java, DSA, Databases, Spring,
+Least popular: n/a
+Highest activity: Java, DSA, Databases, Spring,
+Lowest activity: n/a
+Easiest course: Java
+Hardest course: DSA
+&gt; Java
+Java
+id     points completed
+101    24     4.0%
+100    21     3.5%
+&gt; DSA
+DSA
+id     points completed
+100    18     4.5%
+&gt; Databases
+Databases
+id     points completed
+100    21     4.4%
+101    8      1.7%
+&gt; Spring
+Spring
+id     points completed
+100    12     2.2%
+101    11     2.0%
+?[1;31m
+Start test 38?[0m
+Learning Progress Tracker
+&gt; notify
+Total 0 students have been notified.
+?[1;31m
+Start test 39?[0m
+Learning Progress Tracker
+&gt; add students
+Enter student credentials or 'back' to return:
+&gt; John Doe johnd@email.net
+The student has been added.
+&gt; Jane Spark jspark@yahoo.com
+The student has been added.
+&gt; back
+Total 2 students have been added.
+&gt; list
+Students:
+100
+101
+&gt; add points
+Enter an id and points or 'back' to return:
+&gt; 100 600 400 0 0
+Points updated.
+&gt; back
+&gt; notify
+To: johnd@email.net
+Re: Your Learning Progress
+Hello, John Doe! You have accomplished our Java course!
+To: johnd@email.net
+Re: Your Learning Progress
+Hello, John Doe! You have accomplished our DSA course!
+Total 1 students have been notified.
+&gt; notify
+Total 0 students have been notified.
 </pre>
 </span>
 </div>
@@ -173,7 +850,7 @@
 <input id="line-wrapping-toggle" type="checkbox" autocomplete="off"/>
 </label>
 </div>Generated by 
-<a href="http://www.gradle.org">Gradle 7.3.3</a> at 22 мар. 2022 г., 19:08:16</p>
+<a href="http://www.gradle.org">Gradle 7.3.3</a> at 26 мар. 2022 г., 15:50:35</p>
 </div>
 </div>
 </body>
Index: ../Learning Progress Tracker/Learning Progress Tracker/task/build/reports/tests/test/packages/default-package.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\r\n<meta http-equiv=\"x-ua-compatible\" content=\"IE=edge\"/>\r\n<title>Test results - Default package</title>\r\n<link href=\"../css/base-style.css\" rel=\"stylesheet\" type=\"text/css\"/>\r\n<link href=\"../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/>\r\n<script src=\"../js/report.js\" type=\"text/javascript\"></script>\r\n</head>\r\n<body>\r\n<div id=\"content\">\r\n<h1>Default package</h1>\r\n<div class=\"breadcrumbs\">\r\n<a href=\"../index.html\">all</a> &gt; default-package</div>\r\n<div id=\"summary\">\r\n<table>\r\n<tr>\r\n<td>\r\n<div class=\"summaryGroup\">\r\n<table>\r\n<tr>\r\n<td>\r\n<div class=\"infoBox\" id=\"tests\">\r\n<div class=\"counter\">1</div>\r\n<p>tests</p>\r\n</div>\r\n</td>\r\n<td>\r\n<div class=\"infoBox\" id=\"failures\">\r\n<div class=\"counter\">0</div>\r\n<p>failures</p>\r\n</div>\r\n</td>\r\n<td>\r\n<div class=\"infoBox\" id=\"ignored\">\r\n<div class=\"counter\">0</div>\r\n<p>ignored</p>\r\n</div>\r\n</td>\r\n<td>\r\n<div class=\"infoBox\" id=\"duration\">\r\n<div class=\"counter\">0.134s</div>\r\n<p>duration</p>\r\n</div>\r\n</td>\r\n</tr>\r\n</table>\r\n</div>\r\n</td>\r\n<td>\r\n<div class=\"infoBox success\" id=\"successRate\">\r\n<div class=\"percent\">100%</div>\r\n<p>successful</p>\r\n</div>\r\n</td>\r\n</tr>\r\n</table>\r\n</div>\r\n<div id=\"tabs\">\r\n<ul class=\"tabLinks\">\r\n<li>\r\n<a href=\"#tab0\">Classes</a>\r\n</li>\r\n</ul>\r\n<div id=\"tab0\" class=\"tab\">\r\n<h2>Classes</h2>\r\n<table>\r\n<thread>\r\n<tr>\r\n<th>Class</th>\r\n<th>Tests</th>\r\n<th>Failures</th>\r\n<th>Ignored</th>\r\n<th>Duration</th>\r\n<th>Success rate</th>\r\n</tr>\r\n</thread>\r\n<tr>\r\n<td class=\"success\">\r\n<a href=\"../classes/LearningProgressTrackerTest.html\">LearningProgressTrackerTest</a>\r\n</td>\r\n<td>1</td>\r\n<td>0</td>\r\n<td>0</td>\r\n<td>0.134s</td>\r\n<td class=\"success\">100%</td>\r\n</tr>\r\n</table>\r\n</div>\r\n</div>\r\n<div id=\"footer\">\r\n<p>\r\n<div>\r\n<label class=\"hidden\" id=\"label-for-line-wrapping-toggle\" for=\"line-wrapping-toggle\">Wrap lines\r\n<input id=\"line-wrapping-toggle\" type=\"checkbox\" autocomplete=\"off\"/>\r\n</label>\r\n</div>Generated by \r\n<a href=\"http://www.gradle.org\">Gradle 7.3.3</a> at 22 мар. 2022 г., 19:08:16</p>\r\n</div>\r\n</div>\r\n</body>\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Learning Progress Tracker/Learning Progress Tracker/task/build/reports/tests/test/packages/default-package.html b/../Learning Progress Tracker/Learning Progress Tracker/task/build/reports/tests/test/packages/default-package.html
--- a/../Learning Progress Tracker/Learning Progress Tracker/task/build/reports/tests/test/packages/default-package.html	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../Learning Progress Tracker/Learning Progress Tracker/task/build/reports/tests/test/packages/default-package.html	(date 1648299035351)
@@ -40,7 +40,7 @@
 </td>
 <td>
 <div class="infoBox" id="duration">
-<div class="counter">0.134s</div>
+<div class="counter">0.872s</div>
 <p>duration</p>
 </div>
 </td>
@@ -83,7 +83,7 @@
 <td>1</td>
 <td>0</td>
 <td>0</td>
-<td>0.134s</td>
+<td>0.872s</td>
 <td class="success">100%</td>
 </tr>
 </table>
@@ -96,7 +96,7 @@
 <input id="line-wrapping-toggle" type="checkbox" autocomplete="off"/>
 </label>
 </div>Generated by 
-<a href="http://www.gradle.org">Gradle 7.3.3</a> at 22 мар. 2022 г., 19:08:16</p>
+<a href="http://www.gradle.org">Gradle 7.3.3</a> at 26 мар. 2022 г., 15:50:35</p>
 </div>
 </div>
 </body>
Index: ../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/StatisticsCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tracker.commands;public class Statistics {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/StatisticsCommand.java b/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/StatisticsCommand.java
--- a/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/StatisticsCommand.java	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/StatisticsCommand.java	(date 1648282081562)
@@ -1,2 +1,107 @@
-package tracker.commands;public class Statistics {
+package tracker.commands;
+
+import tracker.Student;
+import tracker.StudentsDataBase;
+import tracker.courses.*;
+
+import java.util.*;
+
+public class StatisticsCommand implements Command {
+    StudentsDataBase studentsDataBase;
+    private String mostPopular = "n/a";
+    private String leastPopular = "n/a";
+    private String highestActivity = "n/a";
+    private String lowestActivity = "n/a";
+    private String easiestCourse = "n/a";
+    private String hardestCourse = "n/a";
+    private final Course javaCourse = new Course(600, "Java");
+    private final Course dsaCourse = new Course(400, "DSA");
+    private final Course databasesCourse = new Course(480, "Databases");
+    private final Course springCourse = new Course(550, "Spring");
+    private final List<Course> courses = List.of(javaCourse, dsaCourse, databasesCourse, springCourse);
+
+
+    public StatisticsCommand(StudentsDataBase studentsDataBase) {
+        this.studentsDataBase = studentsDataBase;
+    }
+
+    @Override
+    public void execute() {
+        System.out.println("Type the name of a course to see details or 'back' to quit:");
+        Scanner scanner = new Scanner(System.in);
+        sortingStudentsOnCourses(studentsDataBase);
+        printCommonStats();
+        while (scanner.hasNextLine()) {
+            String input = scanner.nextLine();
+            if (input.equals("back")) {
+                break;
+            } else if (input.equals("Java")) {
+                javaCourse.printStats();
+            } else if (input.equals("DSA")) {
+                dsaCourse.printStats();
+            } else if (input.equals("Databases")) {
+                databasesCourse.printStats();
+            } else if (input.equals("Spring")) {
+                springCourse.printStats();
+            } else {
+                System.out.println("Unknown course.");
+            }
+        }
+    }
+
+    void printCommonStats() {
+        if (!studentsDataBase.getDbScores().isEmpty()) {
+            for (Course course : courses) {
+                if (!course.getLearningStudents().isEmpty()) {
+                    mostPopular = mostPopular.replaceAll("n/a", "") + course.getNameCourse() + ", ";
+                } else leastPopular = leastPopular.replaceAll("n/a", "") + course.getNameCourse() + ", ";
+            }
+            for (Course course : courses) {
+                if (!course.getLearningStudents().isEmpty()) {
+                    highestActivity = highestActivity.replaceAll("n/a", "") + course.getNameCourse() + ", ";
+                } else lowestActivity = lowestActivity.replaceAll("n/a", "") + course.getNameCourse() + ", ";
+            }
+            easiestCourse = courses.stream()
+                    .max(Comparator.comparingInt(x -> x.calculateSumPoints(x.getLearningStudents()))).get().getNameCourse();
+            hardestCourse = courses.stream()
+                    .min(Comparator.comparingInt(x -> x.calculateSumPoints(x.getLearningStudents()))).get().getNameCourse();
+        }
+
+
+        System.out.println("most popular: " + mostPopular.trim());
+        System.out.println("Least popular: " + leastPopular.trim());
+        System.out.println("Highest activity: " + highestActivity.trim());
+        System.out.println("Lowest activity: " + lowestActivity.trim());
+        System.out.println("Easiest course: " + easiestCourse.trim());
+        System.out.println("Hardest course: " + hardestCourse.trim());
+    }
+
+    void sortingStudentsOnCourses(StudentsDataBase studentsDataBase) {
+        Map<String, Integer> java = new HashMap<>();
+        Map<String, Integer> dsa = new HashMap<>();
+        Map<String, Integer> databases = new HashMap<>();
+        Map<String, Integer> spring = new HashMap<>();
+        for (Map.Entry<String, Student> entry : studentsDataBase.getDbScores().entrySet()) {
+            if (entry.getValue().getGrad1() != 0) {
+                java.put(entry.getKey(), entry.getValue().getGrad1());
+            }
+            if (entry.getValue().getGrad2() != 0) {
+                dsa.put(entry.getKey(), entry.getValue().getGrad2());
+            }
+            if (entry.getValue().getGrad3() != 0) {
+                databases.put(entry.getKey(), entry.getValue().getGrad3());
+            }
+            if (entry.getValue().getGrad4() != 0) {
+                spring.put(entry.getKey(), entry.getValue().getGrad4());
+            }
+        }
+        if (!java.isEmpty())
+            javaCourse.setLearningStudents(java);
+        if (!dsa.isEmpty())
+            dsaCourse.setLearningStudents(dsa);
+        if (!databases.isEmpty())
+            databasesCourse.setLearningStudents(databases);
+        if (!spring.isEmpty())
+            springCourse.setLearningStudents(spring);
+    }
 }
Index: ../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/courses/Course.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tracker.courses;public class Course {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/courses/Course.java b/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/courses/Course.java
--- a/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/courses/Course.java	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/courses/Course.java	(date 1648296086234)
@@ -1,2 +1,60 @@
-package tracker.courses;public class Course {
+package tracker.courses;
+
+import java.math.RoundingMode;
+import java.text.DecimalFormat;
+import java.util.HashMap;
+import java.util.Map;
+
+public class Course {
+    private int coursePoint;
+    private Map<String, Integer> learningStudents = new HashMap<>();
+    private String nameCourse;
+
+    public Course(int coursePoint, String nameCourse) {
+        this.coursePoint = coursePoint;
+        this.nameCourse = nameCourse;
+    }
+
+    public String getNameCourse() {
+        return nameCourse;
+    }
+
+    public int getCoursePoint() {
+        return coursePoint;
+    }
+
+    public Map<String, Integer> getLearningStudents() {
+        return learningStudents;
+    }
+
+    public void setLearningStudents(Map<String, Integer> learningStudents) {
+        this.learningStudents = learningStudents;
+    }
+
+    public String calculatePercent(int coursePoint, int pointStudent) {
+        double result = (double) pointStudent / ((double)coursePoint / 100);
+        DecimalFormat df = new DecimalFormat("0.0");
+        df.setRoundingMode(RoundingMode.HALF_UP);
+        return df.format(result);
+    }
+
+    public void printStats() {
+        System.out.println(getNameCourse());
+        System.out.format("%-6s %-6s %-6s" + "\n", "id", "points", "completed");
+        if (!getLearningStudents().isEmpty())
+
+            getLearningStudents().entrySet()
+                    .stream()
+                    .sorted(Map.Entry.<String, Integer>comparingByValue().reversed().thenComparing(Map.Entry::getKey))
+                    .limit(4)
+                    .forEach(x -> System.out.format("%-6s %-6d %s%%" + "\n", x.getKey(), x.getValue(), calculatePercent(getCoursePoint(), x.getValue())));
+    }
+
+    public int calculateSumPoints(Map<String, Integer> learningStudents) {
+        int sum = 0;
+        for (Map.Entry<String, Integer> entry : learningStudents.entrySet()) {
+            sum += entry.getValue();
+        }
+        return sum;
+    }
 }
Index: ../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/Controller.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tracker.commands;public class Controller {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/Controller.java b/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/Controller.java
--- a/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/Controller.java	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/Controller.java	(date 1648132255874)
@@ -1,2 +1,13 @@
-package tracker.commands;public class Controller {
+package tracker.commands;
+
+public class Controller {
+    private Command command;
+
+    public void setCommand(Command command) {
+        this.command = command;
+    }
+
+    public void executeCommand() {
+        command.execute();
+    }
 }
Index: ../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/Command.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tracker.commands;public interface Command {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/Command.java b/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/Command.java
--- a/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/Command.java	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/Command.java	(date 1648132110655)
@@ -1,2 +1,5 @@
-package tracker.commands;public interface Command {
+package tracker.commands;
+
+public interface Command {
+    void execute();
 }
Index: ../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/AddPointsCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tracker.commands;\r\n\r\npublic class AddPointCommand implements Command{\r\n    @Override\r\n    public void execute() {\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/AddPointsCommand.java b/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/AddPointsCommand.java
--- a/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/AddPointsCommand.java	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/AddPointsCommand.java	(date 1648297010475)
@@ -1,8 +1,64 @@
 package tracker.commands;
 
-public class AddPointCommand implements Command{
+import tracker.Student;
+import tracker.StudentsDataBase;
+
+import java.util.Scanner;
+import java.util.regex.Matcher;
+import java.util.regex.Pattern;
+
+public class AddPointsCommand implements Command {
+    private final StudentsDataBase studentsDataBase;
+    private static String ID;
+    private static Integer[] scores = new Integer[5];
+
+    public AddPointsCommand(StudentsDataBase studentsDataBase) {
+        this.studentsDataBase = studentsDataBase;
+    }
+
     @Override
     public void execute() {
+        System.out.println("Enter an id and points or 'back' to return:");
+        Scanner scanner = new Scanner(System.in);
+        while (scanner.hasNextLine()) {
+            String input = scanner.nextLine();
+            if (input.equals("back")) {
+                break;
+            } else if (splitterConverter(input)) {
+                if (studentsDataBase.getDbScores().containsKey(ID)) {
+                    updaterPoints(studentsDataBase.getDbScores().get(ID));
+                    System.out.println("Points updated.");
+                } else {
+                    System.out.println("No student is found for id=" + ID);
+                }
+            }
+        }
+    }
+
+    boolean splitterConverter(String input) {
+        String[] rawInput = input.split(" ");
+        if (rawInput.length == 5 & isCorrectRequest(input.substring(input.indexOf(" ",2)))) {
+            ID = rawInput[0];
+            for (int i = 1; i < rawInput.length; i++) {
+                scores[i - 1] = Integer.valueOf(rawInput[i]);
+            }
+            return true;
+        } else {
+            System.out.println("Incorrect points format.");
+            return false;
+        }
+    }
 
+    boolean isCorrectRequest(String input) {
+        Pattern pattern = Pattern.compile("^[0-9 ]+");
+        Matcher matcher = pattern.matcher(input);
+        return matcher.matches();
+    }
+
+    void updaterPoints(Student student) {
+        student.setGrad1(student.getGrad1() + scores[0]);
+        student.setGrad2(student.getGrad2() + scores[1]);
+        student.setGrad3(student.getGrad3() + scores[2]);
+        student.setGrad4(student.getGrad4() + scores[3]);
     }
 }
Index: ../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/StudentsDataBase.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tracker;public class StudentsDataBase {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/StudentsDataBase.java b/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/StudentsDataBase.java
--- a/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/StudentsDataBase.java	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/StudentsDataBase.java	(date 1648227200335)
@@ -1,2 +1,28 @@
-package tracker;public class StudentsDataBase {
+package tracker;
+
+import java.util.HashMap;
+
+public class StudentsDataBase {
+    private static StudentsDataBase studentsDataBase;
+    private HashMap<String , String> db = new HashMap<>();
+    private HashMap<String , Student> dbScores = new HashMap<>();
+
+    private StudentsDataBase() {
+
+    }
+
+    public static StudentsDataBase getStudentsDataBase() {
+        if (studentsDataBase == null) {
+            studentsDataBase = new StudentsDataBase();
+        }
+        return studentsDataBase;
+    }
+
+    public HashMap<String , String> getDb() {
+        return db;
+    }
+
+    public HashMap<String , Student> getDbScores() {
+        return dbScores;
+    }
 }
Index: ../HyperMetro/HyperMetro/task/test/Tests.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import org.hyperskill.hstest.dynamic.DynamicTest;\r\nimport org.hyperskill.hstest.exception.outcomes.WrongAnswer;\r\nimport org.hyperskill.hstest.stage.StageTest;\r\nimport org.hyperskill.hstest.testcase.CheckResult;\r\nimport org.hyperskill.hstest.testing.TestedProgram;\r\n\r\npublic class Tests extends StageTest<String> {\r\n    // test from the previous stage with one line\r\n    @DynamicTest(order = 1)\r\n    CheckResult test1() {\r\n        TestedProgram main = new TestedProgram();\r\n        main.start(\"./test/baltimore.json\");\r\n\r\n        String output = main.execute(\"/output \\\"SubwayLink\\\"\").trim();\r\n        checkDepots(output);\r\n        checkOutputLength(output, 14);\r\n\r\n        assertStations(output, new String[]{\"Owings Mills\", \"Old Court\", \"Milford Mill\", \"Reiserstown Plaza\",\r\n            \"Rogers Avenue\", \"West Cold Spring\", \"Mondawmin\", \"Penn North\", \"Uptown\", \"State Center\",\r\n            \"Lexington Market\", \"Charles Center\", \"Shot Tower/Market Place\", \"Johns Hopkins Hospital\"});\r\n\r\n        return CheckResult.correct();\r\n    }\r\n\r\n    // test of example\r\n    @DynamicTest(order = 2)\r\n    CheckResult test2() {\r\n        TestedProgram main = new TestedProgram();\r\n        main.start(\"./test/lausanne.json\");\r\n\r\n        String output = main.execute(\"/output \\\"m1\\\"\").trim();\r\n        checkDepots(output);\r\n\r\n        checkOutputLength(output, 15);\r\n\r\n        assertStations(output, new String[]{\"Renes—Gare\", \"Epenex\", \"Crochy\", \"Cerisaie\",\r\n            \"Bassenges\", \"EPFL\", \"UNL—Sorge\", \"Mouline\", \"UNL—Chemberonne\", \"Bourdonnette\", \"Melley\",\r\n            \"Provence\", \"Montelly\", \"Vigie\", \"Lausanne—Flon\"});\r\n\r\n        output = main.execute(\"/output \\\"m2\\\"\");\r\n        checkDepots(output);\r\n        checkOutputLength(output, 14);\r\n\r\n        assertStations(output, new String[]{\"Croisettes\", \"Vennes\", \"Fourmi\", \"Sallaz\", \"CHUV\", \"Ours\",\r\n            \"Riponne M.Bejart\", \"Bessieres\", \"Lausanne—Flon\", \"Lausanne Gare CFF\", \"Grancy\", \"Delices\", \"Jourdils\",\r\n            \"Ouchy—Olympique\"});\r\n\r\n        return CheckResult.correct();\r\n    }\r\n\r\n    // example test pt.2 (with addition)\r\n    @DynamicTest(order = 3)\r\n    CheckResult test2_1() {\r\n        TestedProgram main = new TestedProgram();\r\n        main.start(\"./test/lausanne.json\");\r\n\r\n        // added a station to the end of the line\r\n        main.execute(\"/append \\\"m1\\\" \\\"Test station 1\\\"\");\r\n        String output = main.execute(\"/output \\\"m1\\\"\");\r\n\r\n        checkDepots(output);\r\n        checkOutputLength(output, 16);\r\n        assertStations(output, new String[]{\"Renes—Gare\", \"Epenex\", \"Crochy\", \"Cerisaie\",\r\n            \"Bassenges\", \"EPFL\", \"UNL—Sorge\", \"Mouline\", \"UNL—Chemberonne\", \"Bourdonnette\", \"Melley\",\r\n            \"Provence\", \"Montelly\", \"Vigie\", \"Lausanne—Flon\", \"Test station 1\"});\r\n\r\n        // added another one\r\n        main.execute(\"/append \\\"m1\\\" \\\"Test station 2\\\"\");\r\n        output = main.execute(\"/output \\\"m1\\\"\");\r\n\r\n        checkDepots(output);\r\n        checkOutputLength(output, 17);\r\n        assertStations(output, new String[]{\"Renes—Gare\", \"Epenex\", \"Crochy\", \"Cerisaie\",\r\n            \"Bassenges\", \"EPFL\", \"UNL—Sorge\", \"Mouline\", \"UNL—Chemberonne\", \"Bourdonnette\", \"Melley\",\r\n            \"Provence\", \"Montelly\", \"Vigie\", \"Lausanne—Flon\", \"Test station 1\", \"Test station 2\"});\r\n\r\n        // added one station to the beginning of the line\r\n        main.execute(\"/add-head \\\"m1\\\" \\\"Head\\\"\");\r\n        output = main.execute(\"/output \\\"m1\\\"\");\r\n\r\n        checkDepots(output);\r\n        checkOutputLength(output, 18);\r\n        assertStations(output, new String[]{\"Head\", \"Renes—Gare\", \"Epenex\", \"Crochy\", \"Cerisaie\",\r\n            \"Bassenges\", \"EPFL\", \"UNL—Sorge\", \"Mouline\", \"UNL—Chemberonne\", \"Bourdonnette\", \"Melley\",\r\n            \"Provence\", \"Montelly\", \"Vigie\", \"Lausanne—Flon\", \"Test station 1\", \"Test station 2\"});\r\n\r\n        return CheckResult.correct();\r\n    }\r\n\r\n    // not existing file check\r\n    @DynamicTest(order = 4)\r\n    CheckResult test4() {\r\n        TestedProgram main = new TestedProgram();\r\n        String output = main.start(\"tHiS_fIlE_DoEs_nOt_ExIsT.txt\").toLowerCase();\r\n\r\n        if (output.trim().length() == 0) {\r\n            return CheckResult.wrong(\"The program did not print anything when the file that doesn't exist was passed.\");\r\n        }\r\n        if (output.startsWith(\"depot\") || output.endsWith(\"depot\") || !output.contains(\"error\")) {\r\n            return CheckResult.wrong(\"It looks like the program did not print an error message when the file that doesn't exist was passed.\\n\" +\r\n                \"Your output should contain 'error'.\");\r\n        }\r\n\r\n        return CheckResult.correct();\r\n    }\r\n\r\n    // additional test case\r\n    @DynamicTest(order = 5)\r\n    CheckResult test5() {\r\n        TestedProgram main = new TestedProgram();\r\n        main.start(\"./test/samara.json\");\r\n\r\n        main.execute(\"/append \\\"line 1\\\" \\\"Krylya Sovetov\\\"\");\r\n        String output = main.execute(\"/output \\\"line 1\\\"\");\r\n\r\n        checkDepots(output);\r\n\r\n        checkOutputLength(output, 11);\r\n\r\n        assertStations(output, new String[]{\"Alabinskaya\", \"Rossiyskaya\", \"Moskovskaya\",\r\n            \"Gagarinskaya\", \"Sportivnaya\", \"Sovetskaya\", \"Pobeda\", \"Bezymyanka\", \"Kirovskaya\", \"Yungorodok\",\r\n            \"Krylya Sovetov\"});\r\n\r\n        main.execute(\"/add-head \\\"line 1\\\" Samarskaya\");\r\n        output = main.execute(\"/output \\\"line 1\\\"\");\r\n\r\n        checkDepots(output);\r\n        checkOutputLength(output, 12);\r\n\r\n        assertStations(output, new String[]{\"Samarskaya\", \"Alabinskaya\", \"Rossiyskaya\", \"Moskovskaya\",\r\n            \"Gagarinskaya\", \"Sportivnaya\", \"Sovetskaya\", \"Pobeda\", \"Bezymyanka\", \"Kirovskaya\", \"Yungorodok\",\r\n            \"Krylya Sovetov\"});\r\n\r\n        return CheckResult.correct();\r\n    }\r\n\r\n    // checks for \"depot\" at the start and at the end\r\n    void checkDepots(String output) {\r\n        output = output.trim().toLowerCase();\r\n        if (!output.startsWith(\"depot\")) {\r\n            throw new WrongAnswer(\"Your output should start with 'depot'.\");\r\n        } else if (!output.endsWith(\"depot\")) {\r\n            throw new WrongAnswer(\"Your output should end with 'depot'.\");\r\n        }\r\n    }\r\n\r\n    // checks number of stations in output\r\n    void checkOutputLength(String output, int correctLength) {\r\n        int length = output.trim().split(\"\\n\").length;\r\n        if (length != correctLength) {\r\n            throw new WrongAnswer(\"You output contains wrong number of lines.\\n\" +\r\n                \"Expected: \" + correctLength + \" lines\\n\" +\r\n                \"Your output: \" + length + \" lines\");\r\n        }\r\n    }\r\n\r\n    // checks stations\r\n    void assertStations(String output, String[] stations) {\r\n\r\n        String[] sOutput = output.trim().split(\"\\n\");\r\n\r\n        for (int i = 0; i < stations.length; i++) {\r\n\r\n            String currentLine = sOutput[i].trim();\r\n            if (currentLine.split(\"-\").length != 3) {\r\n                throw new WrongAnswer(\"There is should be 3 stations in one line.\\n\" +\r\n                    \"Treat 'depot' as a station name\");\r\n            }\r\n\r\n            // Checking the first line\r\n            if (i == 0) {\r\n                for (int j = 0; j < 2; j++) {\r\n                    if (!currentLine.contains(stations[i + j])) {\r\n                        throw new WrongAnswer(\"Can't find station '\" + stations[i + j] + \"' in the line number \" + (i + 1));\r\n                    }\r\n                }\r\n                // Checking the last line\r\n            } else if (i == stations.length - 1) {\r\n                for (int j = 0; j < 2; j++) {\r\n                    if (!currentLine.contains(stations[i + j - 1])) {\r\n                        throw new WrongAnswer(\"Can't find station '\" + stations[i + j - 1] + \"' in the line number \" + (i + 1));\r\n                    }\r\n                }\r\n                // Checking the rest lines\r\n            } else {\r\n                for (int j = 0; j < 3; j++) {\r\n                    if (!currentLine.contains(stations[i + j - 1])) {\r\n                        throw new WrongAnswer(\"Can't find station '\" + stations[i + j - 1] + \"' in the line number \" + (i + 1));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../HyperMetro/HyperMetro/task/test/Tests.java b/../HyperMetro/HyperMetro/task/test/Tests.java
--- a/../HyperMetro/HyperMetro/task/test/Tests.java	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../HyperMetro/HyperMetro/task/test/Tests.java	(date 1648366589793)
@@ -5,52 +5,38 @@
 import org.hyperskill.hstest.testing.TestedProgram;
 
 public class Tests extends StageTest<String> {
-    // test from the previous stage with one line
+    // multiple line output
     @DynamicTest(order = 1)
-    CheckResult test1() {
-        TestedProgram main = new TestedProgram();
-        main.start("./test/baltimore.json");
-
-        String output = main.execute("/output \"SubwayLink\"").trim();
-        checkDepots(output);
-        checkOutputLength(output, 14);
+    CheckResult multipleLineOutputTest() {
 
-        assertStations(output, new String[]{"Owings Mills", "Old Court", "Milford Mill", "Reiserstown Plaza",
-            "Rogers Avenue", "West Cold Spring", "Mondawmin", "Penn North", "Uptown", "State Center",
-            "Lexington Market", "Charles Center", "Shot Tower/Market Place", "Johns Hopkins Hospital"});
-
-        return CheckResult.correct();
-    }
-
-    // test of example
-    @DynamicTest(order = 2)
-    CheckResult test2() {
         TestedProgram main = new TestedProgram();
         main.start("./test/lausanne.json");
-
         String output = main.execute("/output \"m1\"").trim();
-        checkDepots(output);
 
-        checkOutputLength(output, 15);
-
-        assertStations(output, new String[]{"Renes—Gare", "Epenex", "Crochy", "Cerisaie",
+        String[] stations = new String[]{"Renes—Gare", "Epenex", "Crochy", "Cerisaie",
             "Bassenges", "EPFL", "UNL—Sorge", "Mouline", "UNL—Chemberonne", "Bourdonnette", "Melley",
-            "Provence", "Montelly", "Vigie", "Lausanne—Flon"});
+            "Provence", "Montelly", "Vigie", "Lausanne—Flon"};
 
-        output = main.execute("/output \"m2\"");
         checkDepots(output);
-        checkOutputLength(output, 14);
+        checkOutputLength(output, stations.length + 2);
+        assertStations(output, stations);
 
-        assertStations(output, new String[]{"Croisettes", "Vennes", "Fourmi", "Sallaz", "CHUV", "Ours",
+        stations = new String[]{"Croisettes", "Vennes", "Fourmi", "Sallaz", "CHUV", "Ours",
             "Riponne M.Bejart", "Bessieres", "Lausanne—Flon", "Lausanne Gare CFF", "Grancy", "Delices", "Jourdils",
-            "Ouchy—Olympique"});
+            "Ouchy—Olympique"};
+
+        output = main.execute("/output \"m2\"");
+        checkDepots(output);
+        checkOutputLength(output, stations.length + 2);
+        assertStations(output, stations);
 
         return CheckResult.correct();
     }
 
-    // example test pt.2 (with addition)
-    @DynamicTest(order = 3)
-    CheckResult test2_1() {
+    // addition test
+    @DynamicTest(order = 2)
+    CheckResult additionTest() {
+
         TestedProgram main = new TestedProgram();
         main.start("./test/lausanne.json");
 
@@ -58,78 +44,219 @@
         main.execute("/append \"m1\" \"Test station 1\"");
         String output = main.execute("/output \"m1\"");
 
-        checkDepots(output);
-        checkOutputLength(output, 16);
-        assertStations(output, new String[]{"Renes—Gare", "Epenex", "Crochy", "Cerisaie",
+        String[] stations = new String[]{"Renes—Gare", "Epenex", "Crochy", "Cerisaie",
             "Bassenges", "EPFL", "UNL—Sorge", "Mouline", "UNL—Chemberonne", "Bourdonnette", "Melley",
-            "Provence", "Montelly", "Vigie", "Lausanne—Flon", "Test station 1"});
+            "Provence", "Montelly", "Vigie", "Lausanne—Flon", "Test station 1"};
+
+        checkDepots(output);
+        checkOutputLength(output, stations.length + 2);
+        assertStations(output, stations);
 
         // added another one
         main.execute("/append \"m1\" \"Test station 2\"");
         output = main.execute("/output \"m1\"");
 
-        checkDepots(output);
-        checkOutputLength(output, 17);
-        assertStations(output, new String[]{"Renes—Gare", "Epenex", "Crochy", "Cerisaie",
+        stations = new String[]{"Renes—Gare", "Epenex", "Crochy", "Cerisaie",
             "Bassenges", "EPFL", "UNL—Sorge", "Mouline", "UNL—Chemberonne", "Bourdonnette", "Melley",
-            "Provence", "Montelly", "Vigie", "Lausanne—Flon", "Test station 1", "Test station 2"});
+            "Provence", "Montelly", "Vigie", "Lausanne—Flon", "Test station 1", "Test station 2"};
+
+        checkDepots(output);
+        checkOutputLength(output, stations.length + 2);
+        assertStations(output, stations);
 
         // added one station to the beginning of the line
         main.execute("/add-head \"m1\" \"Head\"");
         output = main.execute("/output \"m1\"");
 
-        checkDepots(output);
-        checkOutputLength(output, 18);
-        assertStations(output, new String[]{"Head", "Renes—Gare", "Epenex", "Crochy", "Cerisaie",
+        stations = new String[]{"Head", "Renes—Gare", "Epenex", "Crochy", "Cerisaie",
             "Bassenges", "EPFL", "UNL—Sorge", "Mouline", "UNL—Chemberonne", "Bourdonnette", "Melley",
-            "Provence", "Montelly", "Vigie", "Lausanne—Flon", "Test station 1", "Test station 2"});
+            "Provence", "Montelly", "Vigie", "Lausanne—Flon", "Test station 1", "Test station 2"};
+
+        checkDepots(output);
+        checkOutputLength(output, stations.length + 2);
+        assertStations(output, stations
+        );
 
         return CheckResult.correct();
     }
 
     // not existing file check
-    @DynamicTest(order = 4)
-    CheckResult test4() {
+    @DynamicTest(order = 3)
+    CheckResult nonexistingFileTest() {
         TestedProgram main = new TestedProgram();
-        String output = main.start("tHiS_fIlE_DoEs_nOt_ExIsT.txt").toLowerCase();
-
+        String output = main.start("tHiS_fIlE_DoEs_nOt_ExIsT.txt");
         if (output.trim().length() == 0) {
-            return CheckResult.wrong("The program did not print anything when the file that doesn't exist was passed.");
+            return CheckResult.wrong("The program did not print anything when the file was not exist. ");
         }
-        if (output.startsWith("depot") || output.endsWith("depot") || !output.contains("error")) {
-            return CheckResult.wrong("It looks like the program did not print an error message when the file that doesn't exist was passed.\n" +
-                "Your output should contain 'error'.");
+        if (output.toLowerCase().startsWith("depot") || output.toLowerCase().endsWith("depot")) {
+            return CheckResult.wrong("It looks like the program did not print an error message when the file was not exist.");
         }
-
         return CheckResult.correct();
     }
 
-    // additional test case
-    @DynamicTest(order = 5)
-    CheckResult test5() {
+    // output with transfers
+    @DynamicTest(order = 4)
+    CheckResult outputLineWithTransfer() {
         TestedProgram main = new TestedProgram();
-        main.start("./test/samara.json");
+        main.start("./test/prague.json");
 
-        main.execute("/append \"line 1\" \"Krylya Sovetov\"");
-        String output = main.execute("/output \"line 1\"");
+        String[][] stations = new String[][]{
+            {"Nemocnice Motol", null},
+            {"Petriny", null},
+            {"Nadrazi Veleslavin", null},
+            {"Borislavka", null},
+            {"Dejvicka", null},
+            {"Hradcanska", null},
+            {"Malostranska", null},
+            {"Staromestska", null},
+            {"Mustek", "Linka B"},
+            {"Muzeum", "Linka C"},
+            {"Namesti Miru", null},
+            {"Jiriho z Podebrad", null},
+            {"Flora", null},
+            {"Zelivskeho", null},
+            {"Strasnicka", null},
+            {"Skalka", null},
+            {"Depo Hostivar", null}
+        };
 
+        String output = main.execute("/output \"Linka A\"");
         checkDepots(output);
 
-        checkOutputLength(output, 11);
+        checkOutputLength(output, stations.length + 2);
+        assertWithTransfer(output, stations);
+
+        return CheckResult.correct();
+    }
 
-        assertStations(output, new String[]{"Alabinskaya", "Rossiyskaya", "Moskovskaya",
-            "Gagarinskaya", "Sportivnaya", "Sovetskaya", "Pobeda", "Bezymyanka", "Kirovskaya", "Yungorodok",
-            "Krylya Sovetov"});
+    // connections test
+    @DynamicTest(order = 5)
+    CheckResult connectLinesTest() {
 
-        main.execute("/add-head \"line 1\" Samarskaya");
-        output = main.execute("/output \"line 1\"");
+        TestedProgram main = new TestedProgram();
+        main.start("./test/prague.json");
+
+        String[][] stations = new String[][]{{"Nemocnice Motol", null}, {"Petriny", "Linka C"},
+            {"Nadrazi Veleslavin", null}, {"Borislavka", null}, {"Dejvicka", null}, {"Hradcanska", null},
+            {"Malostranska", null}, {"Staromestska", null}, {"Mustek", "Linka B"}, {"Muzeum", "Linka C"},
+            {"Namesti Miru", null}, {"Jiriho z Podebrad", null}, {"Flora", null}, {"Zelivskeho", null},
+            {"Strasnicka", null}, {"Skalka", null}, {"Depo Hostivar", null}
+        };
+        main.execute("/connect \"Linka C\" \"I.P.Pavlova\" \"Linka A\" \"Petriny\"");
+
+        String output = main.execute("/output \"Linka A\"");
 
         checkDepots(output);
-        checkOutputLength(output, 12);
+        checkOutputLength(output, stations.length + 2);
+        assertWithTransfer(output, stations);
+
+        return CheckResult.correct();
+    }
+
+    @DynamicTest(order = 6)
+    CheckResult simpleRouteTest() {
+        TestedProgram main = new TestedProgram();
+        main.start("./test/prague.json");
+
+        String[] correctRoute = {"Petriny", "Nadrazi Veleslavin", "Borislavka", "Dejvicka", "Hradcanska", "Malostranska",
+            "Staromestska", "Mustek", "Muzeum", "Namesti Miru", "Jiriho z Podebrad", "Flora"};
+
+        String[] sOutput = main.execute("/route \"Linka A\" \"Petriny\" \"Linka A\" \"Flora\"").toLowerCase().split("\n");
 
-        assertStations(output, new String[]{"Samarskaya", "Alabinskaya", "Rossiyskaya", "Moskovskaya",
-            "Gagarinskaya", "Sportivnaya", "Sovetskaya", "Pobeda", "Bezymyanka", "Kirovskaya", "Yungorodok",
-            "Krylya Sovetov"});
+        if (sOutput.length != correctRoute.length) {
+            return CheckResult.wrong("Your program printed an incorrect number of stations in the route.\n" +
+                "Expected: " + correctRoute.length + " stations." +
+                "\nYour output: " + sOutput.length + " stations.");
+        }
+
+        for (int i = 0; i < correctRoute.length; i++) {
+            if (i == 0 && !correctRoute[i].equalsIgnoreCase(sOutput[i])) {
+                return CheckResult.wrong("The first station in the output should be '" + correctRoute[i] + "'.");
+            } else if (i != 0) {
+                if (!correctRoute[i].equalsIgnoreCase(sOutput[i])) {
+                    return CheckResult.wrong("After '" + correctRoute[i - 1] + "' should be '" + correctRoute[i] + "'.");
+                }
+            }
+        }
+
+        return CheckResult.correct();
+    }
+
+    // advanced route test
+    @DynamicTest(order = 7)
+    CheckResult advancedRouteTest() {
+        TestedProgram main = new TestedProgram();
+        main.start("./test/prague.json");
+
+        String[] route = {"Vysehrad", "I.P.Pavlova", "Muzeum",
+            "Linka A", "Muzeum", "Mustek",
+            "Linka B", "Mustek", "Namesti Republiky"};
+        String[] sOutput = main.execute("/route \"Linka C\" \"Vysehrad\" \"Linka B\" \"Namesti Republiky\"").split("\n");
+
+        if (sOutput.length != 9) {
+            return CheckResult.wrong("Your program printed an incorrect number of stations in the route.");
+        }
+
+        int index = 0;
+        for (String station : sOutput) {
+            if (!station.toLowerCase().trim().contains(route[index].toLowerCase())) {
+                return CheckResult.wrong("The route is incorrect. Wrong stations were displayed");
+            }
+            index++;
+        }
+
+        return CheckResult.correct();
+    }
+
+    // simple test with time
+    @DynamicTest(order = 8)
+    CheckResult simpleTime() {
+        TestedProgram main = new TestedProgram();
+        main.start("./test/prague_w_time.json");
+
+        String[] route = {"Borislavka", "Dejvicka", "Hradcanska", "Malostranska", "Staromestska", "Mustek", "Muzeum",
+            "Namesti Miru", "Jiriho z Podebrad", "Flora", "44"};
+        String[] sOutput = main.execute("/fastest-route \"Linka A\" \"Borislavka\" \"Linka A\" \"Flora\"").split("\n");
+
+        if (sOutput.length != route.length) {
+            return CheckResult.wrong("Your program printed an incorrect number of stations in the route. Expected 10 stations and the total time!");
+        }
+
+        int index = 0;
+        for (String station : sOutput) {
+            if (!station.toLowerCase().trim().contains(route[index].toLowerCase())) {
+                return CheckResult.wrong("The route is incorrect. Wrong stations were displayed");
+            }
+            index++;
+        }
+
+        return CheckResult.correct();
+    }
+
+    // advanced test with time
+    @DynamicTest(order = 9)
+    CheckResult advancedTime() {
+        TestedProgram main = new TestedProgram();
+        main.start("./test/prague_w_time.json");
+
+        String[] route = {"Vysehrad", "I.P.Pavlova", "Muzeum", "Hlavni nadrazi", "Florenc",
+            "Linka B", "Florenc", "Namesti Republiky", "29"
+        };
+
+        String[] sOutput = main.execute("/fastest-route \"Linka C\" \"Vysehrad\" \"Linka B\" \"Namesti Republiky\"")
+            .split("\n");
+
+        if (sOutput.length != 9) {
+            return CheckResult.wrong("Your program printed an incorrect number of stations in the route. Expected 8 stations and the total time!");
+        }
+
+        int index = 0;
+        for (String station : sOutput) {
+            if (!station.toLowerCase().trim().contains(route[index].toLowerCase())) {
+                return CheckResult.wrong("The route is incorrect. Wrong stations were displayed");
+            }
+            index++;
+        }
 
         return CheckResult.correct();
     }
@@ -160,34 +287,27 @@
         String[] sOutput = output.trim().split("\n");
 
         for (int i = 0; i < stations.length; i++) {
-
-            String currentLine = sOutput[i].trim();
-            if (currentLine.split("-").length != 3) {
-                throw new WrongAnswer("There is should be 3 stations in one line.\n" +
-                    "Treat 'depot' as a station name");
+            if (!sOutput[i + 1].equals(stations[i])) {
+                throw new WrongAnswer("Can't find station '" + stations[i] + "' in the line number " + (i + 2));
             }
-
-            // Checking the first line
-            if (i == 0) {
-                for (int j = 0; j < 2; j++) {
-                    if (!currentLine.contains(stations[i + j])) {
-                        throw new WrongAnswer("Can't find station '" + stations[i + j] + "' in the line number " + (i + 1));
-                    }
-                }
-                // Checking the last line
-            } else if (i == stations.length - 1) {
-                for (int j = 0; j < 2; j++) {
-                    if (!currentLine.contains(stations[i + j - 1])) {
-                        throw new WrongAnswer("Can't find station '" + stations[i + j - 1] + "' in the line number " + (i + 1));
-                    }
+        }
+    }
+
+    void assertWithTransfer(String output, String[][] stations) {
+
+        String[] sOutput = output.split("\n");
+
+        for (int i = 0; i < stations.length; i++) {
+            String currentLine = sOutput[i + 1].toLowerCase().trim();
+            String currentStation = stations[i][0];
+            String currentTransfer = stations[i][1];
+            if (currentTransfer == null) {
+                if (!currentLine.equals(currentStation.toLowerCase())) {
+                    throw new WrongAnswer("There is an error in your program's reply. Some stations were not found.");
                 }
-                // Checking the rest lines
-            } else {
-                for (int j = 0; j < 3; j++) {
-                    if (!currentLine.contains(stations[i + j - 1])) {
-                        throw new WrongAnswer("Can't find station '" + stations[i + j - 1] + "' in the line number " + (i + 1));
-                    }
-                }
+            } else if (!currentLine.contains(currentStation.toLowerCase()) ||
+                !currentLine.contains(currentTransfer.toLowerCase())) {
+                throw new WrongAnswer("Expected transfer to '" + currentTransfer + "' from '" + currentStation + "' station.");
             }
         }
     }
Index: ../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/AddStudentsCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tracker.commands;\r\n\r\npublic class AddStudents implements Command{\r\n    @Override\r\n    public void execute() {\r\n        \r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/AddStudentsCommand.java b/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/AddStudentsCommand.java
--- a/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/AddStudentsCommand.java	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/AddStudentsCommand.java	(date 1648227200331)
@@ -1,8 +1,106 @@
 package tracker.commands;
 
-public class AddStudents implements Command{
+import tracker.Student;
+import tracker.StudentsDataBase;
+
+import java.util.Scanner;
+import java.util.regex.Matcher;
+import java.util.regex.Pattern;
+
+public class AddStudentsCommand implements Command {
+    private final StudentsDataBase studentsDataBase;
+    private String firstName;
+    private String lastName;
+    private String email;
+    private static Integer ID = 100;
+
+    public AddStudentsCommand(StudentsDataBase studentsDataBase) {
+        this.studentsDataBase = studentsDataBase;
+    }
+
     @Override
     public void execute() {
-        
+        System.out.println("Enter student credentials or 'back' to return:");
+        Scanner scanner = new Scanner(System.in);
+        while (scanner.hasNextLine()) {
+            String input = scanner.nextLine();
+            if (input.equals("back")) {
+                System.out.printf("Total %d students have been added." + "\n", studentsDataBase.getDb().size());
+                break;
+            } else if (input.isBlank()) {
+                System.out.println("Incorrect credentials.");
+            } else if (splitter(input)) {
+                if (isCorrectCredentials(firstName, lastName, email)) {
+                    studentsDataBase.getDb().put(String.valueOf(ID), email);
+                    studentsDataBase.getDbScores().put(String.valueOf(ID), new Student(email, firstName, lastName, ID));
+                    System.out.println("The student has been added.");
+                    ID++;
+                }
+            }
+        }
+
+    }
+
+    boolean splitter(String input) {
+        String[] strings = input.split(" ");
+        if (strings.length == 3) {
+            firstName = strings[0];
+            lastName = strings[1];
+            email = strings[2];
+            return true;
+        } else if (strings.length > 3) {
+            firstName = strings[0];
+            email = strings[strings.length - 1];
+            StringBuilder sb = new StringBuilder();
+            for (int i = 1; i < strings.length - 1; i++) {
+                sb.append(strings[i]).append(" ");
+            }
+            lastName = sb.toString().trim();
+            return true;
+
+        } else {
+            System.out.println("Incorrect credentials.");
+            return false;
+        }
+    }
+
+    boolean isFirstName(String firstName) {
+        Pattern pattern = Pattern.compile("^[a-zA-Z]+[-'][A-Za-z]*\\w$|^[A-Za-z]{2,}$");
+        Matcher matcher = pattern.matcher(firstName.trim());
+        return matcher.matches();
+    }
+
+    boolean isLastName(String lastName) {
+        Pattern pattern = Pattern.compile("^[a-zA-Z]+ +(([',. -][a-zA-Z ])?[a-zA-Z]*)*$|" +
+                "^[A-Za-z]+[-][A-Za-z]*\\w$|^[A-Za-z]{2,}$|" +
+                "^[A-Z]['][A-Z][a-z]+$");
+        Matcher matcher = pattern.matcher(lastName.trim());
+        return matcher.matches();
+    }
+
+    boolean isEmail(String email) {
+        Pattern pattern = Pattern.compile("^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z0-9]{1,8}(?:\\.[a-z0-9]{2})?)$");
+        Matcher matcher = pattern.matcher(email.trim());
+        return matcher.matches();
+    }
+
+    boolean isEmailAlreadyExist(String email) {
+        return studentsDataBase.getDb().containsValue(email);
+    }
+
+    boolean isCorrectCredentials(String firstName, String lastName, String email) {
+        if (!isFirstName(firstName)) {
+            System.out.println("Incorrect first name.");
+            return false;
+        } else if (!isLastName(lastName)) {
+            System.out.println("Incorrect last name.");
+            return false;
+        } else if (!isEmail(email)) {
+            System.out.println("Incorrect email.");
+            return false;
+        } else if (isEmailAlreadyExist(email)) {
+            System.out.println("This email is already taken.");
+            return false;
+        } else return true;
     }
 }
Index: ../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/BackCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tracker.commands;public class BackCommand {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/BackCommand.java b/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/BackCommand.java
--- a/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/BackCommand.java	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/BackCommand.java	(date 1648149119374)
@@ -1,2 +1,21 @@
-package tracker.commands;public class BackCommand {
+package tracker.commands;
+
+import tracker.StudentsDataBase;
+
+public class BackCommand implements Command {
+    StudentsDataBase studentsDataBase;
+
+    public BackCommand(StudentsDataBase studentsDataBase) {
+        this.studentsDataBase = studentsDataBase;
+    }
+
+    @Override
+    public void execute() {
+        if (studentsDataBase.getDb().isEmpty()) {
+            System.out.println("Enter 'exit' to exit the program.");
+        } else {
+            int count = studentsDataBase.getDb().size();
+            System.out.printf("Total %d students have been added." + "\n", count);
+        }
+    }
 }
Index: ../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/ExitCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tracker.commands;public class ExitCommand {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/ExitCommand.java b/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/ExitCommand.java
--- a/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/ExitCommand.java	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/ExitCommand.java	(date 1648135661305)
@@ -1,2 +1,8 @@
-package tracker.commands;public class ExitCommand {
+package tracker.commands;
+
+public class ExitCommand implements Command{
+    @Override
+    public void execute() {
+        System.out.println("Bye!");
+    }
 }
Index: ../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/ListCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tracker.commands;public class ListCommand {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/ListCommand.java b/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/ListCommand.java
--- a/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/ListCommand.java	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/ListCommand.java	(date 1648227225267)
@@ -1,2 +1,25 @@
-package tracker.commands;public class ListCommand {
+package tracker.commands;
+
+import tracker.StudentsDataBase;
+
+import java.util.Map;
+
+public class ListCommand implements Command {
+    private final StudentsDataBase studentsDataBase;
+
+    public ListCommand(StudentsDataBase studentsDataBase) {
+        this.studentsDataBase = studentsDataBase;
+    }
+
+    @Override
+    public void execute() {
+        if (studentsDataBase.getDb().size() == 0) {
+            System.out.println("No students found.");
+        } else {
+            System.out.println("Students:");
+            for (Map.Entry<String, String> entry : studentsDataBase.getDb().entrySet()) {
+                System.out.println(entry.getKey());
+            }
+        }
+    }
 }
Index: Web Quiz Engine/task/src/engine/config/WebSecurityConfigurerImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Web Quiz Engine/task/src/engine/config/WebSecurityConfigurerImpl.java b/Web Quiz Engine/task/src/engine/config/WebSecurityConfigurerImpl.java
new file mode 100644
--- /dev/null	(date 1649352948138)
+++ b/Web Quiz Engine/task/src/engine/config/WebSecurityConfigurerImpl.java	(date 1649352948138)
@@ -0,0 +1,36 @@
+package engine.config;
+
+import engine.businesslayer.services.UserDetailsServiceImpl;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.context.annotation.Bean;
+import org.springframework.security.authentication.AuthenticationProvider;
+import org.springframework.security.authentication.dao.DaoAuthenticationProvider;
+import org.springframework.security.config.annotation.web.builders.HttpSecurity;
+import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
+import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
+import org.springframework.security.core.userdetails.UserDetailsService;
+import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
+import org.springframework.security.crypto.password.PasswordEncoder;
+
+@EnableWebSecurity
+public class WebSecurityConfigurerImpl extends WebSecurityConfigurerAdapter {
+
+    @Autowired
+    private UserDetailsServiceImpl userDetailsService;
+
+    @Override
+    protected void configure(HttpSecurity http) throws Exception {
+        http.authorizeRequests()
+                .mvcMatchers("/test").hasAnyRole("USER")
+                .anyRequest().permitAll() // make remaining endpoints public (including POST /register)
+                .and()
+                .csrf().disable() // disabling CSRF will allow sending POST request using Postman
+                .httpBasic();
+        http.headers().frameOptions().disable();
+    }
+
+    @Bean
+    public PasswordEncoder getEncoder() {
+        return new BCryptPasswordEncoder();
+    }
+}
Index: Web Quiz Engine/task/src/engine/persistence/UserRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Web Quiz Engine/task/src/engine/persistence/UserRepository.java b/Web Quiz Engine/task/src/engine/persistence/UserRepository.java
new file mode 100644
--- /dev/null	(date 1649355811816)
+++ b/Web Quiz Engine/task/src/engine/persistence/UserRepository.java	(date 1649355811816)
@@ -0,0 +1,8 @@
+package engine.persistence;
+
+import engine.businesslayer.User;
+import org.springframework.data.repository.CrudRepository;
+
+public interface UserRepository extends CrudRepository<User, Long> {
+    User findByUsername(String username);
+}
Index: Web Quiz Engine/task/src/engine/businesslayer/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Web Quiz Engine/task/src/engine/businesslayer/User.java b/Web Quiz Engine/task/src/engine/businesslayer/User.java
new file mode 100644
--- /dev/null	(date 1649357771903)
+++ b/Web Quiz Engine/task/src/engine/businesslayer/User.java	(date 1649357771903)
@@ -0,0 +1,70 @@
+package engine.businesslayer;
+
+import com.fasterxml.jackson.annotation.JsonProperty;
+import org.hibernate.validator.constraints.Length;
+
+import javax.persistence.*;
+import javax.validation.constraints.Email;
+import javax.validation.constraints.NotNull;
+import javax.validation.constraints.Pattern;
+
+@Entity
+@Table(name = "user")
+public class User {
+
+    @Id
+    @GeneratedValue(strategy = GenerationType.AUTO)
+    private Long id;
+
+    @NotNull
+    @JsonProperty("email")
+    @Email(regexp = "^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$")
+    @Column(nullable = false)
+    private String username;
+
+    @Length(min = 5)
+    @NotNull
+    private String password;
+
+    private String role;
+
+    public User() {
+    }
+
+    public User(String username, String password) {
+        this.username = username;
+        this.password = password;
+    }
+
+    public Long getId() {
+        return id;
+    }
+
+    public void setId(Long id) {
+        this.id = id;
+    }
+
+    public String getUsername() {
+        return username;
+    }
+
+    public void setUsername(String username) {
+        this.username = username;
+    }
+
+    public String getPassword() {
+        return password;
+    }
+
+    public void setPassword(String password) {
+        this.password = password;
+    }
+
+    public String getRole() {
+        return role;
+    }
+
+    public void setRole(String role) {
+        this.role = role;
+    }
+}
Index: Web Quiz Engine/task/src/engine/businesslayer/UserDetailsImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Web Quiz Engine/task/src/engine/businesslayer/UserDetailsImpl.java b/Web Quiz Engine/task/src/engine/businesslayer/UserDetailsImpl.java
new file mode 100644
--- /dev/null	(date 1649351684984)
+++ b/Web Quiz Engine/task/src/engine/businesslayer/UserDetailsImpl.java	(date 1649351684984)
@@ -0,0 +1,53 @@
+package engine.businesslayer;
+
+import org.springframework.security.core.GrantedAuthority;
+import org.springframework.security.core.authority.SimpleGrantedAuthority;
+import org.springframework.security.core.userdetails.UserDetails;
+
+import java.util.Collection;
+import java.util.List;
+
+public class UserDetailsImpl implements UserDetails {
+    private User user;
+    private final List<GrantedAuthority> rolesAndAuthorities;
+
+    public UserDetailsImpl(User user) {
+        this.user = user;
+        rolesAndAuthorities = List.of(new SimpleGrantedAuthority(user.getRole()));
+    }
+
+    @Override
+    public Collection<? extends GrantedAuthority> getAuthorities() {
+        return rolesAndAuthorities;
+    }
+
+    @Override
+    public String getPassword() {
+        return user.getPassword();
+    }
+
+    @Override
+    public String getUsername() {
+        return user.getUsername();
+    }
+
+    @Override
+    public boolean isAccountNonExpired() {
+        return true;
+    }
+
+    @Override
+    public boolean isAccountNonLocked() {
+        return true;
+    }
+
+    @Override
+    public boolean isCredentialsNonExpired() {
+        return true;
+    }
+
+    @Override
+    public boolean isEnabled() {
+        return true;
+    }
+}
\ No newline at end of file
Index: Web Quiz Engine/task/src/engine/businesslayer/services/UserDetailsServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Web Quiz Engine/task/src/engine/businesslayer/services/UserDetailsServiceImpl.java b/Web Quiz Engine/task/src/engine/businesslayer/services/UserDetailsServiceImpl.java
new file mode 100644
--- /dev/null	(date 1649351803254)
+++ b/Web Quiz Engine/task/src/engine/businesslayer/services/UserDetailsServiceImpl.java	(date 1649351803254)
@@ -0,0 +1,26 @@
+package engine.businesslayer.services;
+
+import engine.businesslayer.User;
+import engine.businesslayer.UserDetailsImpl;
+import engine.persistence.UserRepository;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.security.core.userdetails.UserDetails;
+import org.springframework.security.core.userdetails.UserDetailsService;
+import org.springframework.security.core.userdetails.UsernameNotFoundException;
+import org.springframework.stereotype.Service;
+
+@Service
+public class UserDetailsServiceImpl implements UserDetailsService {
+
+    @Autowired
+    private UserRepository userRepository;
+
+    @Override
+    public UserDetails loadUserByUsername(String username) {
+        User user = userRepository.findByUsername(username);
+        if (user == null) {
+            throw new UsernameNotFoundException(username);
+        }
+        return new UserDetailsImpl(user);
+    }
+}
Index: Web Quiz Engine/task/src/engine/presentation/UserController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Web Quiz Engine/task/src/engine/presentation/UserController.java b/Web Quiz Engine/task/src/engine/presentation/UserController.java
new file mode 100644
--- /dev/null	(date 1649357164419)
+++ b/Web Quiz Engine/task/src/engine/presentation/UserController.java	(date 1649357164419)
@@ -0,0 +1,44 @@
+package engine.presentation;
+
+import engine.businesslayer.User;
+import engine.persistence.UserRepository;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.http.HttpStatus;
+import org.springframework.security.crypto.password.PasswordEncoder;
+import org.springframework.web.bind.annotation.*;
+import org.springframework.web.server.ResponseStatusException;
+
+import javax.validation.Valid;
+import java.util.regex.Pattern;
+
+@RestController
+public class UserController {
+
+    @Autowired
+    private UserRepository userRepository;
+
+    @Autowired
+    private PasswordEncoder encoder;
+
+    @GetMapping("/test")
+    public String test() {
+        return "/test is accessed";
+    }
+
+    @PostMapping("/api/register")
+    public User registrationNewUser(@Valid @RequestBody User user) {
+        // add checking!!!!
+        if (userRepository.findByUsername(user.getUsername()) == null) {
+            user.setPassword(encoder.encode(user.getPassword()));
+            user.setRole("ROLE_" + "USER");
+            userRepository.save(user);
+        } else throw new ResponseStatusException(HttpStatus.BAD_REQUEST);
+        return user;
+    }
+
+    @PostMapping("/actuator/shutdown")
+    public void testPermissions() {
+
+    }
+
+}
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1648630803188)
+++ b/.idea/vcs.xml	(date 1648630803188)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$/.." vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/gradle.xml b/.idea/gradle.xml
new file mode 100644
--- /dev/null	(date 1648637881048)
+++ b/.idea/gradle.xml	(date 1648637881048)
@@ -0,0 +1,27 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="GradleMigrationSettings" migrationVersion="1" />
+  <component name="GradleSettings">
+    <option name="linkedExternalProjectsSettings">
+      <GradleProjectSettings>
+        <option name="delegatedBuild" value="false" />
+        <option name="testRunner" value="GRADLE" />
+        <option name="distributionType" value="WRAPPED" />
+        <option name="externalProjectPath" value="$PROJECT_DIR$" />
+        <option name="modules">
+          <set>
+            <option value="$PROJECT_DIR$" />
+            <option value="$PROJECT_DIR$/Web Quiz Engine/task" />
+            <option value="$PROJECT_DIR$/Web Quiz Engine/task/build/classes/java" />
+            <option value="$PROJECT_DIR$/Web Quiz Engine/task/build/generated/sources/annotationProcessor/java" />
+            <option value="$PROJECT_DIR$/Web Quiz Engine/task/build/generated/sources/headers/java" />
+            <option value="$PROJECT_DIR$/Web Quiz Engine/task/build/reports/tests" />
+            <option value="$PROJECT_DIR$/Web Quiz Engine/task/build/test-results" />
+            <option value="$PROJECT_DIR$/Web Quiz Engine/task/build/tmp" />
+            <option value="$PROJECT_DIR$/util" />
+          </set>
+        </option>
+      </GradleProjectSettings>
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/externalDependencies.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/externalDependencies.xml b/.idea/externalDependencies.xml
new file mode 100644
--- /dev/null	(date 1648630803166)
+++ b/.idea/externalDependencies.xml	(date 1648630803166)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ExternalDependencies">
+    <plugin id="JUnit" />
+    <plugin id="com.intellij.java" />
+    <plugin id="org.jetbrains.plugins.gradle" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1648630849259)
+++ b/.idea/.gitignore	(date 1648630849259)
@@ -0,0 +1,3 @@
+# Default ignored files
+/shelf/
+/workspace.xml
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1649088805512)
+++ b/.idea/misc.xml	(date 1649088805512)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" project-jdk-name="jbr-11" project-jdk-type="JavaSDK" />
+  <component name="ProjectType">
+    <option name="id" value="jpab" />
+  </component>
+</project>
\ No newline at end of file
Index: ../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/NotifyCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tracker.commands;public class NotifyCommand {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/NotifyCommand.java b/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/NotifyCommand.java
--- a/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/NotifyCommand.java	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../Learning Progress Tracker/Learning Progress Tracker/task/src/tracker/commands/NotifyCommand.java	(date 1648299025031)
@@ -1,2 +1,65 @@
-package tracker.commands;public class NotifyCommand {
+package tracker.commands;
+
+import tracker.Student;
+import tracker.StudentsDataBase;
+import tracker.courses.Course;
+
+import java.util.*;
+
+public class NotifyCommand implements Command {
+    private final StudentsDataBase studentsDataBase;
+    private final Course javaCourse = new Course(600, "Java");
+    private final Course dsaCourse = new Course(400, "DSA");
+    private final Course databasesCourse = new Course(480, "Databases");
+    private final Course springCourse = new Course(550, "Spring");
+    private final List<Course> courses = List.of(javaCourse, dsaCourse, databasesCourse, springCourse);
+    private static Set<String> graduates = new HashSet<>();
+
+    public NotifyCommand(StudentsDataBase studentsDataBase) {
+        this.studentsDataBase = studentsDataBase;
+    }
+
+    @Override
+    public void execute() {
+        graduates.clear();
+        if (isNoEmptyDB()) {
+            for (Map.Entry<String, Student> entry : studentsDataBase.getDbScores().entrySet()) {
+                if (entry.getValue().getGrad1() == javaCourse.getCoursePoint() & !entry.getValue().isAccomplishedJava()) {
+                    printNotify(entry.getValue().getEmail(), entry.getValue().getFirstName(),
+                            entry.getValue().getLastName(), javaCourse.getNameCourse());
+                    graduates.add(entry.getKey());
+                    entry.getValue().setAccomplishedJava(true);
+                }
+                if (entry.getValue().getGrad2() == dsaCourse.getCoursePoint() & !entry.getValue().isAccomplishedDSA()) {
+                    printNotify(entry.getValue().getEmail(), entry.getValue().getFirstName(),
+                            entry.getValue().getLastName(), dsaCourse.getNameCourse());
+                    graduates.add(entry.getKey());
+                    entry.getValue().setAccomplishedDSA(true);
+                }
+                if (entry.getValue().getGrad3() == databasesCourse.getCoursePoint() & !entry.getValue().isAccomplishedDB()) {
+                    printNotify(entry.getValue().getEmail(), entry.getValue().getFirstName(),
+                            entry.getValue().getLastName(), databasesCourse.getNameCourse());
+                    graduates.add(entry.getKey());
+                    entry.getValue().setAccomplishedDB(true);
+                }
+                if (entry.getValue().getGrad4() == springCourse.getCoursePoint() & !entry.getValue().isAccomplishedSpring()) {
+                    printNotify(entry.getValue().getEmail(), entry.getValue().getFirstName(),
+                            entry.getValue().getLastName(), springCourse.getNameCourse());
+                    graduates.add(entry.getKey());
+                    entry.getValue().setAccomplishedSpring(true);
+                }
+            }
+            System.out.printf("Total %d students have been notified." + "\n", graduates.size());
+        } else System.out.println("Total 0 students have been notified.");
+    }
+
+    boolean isNoEmptyDB() {
+        return !studentsDataBase.getDbScores().isEmpty();
+    }
+
+    static void printNotify(String email, String firstName, String lastName, String nameCourse) {
+        System.out.println("To: " + email);
+        System.out.println("Re: Your Learning Progress");
+        System.out.println("Hello, " + firstName + " " + lastName + "! You have accomplished our " + nameCourse + " course!");
+    }
 }
Index: ../Learning Progress Tracker/Learning Progress Tracker/task/test/LearningProgressTrackerTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import org.hyperskill.hstest.dynamic.DynamicTest;\r\nimport org.hyperskill.hstest.stage.StageTest;\r\nimport org.hyperskill.hstest.testcase.CheckResult;\r\nimport org.hyperskill.hstest.testing.TestedProgram;\r\n\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\n\r\nimport static org.hyperskill.hstest.testing.expect.Expectation.expect;\r\n\r\npublic class LearningProgressTrackerTest extends StageTest<String> {\r\n\r\n    @DynamicTest\r\n    CheckResult testStartAndExit() {\r\n        TestedProgram main = new TestedProgram();\r\n\r\n        String output = main.start().toLowerCase();\r\n\r\n        expect(output).toContain(1).lines();\r\n        if (incorrectString(output, \"learning progress tracker\")) {\r\n            return CheckResult.wrong(\"When started, your program \" +\r\n                    \"should print \\\"Learning Progress Tracker\\\"\");\r\n        }\r\n\r\n        if (!main.isWaitingInput()) {\r\n            return CheckResult.wrong(\"After the start, your program should \" +\r\n                    \"be ready to accept commands from the user\");\r\n        }\r\n\r\n        output = main.execute(\"exit\");\r\n        expect(output).toContain(1).lines();\r\n        if (anyMissingKeywords(output, \"bye\")) {\r\n            return CheckResult.wrong(\"When the 'exit' command is entered, \" +\r\n                    \"your program should say bye to the user\");\r\n        }\r\n\r\n        if (!main.isFinished()) {\r\n            return CheckResult.wrong(\"After the 'exit' command has been entered, \" +\r\n                    \"your program should stop working\");\r\n        }\r\n\r\n        return CheckResult.correct();\r\n\r\n    }\r\n\r\n    @DynamicTest(data = \"getBlankInput\")\r\n    CheckResult testBlankInput(String input) {\r\n        TestedProgram main = new TestedProgram();\r\n        main.start();\r\n\r\n        String output = main.execute(input);\r\n        expect(output).toContain(1).lines();\r\n        if (incorrectString(output, \"no input\")) {\r\n            return CheckResult.wrong(\"When the user enters an empty or blank \" +\r\n                    \"string, your program should print \\\"no input\\\"\");\r\n        }\r\n\r\n        return CheckResult.correct();\r\n    }\r\n\r\n    @DynamicTest(data = \"getUnknownCommands\")\r\n    CheckResult testUnknownCommands(String input) {\r\n        TestedProgram main = new TestedProgram();\r\n        main.start();\r\n\r\n        String output = main.execute(input);\r\n        expect(output).toContain(1).lines();\r\n        if (anyMissingKeywords(output, \"unknown\", \"command\")) {\r\n            return CheckResult.wrong(\"When an unknown command is entered, your \" +\r\n                    \"program should display an error message: \\\"Unknown command!\\\"\");\r\n        }\r\n\r\n        return CheckResult.correct();\r\n    }\r\n\r\n    private boolean anyMissingKeywords(String output, String... keywords) {\r\n        List<String> tokens = Arrays.asList(\r\n                output.toLowerCase().split(\"\\\\W+\")\r\n        );\r\n\r\n        return !tokens.containsAll(Arrays.asList(keywords.clone()));\r\n    }\r\n\r\n    private boolean incorrectString(String output, String model) {\r\n        String normalizedOutput = output.replaceAll(\"\\\\W+\", \"\").toLowerCase();\r\n        String normalizedModel = model.replaceAll(\"\\\\W+\", \"\").toLowerCase();\r\n\r\n        return !normalizedOutput.contains(normalizedModel);\r\n    }\r\n\r\n    private String[] getBlankInput() {\r\n        return new String[]{\"\", \"  \", \"\\t\", \" \\t\"};\r\n    }\r\n\r\n    private String[] getUnknownCommands() {\r\n        return new String[]{\"abc\", \"quit\", \"  brexit \", \"exi  t\", \"help\", \"break\",\r\n                \"-help\", \"Ctrl+C\", \"exit please\", \":q\"};\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Learning Progress Tracker/Learning Progress Tracker/task/test/LearningProgressTrackerTest.java b/../Learning Progress Tracker/Learning Progress Tracker/task/test/LearningProgressTrackerTest.java
--- a/../Learning Progress Tracker/Learning Progress Tracker/task/test/LearningProgressTrackerTest.java	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../Learning Progress Tracker/Learning Progress Tracker/task/test/LearningProgressTrackerTest.java	(date 1648296227163)
@@ -1,23 +1,32 @@
 import org.hyperskill.hstest.dynamic.DynamicTest;
+import org.hyperskill.hstest.exception.outcomes.WrongAnswer;
 import org.hyperskill.hstest.stage.StageTest;
 import org.hyperskill.hstest.testcase.CheckResult;
 import org.hyperskill.hstest.testing.TestedProgram;
 
+import java.util.ArrayList;
 import java.util.Arrays;
+import java.util.Collections;
+import java.util.HashSet;
 import java.util.List;
+import java.util.Random;
+import java.util.Set;
+import java.util.function.Predicate;
+import java.util.stream.Collectors;
+import java.util.stream.IntStream;
+import java.util.stream.Stream;
 
 import static org.hyperskill.hstest.testing.expect.Expectation.expect;
 
 public class LearningProgressTrackerTest extends StageTest<String> {
+    private static final Random rnd = new Random();
 
-    @DynamicTest
+    @DynamicTest(order = 1)
     CheckResult testStartAndExit() {
         TestedProgram main = new TestedProgram();
-
-        String output = main.start().toLowerCase();
-
+        String output = main.start();
         expect(output).toContain(1).lines();
-        if (incorrectString(output, "learning progress tracker")) {
+        if (incorrectString(output, "Learning Progress Tracker")) {
             return CheckResult.wrong("When started, your program " +
                     "should print \"Learning Progress Tracker\"");
         }
@@ -27,6 +36,18 @@
                     "be ready to accept commands from the user");
         }
 
+        output = main.execute("back");
+        expect(output).toContain(1).lines();
+        if (!main.isWaitingInput()) {
+            return CheckResult.wrong("Your program should keep running after the 'back' " +
+                    "command is entered");
+        }
+
+        if (anyMissingKeywords(output, "enter", "exit", "program")) {
+            return CheckResult.wrong("When 'back' command is entered your program " +
+                    "should print the hint \"Enter 'exit' to exit the program.\"");
+        }
+
         output = main.execute("exit");
         expect(output).toContain(1).lines();
         if (anyMissingKeywords(output, "bye")) {
@@ -40,10 +61,9 @@
         }
 
         return CheckResult.correct();
-
     }
 
-    @DynamicTest(data = "getBlankInput")
+    @DynamicTest(order = 2, data = "getBlankInput")
     CheckResult testBlankInput(String input) {
         TestedProgram main = new TestedProgram();
         main.start();
@@ -52,13 +72,13 @@
         expect(output).toContain(1).lines();
         if (incorrectString(output, "no input")) {
             return CheckResult.wrong("When the user enters an empty or blank " +
-                    "string, your program should print \"no input\"");
+                    "string, your program should print \"No input.\"");
         }
 
         return CheckResult.correct();
     }
 
-    @DynamicTest(data = "getUnknownCommands")
+    @DynamicTest(order = 3, data = "getUnknownCommands")
     CheckResult testUnknownCommands(String input) {
         TestedProgram main = new TestedProgram();
         main.start();
@@ -73,12 +93,791 @@
         return CheckResult.correct();
     }
 
+    @DynamicTest(order = 4)
+    CheckResult testAddStudents1() {
+        TestedProgram main = new TestedProgram();
+        main.start();
+
+        String output = main.execute("add students");
+        expect(output).toContain(1).lines();
+        if (anyMissingKeywords(output,
+                "enter", "student", "credentials", "back", "return")) {
+            return CheckResult.wrong("When 'add students' command is entered, your " +
+                    "program should display the prompt \"Enter student credentials or " +
+                    "'back' to return:\"");
+        }
+
+        output = main.execute("exit");
+        expect(output).toContain(1).lines();
+        if (anyMissingKeywords(output, "incorrect", "credentials")) {
+            return CheckResult.wrong("Expected output: \"Incorrect credentials.\", " +
+                    "but your output was: " + output);
+        }
+
+        output = main.execute("back");
+        expect(output).toContain(1).lines();
+        if (anyMissingKeywords(output, "total", "0", "students", "added")) {
+            return CheckResult.wrong("Expected: \"Total 0 students have been added.\", but " +
+                    "your output was: " + output);
+        }
+
+        output = main.execute("back");
+        expect(output).toContain(1).lines();
+        if (anyMissingKeywords(output, "enter", "exit", "program")) {
+            return CheckResult.wrong("When 'back' command is entered your program " +
+                    "should stop waiting for student credentials");
+        }
+
+        output = main.execute("exit");
+        expect(output).toContain(1).lines();
+        if (anyMissingKeywords(output, "bye")) {
+            return CheckResult.wrong("When the 'exit' command is entered, " +
+                    "your program should say bye to the user");
+        }
+
+        if (!main.isFinished()) {
+            return CheckResult.wrong("After the 'exit' command has been entered, " +
+                    "your program should stop working");
+        }
+
+        return CheckResult.correct();
+    }
+
+    @DynamicTest(order = 5)
+    CheckResult testAddStudents2() {
+        TestedProgram main = new TestedProgram();
+        main.start();
+
+        main.execute("add students");
+        for (String input : getCorrectCredentials()) {
+            String output = main.execute(input);
+            expect(output).toContain(1).lines();
+            if (anyMissingKeywords(output, "student", "added")) {
+                return CheckResult.wrong("Expected output: \"The student has been added.\", but your " +
+                        "output was: " + output);
+            }
+        }
+
+        String output = main.execute("back");
+        expect(output).toContain(1).lines();
+        if (anyMissingKeywords(output, "total", "10", "students", "added")) {
+            return CheckResult.wrong("Expected: \"Total 10 students have been added.\", but " +
+                    "your output was: " + output);
+        }
+
+        return CheckResult.correct();
+    }
+
+    @DynamicTest(order = 6)
+    CheckResult testAddStudents3() {
+        TestedProgram main = new TestedProgram();
+        main.start();
+        main.execute("add students");
+
+        for (String[] args : getIncorrectCredentials()) {
+            String output = main.execute(args[0]);
+            expect(output).toContain(1).lines();
+            if (incorrectString(output, args[1])) {
+                return CheckResult.wrong("Expected output: \"" + args[1] + "\", but your " +
+                        "output was: " + output);
+            }
+        }
+
+        String output = main.execute("back");
+        expect(output).toContain(1).lines();
+        if (anyMissingKeywords(output, "total", "0", "students", "added")) {
+            return CheckResult.wrong("Expected: \"Total 0 students have been added.\", but " +
+                    "your output was: " + output);
+        }
+
+        return CheckResult.correct();
+    }
+
+    @DynamicTest(order = 7)
+    CheckResult testFindAll1() {
+        TestedProgram main = new TestedProgram();
+        main.start();
+        main.execute("add students");
+        main.execute("back");
+
+        String output = main.execute("list");
+        expect(output).toContain(1).lines();
+        if (anyMissingKeywords(output, "no", "found")) {
+            return CheckResult.wrong("Expected: \"No students found.\", but " +
+                    "your output was: " + output);
+        }
+
+        return CheckResult.correct();
+    }
+
+    @DynamicTest(order = 8)
+    CheckResult testAddDoubles() {
+        TestedProgram main = new TestedProgram();
+        main.start();
+        main.execute("add students");
+
+        List<String> credentials = getRandomCredentials(12);
+        for (String arg : credentials) {
+            String output = main.execute(arg);
+            expect(output).toContain(1).lines();
+            if (anyMissingKeywords(output, "student", "added")) {
+                return CheckResult.wrong("Expected output: \"The student has been added.\", but your " +
+                        "output was: " + output);
+            }
+
+            output = main.execute(arg);
+            expect(output).toContain(1).lines();
+            if (anyMissingKeywords(output, "this", "email", "already", "taken")) {
+                return CheckResult.wrong("Expected output: \"This email is already taken.\", but your " +
+                        "output was: " + output);
+            }
+        }
+
+        String output = main.execute("back");
+        expect(output).toContain(1).lines();
+        if (anyMissingKeywords(output, "total", String.valueOf(credentials.size()), "students", "added")) {
+            return CheckResult.wrong("Expected: \"Total " + credentials.size() + "students have been added.\", but " +
+                    "your output was: " + output);
+        }
+
+        return CheckResult.correct();
+    }
+
+    @DynamicTest(order = 9)
+    CheckResult testFindAll2() {
+        TestedProgram main = new TestedProgram();
+        main.start();
+        main.execute("add students");
+
+        List<String> credentials = getRandomCredentials(12);
+        for (String arg : credentials) {
+            String output = main.execute(arg);
+            expect(output).toContain(1).lines();
+            if (anyMissingKeywords(output, "student", "added")) {
+                main.stop();
+                return CheckResult.wrong("Expected output: \"The student has been added.\", but your " +
+                        "output was: " + output);
+            }
+        }
+
+        String output = main.execute("back");
+        expect(output).toContain(1).lines();
+        if (anyMissingKeywords(output, "total", String.valueOf(credentials.size()), "students", "added")) {
+            return CheckResult.wrong("Expected: \"Total " + credentials.size() + "students have been added.\", but " +
+                    "your output was: " + output);
+        }
+
+        output = main.execute("list");
+        List<String> lines = expect(output).toContain(credentials.size() + 1).lines();
+        if (!lines.get(0).toLowerCase().contains("students")) {
+            return CheckResult.wrong("Expected the header \"Students:\" but your first line was: " + lines.get(0));
+        }
+
+        List<String> ids = parseIds(lines);
+        Set<String> uniqueIds = new HashSet<>(ids);
+        if (uniqueIds.size() != ids.size()) {
+            return CheckResult.wrong("Expected " + ids.size() +
+                    " unique IDs but found only " + uniqueIds.size());
+        }
+
+        return CheckResult.correct();
+    }
+
+    @DynamicTest(order = 10)
+    CheckResult testBackFromAddPoints() {
+        TestedProgram main = new TestedProgram();
+        main.start();
+
+        String output = main.execute("add points");
+        expect(output).toContain().lines();
+        if (anyMissingKeywords(output, "enter", "id", "points", "back", "return")) {
+            return CheckResult.wrong("When 'add points' command is entered, your program should print " +
+                    "\"Enter an id and points or 'back' to return:\" but your output was: " + output);
+        }
+
+        main.execute("back");
+        output = main.execute("back");
+        expect(output).toContain(1).lines();
+        if (anyMissingKeywords(output, "enter", "exit", "program")) {
+            return CheckResult.wrong("When 'back' command is entered your program " +
+                    "should stop waiting for student id and points");
+        }
+
+        output = main.execute("exit");
+        expect(output).toContain(1).lines();
+        if (anyMissingKeywords(output, "bye")) {
+            return CheckResult.wrong("When the 'exit' command is entered, " +
+                    "your program should say bye to the user");
+        }
+
+        if (!main.isFinished()) {
+            return CheckResult.wrong("After the 'exit' command has been entered, " +
+                    "your program should stop working");
+        }
+
+        return CheckResult.correct();
+    }
+
+    @DynamicTest(order = 11)
+    CheckResult testStudentPoints1() {
+        TestedProgram main = new TestedProgram();
+        main.start();
+        main.execute("add students");
+
+        List<String> credentials = getRandomCredentials(6);
+        for (String arg : credentials) {
+            main.execute(arg);
+        }
+
+        main.execute("back");
+        String output = main.execute("list");
+        List<String> lines = expect(output).toContain().lines();
+        List<String> ids = parseIds(lines);
+
+        main.execute("add points");
+        String[] points = getIncorrectPoints();
+        for (String point : points) {
+            output = main.execute(ids.get(0) + " " + point);
+            expect(output).toContain().lines();
+            if (anyMissingKeywords(output, "incorrect", "format")) {
+                return CheckResult.wrong("Expected output: \"Incorrect points format.\", but your output was: " + output);
+            }
+        }
+
+        output = main.execute("imsurethereisnosuchstudentid 1 1 1 1");
+        expect(output).toContain().lines();
+        if (anyMissingKeywords(output, "no", "student", "found") ||
+                !output.contains("imsurethereisnosuchstudentid")) {
+            return CheckResult.wrong("Expected output was: \"No student is found " +
+                    "for id=imsurethereisnosuchstudentid.\" but your output was: " + output);
+        }
+
+        return CheckResult.correct();
+    }
+
+    @DynamicTest(order = 12)
+    CheckResult testStudentPoints2() {
+        TestedProgram main = new TestedProgram();
+        main.start();
+        main.execute("add students");
+
+        List<String> credentials = getRandomCredentials(6);
+        for (String arg : credentials) {
+            main.execute(arg);
+        }
+        main.execute("back");
+
+        String output = main.execute("list");
+        List<String> lines = expect(output).toContain().lines();
+        List<String> ids = parseIds(lines);
+
+        main.execute("add points");
+        String[] points = getCorrectPoints(6);
+
+        for (int i = 0; i < points.length; i++) {
+            output = main.execute(ids.get(i) + " " + points[i]);
+            expect(output).toContain(1).lines();
+            if (anyMissingKeywords(output, "points", "updated")) {
+                return CheckResult.wrong("Expected \"Points updated.\" but your output was " + output);
+            }
+        }
+
+        return CheckResult.correct();
+    }
+
+    @DynamicTest(order = 13)
+    CheckResult testBackFromFind() {
+        TestedProgram main = new TestedProgram();
+        main.start();
+
+        String output = main.execute("find");
+        expect(output).toContain(1).lines();
+        if (anyMissingKeywords(output, "enter", "id", "back", "return")) {
+            return CheckResult.wrong("When 'find' command is entered, you program should " +
+                    "print \"Enter an id or 'back' to return:\", but your output was: " + output);
+        }
+
+        main.execute("back");
+        output = main.execute("back");
+        expect(output).toContain(1).lines();
+        if (anyMissingKeywords(output, "enter", "exit", "program")) {
+            return CheckResult.wrong("When 'back' command is entered your program " +
+                    "should stop waiting for student id");
+        }
+
+        output = main.execute("exit");
+        expect(output).toContain(1).lines();
+        if (anyMissingKeywords(output, "bye")) {
+            return CheckResult.wrong("When the 'exit' command is entered, " +
+                    "your program should say bye to the user");
+        }
+
+        if (!main.isFinished()) {
+            return CheckResult.wrong("After the 'exit' command has been entered, " +
+                    "your program should stop working");
+        }
+
+        return CheckResult.correct();
+    }
+
+    @DynamicTest(order = 14)
+    CheckResult testFindByID() {
+        TestedProgram main = new TestedProgram();
+        main.start();
+        main.execute("add students");
+
+        List<String> credentials = getRandomCredentials(5);
+        for (String arg : credentials) {
+            main.execute(arg);
+        }
+        main.execute("back");
+
+        String output = main.execute("list");
+        List<String> lines = expect(output).toContain().lines();
+        List<String> ids = parseIds(lines);
+
+        main.execute("add points");
+        for (int i = 0; i < ids.size(); i++) {
+            main.execute(String.format("%s %d %d %d %d", ids.get(i), i, i, i, i));
+            main.execute(String.format("%s %d %d %d %d", ids.get(i), i, i, i, i));
+        }
+
+        main.execute("back");
+        output = main.execute("find");
+        expect(output).toContain(1).lines();
+        if (anyMissingKeywords(output, "enter", "id", "back", "return")) {
+            return CheckResult.wrong("When 'find' command is entered, you program should " +
+                    "print \"Enter an id or 'back' to return:\", but your output was: " + output);
+        }
+
+        for (int i = 0; i < ids.size(); i++) {
+            output = main.execute(ids.get(i));
+            expect(output).toContain(1).lines();
+            String expected = String.format(
+                    "%s points: Java=%d; DSA=%d; Databases=%d; Spring=%d",
+                    ids.get(i), i * 2, i * 2, i * 2, i * 2
+            );
+            if (incorrectString(output, expected)) {
+                return CheckResult.wrong("Expected output: " + expected +
+                        ", but your output was: " + output);
+            }
+        }
+
+        return CheckResult.correct();
+    }
+
+    @DynamicTest(order = 15)
+    CheckResult testBackFromStatistics() {
+        TestedProgram main = new TestedProgram();
+        main.start();
+
+        String output = main.execute("statistics");
+        main.execute("back");
+        output = main.execute("back");
+        expect(output).toContain(1).lines();
+        if (anyMissingKeywords(output, "enter", "exit", "program")) {
+            return CheckResult.wrong("When 'back' command is entered your program " +
+                    "should stop waiting for student id");
+        }
+
+        output = main.execute("exit");
+        expect(output).toContain(1).lines();
+        if (anyMissingKeywords(output, "bye")) {
+            return CheckResult.wrong("When the 'exit' command is entered, " +
+                    "your program should say bye to the user");
+        }
+
+        if (!main.isFinished()) {
+            return CheckResult.wrong("After the 'exit' command has been entered, " +
+                    "your program should stop working");
+        }
+
+        return CheckResult.correct();
+    }
+
+    @DynamicTest(order = 16)
+    CheckResult testStatistics1() {
+        TestedProgram main = new TestedProgram();
+        main.start();
+
+        String output = main.execute("statistics");
+        String[] lines = Arrays.stream(output.split("\n"))
+                .filter(Predicate.not(String::isBlank))
+                .toArray(String[]::new);
+
+        if (anyMissingKeywords(lines[0], "course", "details", "back", "quit")) {
+            return CheckResult.wrong("When the \"statistics\" command is entered, your " +
+                    "program must print: \"Type the name of a course to see details or 'back' " +
+                    "to quit:\", but your output was: " + lines[0]);
+        }
+
+        if (lines.length < 7) {
+            return CheckResult.wrong("Your program should print a header and 6 " +
+                    "categories, but you printed only " + lines.length + " lines");
+        }
+
+        List<String> categories = List.of("Most popular: n/a", "Least popular: n/a",
+                "Highest activity: n/a", "Lowest activity: n/a", "Easiest course: n/a",
+                "Hardest course: n/a");
+        for (int i = 1; i < lines.length; i++) {
+            if (incorrectString(lines[i], categories.get(i - 1))) {
+                return CheckResult.wrong("Expected: " + categories.get(i - 1) +
+                        ", but your output was " + lines[i]);
+            }
+        }
+
+        return CheckResult.correct();
+    }
+
+    @DynamicTest(order = 17)
+    CheckResult testStatistics2() {
+        TestedProgram main = new TestedProgram();
+        main.start();
+        main.execute("statistics");
+
+        List<String> courses = List.of("Java", "DSA", "Databases", "Spring");
+        for (String course : courses) {
+            String output = main.execute(course);
+            String[] lines = output.split("\n");
+            if (lines.length < 2) {
+                return CheckResult.wrong("Expected 2 lines, but your output was only " + lines.length + " lines.");
+            }
+
+            if (incorrectString(lines[0], course.toLowerCase())) {
+                return CheckResult.wrong("Your first line should be " + course + ", but your output was " + lines[0]);
+            }
+
+            if (anyMissingKeywords(lines[1], "id", "points", "completed")) {
+                return CheckResult.wrong("Your second line should be \"id\tpoints\tcompleted\", " +
+                        "but your output was " + lines[1]);
+            }
+        }
+
+        List<String> unknown = Arrays.stream(getUnknownCommands())
+                .filter(str -> courses.stream().noneMatch(it -> it.trim().equalsIgnoreCase(str)))
+                .collect(Collectors.toList());
+
+        for (String course : unknown) {
+            String output = main.execute(course);
+            if (incorrectString(output, "unknown course")) {
+                return CheckResult.wrong("Expected output: \"Unknown course.\", but your output was: " + output);
+            }
+        }
+
+        return CheckResult.correct();
+    }
+
+    @DynamicTest(order = 18)
+    CheckResult testStatistics3() {
+        TestedProgram main = new TestedProgram();
+        main.start();
+        main.execute("statistics");
+
+        main.execute("back");
+        if (!main.isWaitingInput()) {
+            return CheckResult.wrong("Your program should keep running after the 'back' " +
+                    "command is entered");
+        }
+
+        String output = main.execute("back");
+        if (anyMissingKeywords(output, "enter", "exit", "program")) {
+            return CheckResult.wrong("When 'back' command is entered your program " +
+                    "should print the hint \"Enter 'exit' to exit the program.\"");
+        }
+
+        output = main.execute("exit");
+        if (anyMissingKeywords(output, "bye")) {
+            return CheckResult.wrong("When the 'exit' command is entered, " +
+                    "your program should say bye to the user");
+        }
+
+        if (!main.isFinished()) {
+            return CheckResult.wrong("After the 'exit' command has been entered, " +
+                    "your program should stop working");
+        }
+
+        return CheckResult.correct();
+    }
+
+    @DynamicTest(order = 19)
+    CheckResult testCategories1() {
+        TestedProgram main = new TestedProgram();
+        main.start();
+        main.execute("add students");
+
+        getRandomCredentials(4).forEach(main::execute);
+
+        main.execute("back");
+        String output = main.execute("list");
+        List<String> lines = expect(output).toContain().lines();
+        List<String> ids = parseIds(lines);
+
+        main.execute("add points");
+        for (String id : ids) {
+            main.execute(String.format("%s 5 4 3 1", id));
+        }
+
+        main.execute("back");
+        lines = expect(main.execute("statistics")).toContain().lines();
+
+        if (anyMissingKeywords(lines.get(1), "java", "dsa", "databases", "spring")) {
+            return CheckResult.wrong("Expected most popular: Java, DSA, Databases, Spring, " +
+                    "but your output was: " + lines.get(1));
+        }
+
+        if (!lines.get(2).toLowerCase().contains("n/a")) {
+            return CheckResult.wrong("Expected least popular: n/a, " +
+                    "but your output was: " + lines.get(2));
+        }
+
+        if (anyMissingKeywords(lines.get(3), "java", "dsa", "databases", "spring")) {
+            return CheckResult.wrong("Expected top activity: Java, DSA, Databases, Spring, " +
+                    "but your output was: " + lines.get(3));
+        }
+
+        if (!lines.get(4).contains("n/a")) {
+            return CheckResult.wrong("Expected lowest activity: n/a, " +
+                    "but your output was: " + lines.get(4));
+        }
+
+        if (anyMissingKeywords(lines.get(5), "java")) {
+            return CheckResult.wrong("Expected easiest course: Java, " +
+                    "but your output was: " + lines.get(5));
+        }
+
+        if (anyMissingKeywords(lines.get(6), "Spring")) {
+            return CheckResult.wrong("Expected hardest course: Spring, " +
+                    "but your output was: " + lines.get(6));
+        }
+
+        return CheckResult.correct();
+    }
+
+    @DynamicTest(order = 20)
+    CheckResult testCategories2() {
+        TestedProgram main = new TestedProgram();
+        main.start();
+        main.execute("add students");
+
+        getRandomCredentials(4).forEach(main::execute);
+
+        main.execute("back");
+        List<String> lines = expect(main.execute("list")).toContain().lines();
+        List<String> ids = parseIds(lines);
+
+        main.execute("add points");
+        main.execute(String.format("%s 10 10 10 10", ids.get(0)));
+        main.execute(String.format("%s 5 5 5 5", ids.get(1)));
+        main.execute(String.format("%s 5 5 5 5", ids.get(2)));
+        main.execute(String.format("%s 2 2 2 2", ids.get(3)));
+
+        main.execute("back");
+        main.execute("statistics");
+
+        List<String> linesJava = expect(main.execute("Java")).toContain(6).lines();
+        List<String> linesDsa = expect(main.execute("DSA")).toContain(6).lines();
+        List<String> linesDb = expect(main.execute("Databases")).toContain(6).lines();
+        List<String> linesSpring = expect(main.execute("Spring")).toContain(6).lines();
+
+        if (!linesJava.get(2).matches(".+\\s+10\\s+1\\.7\\s?%.*") ||
+                !linesJava.get(3).matches(".+\\s+5\\s+0\\.8\\s?%.*") ||
+                !linesJava.get(4).matches(".+\\s+5\\s+0\\.8\\s?%.*") ||
+                !linesJava.get(5).matches(".+\\s+2\\s+0\\.3\\s?%.*") ||
+                !linesJava.get(2).startsWith(ids.get(0)) ||
+                !linesJava.get(3).startsWith(ids.get(1)) && !linesJava.get(3).startsWith(ids.get(2)) ||
+                !linesJava.get(4).startsWith(ids.get(1)) && !linesJava.get(4).startsWith(ids.get(2)) ||
+                !linesJava.get(5).startsWith(ids.get(3)) ||
+                linesJava.get(3).startsWith(ids.get(1)) && ids.get(1).compareTo(ids.get(2)) >= 0 ||
+                linesJava.get(3).startsWith(ids.get(2)) && ids.get(2).compareTo(ids.get(1)) >= 0) {
+            return CheckResult.wrong("Your Java student list either contains incorrect data or is incorrectly sorted");
+        }
+
+        if (!linesDsa.get(2).matches(".+\\s+10\\s+2\\.5\\s?%.*") ||
+                !linesDsa.get(3).matches(".+\\s+5\\s+1\\.3\\s?%.*") ||
+                !linesDsa.get(4).matches(".+\\s+5\\s+1\\.3\\s?%.*") ||
+                !linesDsa.get(5).matches(".+\\s+2\\s+0\\.5\\s?%.*") ||
+                !linesDsa.get(2).startsWith(ids.get(0)) ||
+                !linesDsa.get(3).startsWith(ids.get(1)) && !linesDsa.get(3).startsWith(ids.get(2)) ||
+                !linesDsa.get(4).startsWith(ids.get(1)) && !linesDsa.get(4).startsWith(ids.get(2)) ||
+                !linesDsa.get(5).startsWith(ids.get(3)) ||
+                linesDsa.get(3).startsWith(ids.get(1)) && ids.get(1).compareTo(ids.get(2)) >= 0 ||
+                linesDsa.get(3).startsWith(ids.get(2)) && ids.get(2).compareTo(ids.get(1)) >= 0) {
+            return CheckResult.wrong("Your DSA student list either contains incorrect data or is incorrectly sorted");
+        }
+
+        if (!linesDb.get(2).matches(".+\\s+10\\s+2\\.1\\s?%.*") ||
+                !linesDb.get(3).matches(".+\\s+5\\s+1\\.0\\s?%.*") ||
+                !linesDb.get(4).matches(".+\\s+5\\s+1\\.0\\s?%.*") ||
+                !linesDb.get(5).matches(".+\\s+2\\s+0\\.4\\s?%.*") ||
+                !linesDb.get(2).startsWith(ids.get(0)) ||
+                !linesDb.get(3).startsWith(ids.get(1)) && !linesDb.get(3).startsWith(ids.get(2)) ||
+                !linesDb.get(4).startsWith(ids.get(1)) && !linesDb.get(4).startsWith(ids.get(2)) ||
+                !linesDb.get(5).startsWith(ids.get(3)) ||
+                linesDb.get(3).startsWith(ids.get(1)) && ids.get(1).compareTo(ids.get(2)) >= 0 ||
+                linesDb.get(3).startsWith(ids.get(2)) && ids.get(2).compareTo(ids.get(1)) >= 0) {
+            return CheckResult.wrong("Your Databases student list either contains incorrect data " +
+                    "or is incorrectly sorted");
+        }
+
+        if (!linesSpring.get(2).matches(".+\\s+10\\s+1\\.8\\s?%.*") ||
+                !linesSpring.get(3).matches(".+\\s+5\\s+0\\.9\\s?%.*") ||
+                !linesSpring.get(4).matches(".+\\s+5\\s+0\\.9\\s?%.*") ||
+                !linesSpring.get(5).matches(".+\\s+2\\s+0\\.4\\s?%.*") ||
+                !linesSpring.get(2).startsWith(ids.get(0)) ||
+                !linesSpring.get(3).startsWith(ids.get(1)) && !linesSpring.get(3).startsWith(ids.get(2)) ||
+                !linesSpring.get(4).startsWith(ids.get(1)) && !linesSpring.get(4).startsWith(ids.get(2)) ||
+                !linesSpring.get(5).startsWith(ids.get(3)) ||
+                linesSpring.get(3).startsWith(ids.get(1)) && ids.get(1).compareTo(ids.get(2)) >= 0 ||
+                linesSpring.get(3).startsWith(ids.get(2)) && ids.get(2).compareTo(ids.get(1)) >= 0) {
+            return CheckResult.wrong("Your Spring student list either contains incorrect data " +
+                    "or is incorrectly sorted");
+        }
+
+        return CheckResult.correct();
+    }
+
+    @DynamicTest(order = 21)
+    CheckResult testCategories3() {
+        TestedProgram main = new TestedProgram();
+        main.start();
+        main.execute("add students");
+
+        main.execute("John Doe johnd@email.net");
+        main.execute("Jane Spark jspark@yahoo.com");
+        main.execute("back");
+
+        List<String> lines = expect(main.execute("list")).toContain().lines();
+        List<String> ids = parseIds(lines);
+
+        main.execute("add points");
+        main.execute(String.format("%s 8 7 7 5", ids.get(0)));
+        main.execute(String.format("%s 7 6 9 7", ids.get(0)));
+        main.execute(String.format("%s 6 5 5 0", ids.get(0)));
+        main.execute(String.format("%s 8 0 8 6", ids.get(1)));
+        main.execute(String.format("%s 7 0 0 0", ids.get(1)));
+        main.execute(String.format("%s 9 0 0 5", ids.get(1)));
+
+        main.execute("back");
+        main.execute("statistics");
+
+        List<String> linesJava = expect(main.execute("Java")).toContain(4).lines();
+        List<String> linesDsa = expect(main.execute("DSA")).toContain(3).lines();
+        List<String> linesDb = expect(main.execute("Databases")).toContain(4).lines();
+        List<String> linesSpring = expect(main.execute("Spring")).toContain(4).lines();
+
+        if (!linesJava.get(2).matches(".+\\s+24\\s+4\\.0\\s?%.*") ||
+                !linesJava.get(3).matches(".+\\s+21\\s+3\\.5\\s?%.*") ||
+                !linesJava.get(2).startsWith(ids.get(1)) || !linesJava.get(3).startsWith(ids.get(0))) {
+            return CheckResult.wrong("Your Java student list either contains incorrect data or is incorrectly sorted");
+        }
+
+        if (!linesDsa.get(2).matches(".+\\s+18\\s+4\\.5\\s?%.*") || !linesDsa.get(2).startsWith(ids.get(0))) {
+            return CheckResult.wrong("Your DSA student list either contains incorrect data or is incorrectly sorted");
+        }
+
+        if (!linesDb.get(2).matches(".+\\s+21\\s+4\\.4\\s?%.*") ||
+                !linesDb.get(3).matches(".+\\s+8\\s+1\\.7\\s?%.*") ||
+                !linesDb.get(2).startsWith(ids.get(0)) || !linesDb.get(3).startsWith(ids.get(1))) {
+            return CheckResult.wrong("Your Databases student list either contains incorrect data " +
+                    "or is incorrectly sorted");
+        }
+
+        if (!linesSpring.get(2).matches(".+\\s+12\\s+2\\.2\\s?%.*") ||
+                !linesSpring.get(3).matches(".+\\s+11\\s+2\\.0\\s?%.*") ||
+                !linesSpring.get(2).startsWith(ids.get(0)) || !linesSpring.get(3).startsWith(ids.get(1))) {
+            return CheckResult.wrong("Your Spring student list either contains incorrect data " +
+                    "or is incorrectly sorted");
+        }
+
+        return CheckResult.correct();
+    }
+
+    @DynamicTest(order = 22)
+    CheckResult testNotification1() {
+        TestedProgram main = new TestedProgram();
+        main.start();
+
+        List<String> output = expect(main.execute("notify")).toContain(1).lines();
+        if (output.stream()
+                .map(String::toLowerCase)
+                .allMatch(str -> anyMissingKeywords(str, "total", "0", "notified"))) {
+            return CheckResult.wrong("Expected output was \"Total 0 students have been notified.\", " +
+                    "but your output was: " + String.join("\n", output));
+        }
+
+        return CheckResult.correct();
+    }
+
+    @DynamicTest(order = 23)
+    CheckResult testNotification2() {
+        TestedProgram main = new TestedProgram();
+        main.start();
+
+        main.execute("add students");
+        main.execute("John Doe johnd@email.net");
+        main.execute("Jane Spark jspark@yahoo.com");
+        main.execute("back");
+
+        List<String> lines = expect(main.execute("list")).toContain().lines();
+        List<String> ids = parseIds(lines);
+
+        main.execute("add points");
+        main.execute(String.format("%s 600 400 0 0", ids.get(0)));
+        main.execute("back");
+
+        List<String> output = expect(main.execute("notify")).toContain(7).lines();
+
+        if (!output.get(0).toLowerCase().startsWith("to:") ||
+                !output.get(0).toLowerCase().contains("johnd@email.net") ||
+                !output.get(1).toLowerCase().startsWith("re:") ||
+                anyMissingKeywords(output.get(1), "learning", "progress") ||
+                anyMissingKeywords(output.get(2), "john", "doe", "accomplished") ||
+                !output.get(2).toLowerCase().contains("java") && !output.get(5).toLowerCase().contains("java")) {
+            return CheckResult.wrong("You program should have printed the following:\nTo: johnd@email.net\n" +
+                    "Re: Your Learning Progress\nHello, John Doe! You have accomplished our Java course!\n" +
+                    "but your output was: \n" + output.stream().limit(3).collect(Collectors.joining("\n")));
+        }
+
+        if (!output.get(3).toLowerCase().startsWith("to:") ||
+                !output.get(3).toLowerCase().contains("johnd@email.net") ||
+                !output.get(4).toLowerCase().startsWith("re:") ||
+                anyMissingKeywords(output.get(4), "learning", "progress") ||
+                anyMissingKeywords(output.get(5), "john", "doe", "accomplished", "course") ||
+                !output.get(5).toLowerCase().contains("dsa") && !output.get(2).toLowerCase().contains("dsa")) {
+            return CheckResult.wrong("You program should have printed the following:\nTo: johnd@email.net\n" +
+                    "Re: Your Learning Progress\nHello, John Doe! You have accomplished our DSA course!\n" +
+                    "but your output was: \n" + output.stream().limit(3).collect(Collectors.joining("\n")));
+        }
+
+        if (anyMissingKeywords(output.get(6).toLowerCase(), "total", "1", "notified")) {
+            return CheckResult.wrong("Expected output was \"Total 1 student has been notified.\", but your output was: \n" +
+                    String.join("\n", output));
+        }
+
+        if (output.stream().map(String::toLowerCase).anyMatch(str ->
+                str.contains("jane") || str.contains("spark") || str.contains("jspark@yahoo.com"))) {
+            return CheckResult.wrong("Your notification should not mention Jane Spark");
+        }
+
+        output = expect(main.execute("notify")).toContain(1).lines();
+        if (output.stream()
+                .map(String::toLowerCase)
+                .allMatch(str -> anyMissingKeywords(str, "total", "0", "notified"))) {
+            return CheckResult.wrong("Expected output was \"Total 0 students have been notified\", " +
+                    "but your output was: " + String.join("\n", output));
+        }
+
+        return CheckResult.correct();
+    }
+
     private boolean anyMissingKeywords(String output, String... keywords) {
         List<String> tokens = Arrays.asList(
-                output.toLowerCase().split("\\W+")
+                output.trim().toLowerCase().split("\\W+")
         );
 
-        return !tokens.containsAll(Arrays.asList(keywords.clone()));
+        return !tokens.containsAll(Arrays.stream(keywords)
+                .map(String::toLowerCase)
+                .collect(Collectors.toList()));
     }
 
     private boolean incorrectString(String output, String model) {
@@ -93,7 +892,96 @@
     }
 
     private String[] getUnknownCommands() {
-        return new String[]{"abc", "quit", "  brexit ", "exi  t", "help", "break",
-                "-help", "Ctrl+C", "exit please", ":q"};
+        return new String[]{"abc", "quit", "  brexit ", "exi  t", "?", "break",
+                "-exit", "Ctrl+C", "exit please", ":q", "java", "spring", "dsa", "databases"};
+    }
+
+    private String[] getCorrectCredentials() {
+        return new String[]{"John Smith jsmith@hotmail.com", "Anny Doolittle anny.md@mail.edu",
+                "Jean-Claude O'Connor jcda123@google.net", "Mary Emelianenko 125367at@zzz90.z9",
+                "Al Owen u15da125@a1s2f4f7.a1c2c5s4", "Robert Jemison Van de Graaff robertvdgraaff@mit.edu",
+                "Ed Eden a1@a1.a1", "na'me s-u ii@ii.ii", "n'a me su aa-b'b ab@ab.ab", "nA me 1@1.1"};
+    }
+
+    private String[][] getIncorrectCredentials() {
+        return new String[][]{
+                {"", "Incorrect credentials"}, {" \t", "Incorrect credentials."},
+                {"name surname", "Incorrect credentials."},
+                {"n surname email@email.xyz", "Incorrect first name."},
+                {"'name surname email@email.xyz", "Incorrect first name."},
+                {"-name surname email@email.xyz", "Incorrect first name."},
+                {"name- surname email@email.xyz", "Incorrect first name."},
+                {"name' surname email@email.xyz", "Incorrect first name."},
+                {"nam-'e surname email@email.xyz", "Incorrect first name."},
+                {"na'-me surname email@email.xyz", "Incorrect first name."},
+                {"na--me surname email@email.xyz", "Incorrect first name."},
+                {"na''me surname email@email.xyz", "Incorrect first name."},
+                {"námé surname email@email.xyz", "Incorrect first name."},
+                {"name s email@email.xyz", "Incorrect last name."},
+                {"name -surname email@email.xyz", "Incorrect last name."},
+                {"name 'surname email@email.xyz", "Incorrect last name."},
+                {"name surnam''e email@email.xyz", "Incorrect last name."},
+                {"name surn--ame email@email.xyz", "Incorrect last name."},
+                {"name s'-urname email@email.xyz", "Incorrect last name."},
+                {"name su-'rname email@email.xyz", "Incorrect last name."},
+                {"name surname- email@email.xyz", "Incorrect last name."},
+                {"name surname' email@email.xyz", "Incorrect last name."},
+                {"name surnámé email@email.xyz", "Incorrect last name."},
+                {"name surname emailemail.xyz", "Incorrect email."},
+                {"name surname email@emailxyz", "Incorrect email."},
+                {"name surname email@e@mail.xyz", "Incorrect email."},
+        };
+    }
+
+    private String[] getIncorrectPoints() {
+        return new String[]{"", "-1 1 1 1", "1 1 2 A", "1 1 1", "1 1 1 1 1"};
+    }
+
+    private String[] getCorrectPoints(int n) {
+        return Stream.generate(String::new)
+                .limit(n)
+                .map(it -> String.format("%d %d %d %d", nextPoint(), nextPoint(), nextPoint(), nextPoint()))
+                .toArray(String[]::new);
+    }
+
+    private int nextPoint() {
+        return rnd.nextInt(10) + 1;
+    }
+
+    private List<String> parseIds(List<String> lines) {
+        try {
+            return lines.stream()
+                    .skip(1)
+                    .map(String::trim)
+                    .collect(Collectors.toList());
+        } catch (Exception e) {
+            throw new WrongAnswer("Error occurred while parsing your output " + e.getMessage());
+        }
+    }
+
+    private List<String> generateNames(int n) {
+        List<String> names = List.of("Shoshana Utica", "Marisa Firman", "Gwenette Anagnos", "Charlena Girardo",
+                "Alexina Belcher", "Karee Antoinetta", "Dolley Panther", "Elysha Quinlan", "Trixie Winer",
+                "Ricki Trovillion", "Amye Uriisa", "Hedwig Wally", "Gwenette Kironde", "Jermaine Naaman",
+                "Olga Rosanne", "Annecorinne Ause", "Aurie Dorisa", "Van Fawnia", "Carmella Campman",
+                "Francesca Francis", "Elwira Florrie", "Nonna Miko", "Natka Herculie", "Roxi Hett", "Brandise Hardan",
+                "Toby Bleier", "Dalia Gleeson", "Emelia Annnora", "Beatrisa Jegar", "Barbara-Anne Chicky",
+                "Ann Agnella", "Lebbie Alabaster", "Leola Whelan", "Starlin Griz", "Anjanette Uis", "Tasha Chem");
+
+        List<String> selectedNames = new ArrayList<>(names);
+        Collections.shuffle(selectedNames);
+        return selectedNames.stream().limit(n).collect(Collectors.toList());
+    }
+
+    private List<String> generateEmails(int n) {
+        return IntStream.rangeClosed(1, n).mapToObj(it -> "address" + it + "@mail.com").collect(Collectors.toList());
+    }
+
+    private List<String> getRandomCredentials(int n) {
+        List<String> names = generateNames(n);
+        List<String> emails = generateEmails(n);
+        return IntStream.range(0, n)
+                .mapToObj(it -> String.format("%s %s", names.get(it), emails.get(it)))
+                .collect(Collectors.toList());
     }
 }
Index: ../Learning Progress Tracker/Learning Progress Tracker/task/test/tracker/SampleTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tracker;\r\n\r\nimport org.junit.jupiter.api.Test;\r\n\r\nimport static org.junit.jupiter.api.Assertions.*;\r\n\r\npublic class SampleTest {\r\n\r\n    @Test\r\n    void test() {\r\n        assertEquals(5, 2 + 3);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Learning Progress Tracker/Learning Progress Tracker/task/test/tracker/SampleTest.java b/../Learning Progress Tracker/Learning Progress Tracker/task/test/tracker/SampleTest.java
--- a/../Learning Progress Tracker/Learning Progress Tracker/task/test/tracker/SampleTest.java	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../Learning Progress Tracker/Learning Progress Tracker/task/test/tracker/SampleTest.java	(date 1648295810211)
@@ -1,6 +1,7 @@
 package tracker;
 
 import org.junit.jupiter.api.Test;
+import tracker.commands.AddStudentsCommand;
 
 import static org.junit.jupiter.api.Assertions.*;
 
@@ -8,6 +9,5 @@
 
     @Test
     void test() {
-        assertEquals(5, 2 + 3);
     }
 }
Index: ../Learning Progress Tracker/Learning Progress Tracker/Retrieving statistics/task.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><h5 id=\"description\">Description</h5>\r\n\r\n<p>You have done a great job! As a reminder, our online learning platform offers its students four courses: Java, DSA, Databases, and Spring. To complete each of these courses, a student must earn a certain number of points that are different for each course: 600 for Java, 400 for DSA, 480 for Databases, and 550 for Spring. Students can enroll in any of the courses and take as many assignments as they want.</p>\r\n\r\n<p>It would be a good idea to know which course is the most popular, which is the hardest to beat, and so on. For this purpose, you need to add new features to your program: it must provide the statistics about each course and track the performance of each student in each course.</p>\r\n\r\n<p>Calculate the following:</p>\r\n\r\n<ul>\r\n\t<li>Find out which courses are the most and least popular ones. The most popular has the biggest number of enrolled students;</li>\r\n\t<li>Find out which course has the highest and lowest student activity. Higher student activity means a bigger number of completed tasks;</li>\r\n\t<li>Establish the easiest and hardest course. The easiest course has the highest average grade per assignment;</li>\r\n\t<li>Establish top learners for each course.</li>\r\n</ul>\r\n\r\n<p>A student is enrolled in the course if the learning progress data contains at least one non-zero submission for that course. See the following example:</p>\r\n\r\n<pre><code class=\"language-no-highlight\">182365 4 0 0 8\r\n182365 0 0 0 5\r\n182366 0 8 0 4</code></pre>\r\n\r\n<p>On the first line, student <code class=\"java\">182365</code> completed one Java task and earned 4 points and also completed one Spring task and earned 8 point. On the second line the same student completed one Spring task and was awarded 5 points. On the third line student <code class=\"java\">182366 </code>completed one DSA task and received 8 points and one Spring task and got 4 points. In this example, the student <code class=\"java\">182365</code> is considered to be enrolled in the Java and Spring courses, and the student <code class=\"java\">182366</code> is considered to be enrolled in the DSA and Spring courses.</p>\r\n\r\n<p>One important thing. During statistics calculation, if multiple courses qualify for any of these categories, list the names of all such courses. If any course is already included in a category, it cannot be included in the opposite category. For example, if the Java Course is listed in the Highest Activity category, it cannot be listed in the Lowest Activity category.</p>\r\n\r\n<p>Look at the example above. The most popular course is Spring, the least popular course is Databases, the highest activity is Spring, the lowest activity is Databases, the easiest course is DSA, and the hardest course is Java:</p>\r\n\r\n<pre><code class=\"language-no-highlight\">Type the name of a course to see details or 'back' to quit:\r\nMost popular: Spring\r\nLeast popular: Databases\r\nHighest activity: Spring\r\nLowest activity: Databases\r\nEasiest course: DSA\r\nHardest course: Java</code></pre>\r\n\r\n<p>If no course falls into a certain category, for example if no students have enrolled in any of the courses or data can't be retrieved, print <code class=\"java\">n/a</code>. See more examples in the Examples section below.</p>\r\n\r\n<p>Information about top learners should be presented as a list containing the following information: a student's ID, the total points for a course, and the course completion progress as a percentage:</p>\r\n\r\n<pre><code class=\"language-no-highlight\">Java\r\nid     points completed\r\n125684 423    70.5%\r\n200751 420    70.0%\r\n130400 405    67.5%</code></pre>\r\n\r\n<p>The list must be sorted by the total number of points in descending order, and if two or more students have the same number of points, they must be sorted by their ID in ascending order. Use the dot <code class=\"java\">.</code> character as the decimal point and <a target=\"_blank\" href=\"https://docs.oracle.com/javase/7/docs/api/java/math/RoundingMode.html\" rel=\"noopener noreferrer nofollow\">RoundingMode.HALF_UP</a> for rounding decimal numbers.</p>\r\n\r\n<p>Also, use the following notation for course names: <code class=\"java\">Java</code>, <code class=\"java\">DSA</code>, <code class=\"java\">Databases</code>, <code class=\"java\">Spring</code>.</p>\r\n\r\n<p>This stage has a lot of requirements, so you can use unit tests to break things down.</p>\r\n\r\n<h5 id=\"objectives\">Objectives</h5>\r\n\r\n<p>In addition to the features of the previous stages, your program should:</p>\r\n\r\n<ol>\r\n\t<li>Add a new command to your program's toolkit: <code class=\"java\">statistics</code>. If users enter this command, your program should output the header: <code class=\"java\">Type the name of a course to see details or 'back' to quit</code> and six lines with the following information: <code class=\"java\">Most popular</code>, <code class=\"java\">Least popular</code>, <code class=\"java\">Highest activity</code>, <code class=\"java\">Lowest activity</code>, <code class=\"java\">Easiest course</code>, <code class=\"java\">Hardest course</code> with the names of the corresponding courses. After that, if users enter a course name, the program should display the details of this course, but if users enter a name that doesn't correspond to any of the courses, the program should print <code class=\"java\">Unknown course</code>. When the <code class=\"java\">back</code> command is entered, the program goes back to other available commands.</li>\r\n\t<li>When users enter the <code class=\"java\">statistics</code> command, your program must display the details about any course. When users type in the name of a course, the program should display the name of the course in the first line, then the column headers, and a list of student IDs, their total points in the respective course, and the percent of completion (one decimal place precision). If a course has no students, output only the name of the course and the column headers.</li>\r\n\t<li>Course details are available only after users enter <code class=\"java\">statistics</code>, they should not be available with the <code class=\"java\">back</code>. If users type in any course name before entering the <code class=\"java\">statistics</code> command, the program must respond with the <code class=\"java\">Unknown command!</code> message.</li>\r\n\t<li>Sort student lists by the total number of points in descending order and then by the ID in ascending order.</li>\r\n</ol>\r\n\r\n<h5 id=\"examples\">Examples</h5>\r\n\r\n<p>The greater-than symbol followed by a space (<code class=\"java\">&gt; </code>) represents the user input. Note that it's not part of the input.</p>\r\n\r\n<p><strong>Example 1:</strong><em> showing statistics with no data available</em></p>\r\n\r\n<pre><code class=\"language-no-highlight\">Learning Progress Tracker\r\n&gt; statistics\r\nType the name of a course to see details or 'back' to quit:\r\nMost popular: n/a\r\nLeast popular: n/a\r\nHighest activity: n/a\r\nLowest activity: n/a\r\nEasiest course: n/a\r\nHardest course: n/a\r\n&gt; java\r\nJava\r\nid\tpoints\tcompleted\r\n&gt; swing\r\nUnknown course.\r\n&gt; back\r\n&gt; exit\r\nBye!</code></pre>\r\n\r\n<p><strong>Example 2:</strong><em> showing statistics</em></p>\r\n\r\n<pre><code class=\"language-no-highlight\">Learning Progress Tracker\r\n&gt; add students\r\nEnter student credentials or 'back' to return:\r\n&gt; John Doe johnd@email.net\r\nThe student has been added.\r\n&gt; Jane Spark jspark@yahoo.com\r\nThe student has been added.\r\n&gt; back\r\nTotal 2 students have been added.\r\n&gt; list\r\nStudents:\r\n10000\r\n10001\r\n&gt; add points\r\nEnter an id and points or 'back' to return:\r\n&gt; 10000 8 7 7 5\r\nPoints updated.\r\n&gt; 10000 7 6 9 7\r\nPoints updated.\r\n&gt; 10000 6 5 5 0\r\nPoints updated.\r\n&gt; 10001 8 0 8 6\r\nPoints updated.\r\n&gt; 10001 7 0 0 0\r\nPoints updated.\r\n&gt; 10001 9 0 0 5\r\nPoints updated.\r\n&gt; back\r\n&gt; statistics\r\nType the name of a course to see details or 'back' to quit:\r\nMost popular: Java, Databases, Spring\r\nLeast popular: DSA\r\nHighest activity: Java\r\nLowest activity: DSA\r\nEasiest course: Java\r\nHardest course: Spring\r\n&gt; java\r\nJava\r\nid    points    completed\r\n10001 24        4.0%\r\n10000 21        3.5%\r\n&gt; dsa\r\nDSA\r\nid    points    completed\r\n10000 18        4.5%\r\n&gt; databases\r\nDatabases\r\nid    points    completed\r\n10000 21        4.4%\r\n10001 8\t        1.7%\r\n&gt; spring\r\nSpring\r\nid    points    completed\r\n10000 12        2.2%\r\n10001 11        2.0%\r\n&gt; back\r\n&gt; exit\r\nBye!</code></pre>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Learning Progress Tracker/Learning Progress Tracker/Retrieving statistics/task.html b/../Learning Progress Tracker/Learning Progress Tracker/Retrieving statistics/task.html
--- a/../Learning Progress Tracker/Learning Progress Tracker/Retrieving statistics/task.html	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../Learning Progress Tracker/Learning Progress Tracker/Retrieving statistics/task.html	(date 1648295810217)
@@ -23,7 +23,7 @@
 
 <p>One important thing. During statistics calculation, if multiple courses qualify for any of these categories, list the names of all such courses. If any course is already included in a category, it cannot be included in the opposite category. For example, if the Java Course is listed in the Highest Activity category, it cannot be listed in the Lowest Activity category.</p>
 
-<p>Look at the example above. The most popular course is Spring, the least popular course is Databases, the highest activity is Spring, the lowest activity is Databases, the easiest course is DSA, and the hardest course is Java:</p>
+<p>Look at the example above. The most popular course is Spring (2 entolled students), the least popular course is Databases (0 enrolled students), the highest activity is Spring (3 submissions), the lowest activity is Databases (0 submissions), the easiest course is DSA (average score is 8), and the hardest course is Java (average score is 4):</p>
 
 <pre><code class="language-no-highlight">Type the name of a course to see details or 'back' to quit:
 Most popular: Spring
Index: ../Learning Progress Tracker/Learning Progress Tracker/Notification service/task-info.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>type: edu\r\nfiles:\r\n- name: src/tracker/Main.java\r\n  visible: true\r\n  text: |\r\n    package tracker;\r\n\r\n    public class Main {\r\n        public static void main(String[] args) {\r\n            System.out.println(\"Hello, World!\");\r\n        }\r\n    }\r\n  learner_created: false\r\n- name: build.gradle\r\n  visible: true\r\n  text: |\r\n    repositories {\r\n        mavenCentral()\r\n    }\r\n\r\n    dependencies {\r\n        testImplementation 'org.junit.jupiter:junit-jupiter:5.7.1'\r\n        testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.7.1'\r\n    }\r\n\r\n    test {\r\n        useJUnitPlatform()\r\n    }\r\n  learner_created: false\r\n- name: test/tracker/SampleTest.java\r\n  visible: true\r\n  text: |\r\n    package tracker;\r\n\r\n    import org.junit.jupiter.api.Test;\r\n\r\n    import static org.junit.jupiter.api.Assertions.*;\r\n\r\n    public class SampleTest {\r\n\r\n        @Test\r\n        void test() {\r\n            assertEquals(5, 2 + 3);\r\n        }\r\n    }\r\n  learner_created: false\r\n- name: test/LearningProgressTrackerTest.java\r\n  visible: false\r\n  text: |\r\n    import org.hyperskill.hstest.dynamic.DynamicTest;\r\n    import org.hyperskill.hstest.exception.outcomes.WrongAnswer;\r\n    import org.hyperskill.hstest.stage.StageTest;\r\n    import org.hyperskill.hstest.testcase.CheckResult;\r\n    import org.hyperskill.hstest.testing.TestedProgram;\r\n\r\n    import java.util.ArrayList;\r\n    import java.util.Arrays;\r\n    import java.util.Collections;\r\n    import java.util.HashSet;\r\n    import java.util.List;\r\n    import java.util.Random;\r\n    import java.util.Set;\r\n    import java.util.function.Predicate;\r\n    import java.util.stream.Collectors;\r\n    import java.util.stream.IntStream;\r\n    import java.util.stream.Stream;\r\n\r\n    import static org.hyperskill.hstest.testing.expect.Expectation.expect;\r\n\r\n    public class LearningProgressTrackerTest extends StageTest<String> {\r\n        private static final Random rnd = new Random();\r\n\r\n        @DynamicTest(order = 1)\r\n        CheckResult testStartAndExit() {\r\n            TestedProgram main = new TestedProgram();\r\n            String output = main.start();\r\n            expect(output).toContain(1).lines();\r\n            if (incorrectString(output, \"Learning Progress Tracker\")) {\r\n                return CheckResult.wrong(\"When started, your program \" +\r\n                        \"should print \\\"Learning Progress Tracker\\\"\");\r\n            }\r\n\r\n            if (!main.isWaitingInput()) {\r\n                return CheckResult.wrong(\"After the start, your program should \" +\r\n                        \"be ready to accept commands from the user\");\r\n            }\r\n\r\n            output = main.execute(\"back\");\r\n            expect(output).toContain(1).lines();\r\n            if (!main.isWaitingInput()) {\r\n                return CheckResult.wrong(\"Your program should keep running after the 'back' \" +\r\n                        \"command is entered\");\r\n            }\r\n\r\n            if (anyMissingKeywords(output, \"enter\", \"exit\", \"program\")) {\r\n                return CheckResult.wrong(\"When 'back' command is entered your program \" +\r\n                        \"should print the hint \\\"Enter 'exit' to exit the program.\\\"\");\r\n            }\r\n\r\n            output = main.execute(\"exit\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"bye\")) {\r\n                return CheckResult.wrong(\"When the 'exit' command is entered, \" +\r\n                        \"your program should say bye to the user\");\r\n            }\r\n\r\n            if (!main.isFinished()) {\r\n                return CheckResult.wrong(\"After the 'exit' command has been entered, \" +\r\n                        \"your program should stop working\");\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 2, data = \"getBlankInput\")\r\n        CheckResult testBlankInput(String input) {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n\r\n            String output = main.execute(input);\r\n            expect(output).toContain(1).lines();\r\n            if (incorrectString(output, \"no input\")) {\r\n                return CheckResult.wrong(\"When the user enters an empty or blank \" +\r\n                        \"string, your program should print \\\"No input.\\\"\");\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 3, data = \"getUnknownCommands\")\r\n        CheckResult testUnknownCommands(String input) {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n\r\n            String output = main.execute(input);\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"unknown\", \"command\")) {\r\n                return CheckResult.wrong(\"When an unknown command is entered, your \" +\r\n                        \"program should display an error message: \\\"Unknown command!\\\"\");\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 4)\r\n        CheckResult testAddStudents1() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n\r\n            String output = main.execute(\"add students\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output,\r\n                    \"enter\", \"student\", \"credentials\", \"back\", \"return\")) {\r\n                return CheckResult.wrong(\"When 'add students' command is entered, your \" +\r\n                        \"program should display the prompt \\\"Enter student credentials or \" +\r\n                        \"'back' to return:\\\"\");\r\n            }\r\n\r\n            output = main.execute(\"exit\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"incorrect\", \"credentials\")) {\r\n                return CheckResult.wrong(\"Expected output: \\\"Incorrect credentials.\\\", \" +\r\n                        \"but your output was: \" + output);\r\n            }\r\n\r\n            output = main.execute(\"back\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"total\", \"0\", \"students\", \"added\")) {\r\n                return CheckResult.wrong(\"Expected: \\\"Total 0 students have been added.\\\", but \" +\r\n                        \"your output was: \" + output);\r\n            }\r\n\r\n            output = main.execute(\"back\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"enter\", \"exit\", \"program\")) {\r\n                return CheckResult.wrong(\"When 'back' command is entered your program \" +\r\n                        \"should stop waiting for student credentials\");\r\n            }\r\n\r\n            output = main.execute(\"exit\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"bye\")) {\r\n                return CheckResult.wrong(\"When the 'exit' command is entered, \" +\r\n                        \"your program should say bye to the user\");\r\n            }\r\n\r\n            if (!main.isFinished()) {\r\n                return CheckResult.wrong(\"After the 'exit' command has been entered, \" +\r\n                        \"your program should stop working\");\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 5)\r\n        CheckResult testAddStudents2() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n\r\n            main.execute(\"add students\");\r\n            for (String input : getCorrectCredentials()) {\r\n                String output = main.execute(input);\r\n                expect(output).toContain(1).lines();\r\n                if (anyMissingKeywords(output, \"student\", \"added\")) {\r\n                    return CheckResult.wrong(\"Expected output: \\\"The student has been added.\\\", but your \" +\r\n                            \"output was: \" + output);\r\n                }\r\n            }\r\n\r\n            String output = main.execute(\"back\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"total\", \"10\", \"students\", \"added\")) {\r\n                return CheckResult.wrong(\"Expected: \\\"Total 10 students have been added.\\\", but \" +\r\n                        \"your output was: \" + output);\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 6)\r\n        CheckResult testAddStudents3() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n            main.execute(\"add students\");\r\n\r\n            for (String[] args : getIncorrectCredentials()) {\r\n                String output = main.execute(args[0]);\r\n                expect(output).toContain(1).lines();\r\n                if (incorrectString(output, args[1])) {\r\n                    return CheckResult.wrong(\"Expected output: \\\"\" + args[1] + \"\\\", but your \" +\r\n                            \"output was: \" + output);\r\n                }\r\n            }\r\n\r\n            String output = main.execute(\"back\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"total\", \"0\", \"students\", \"added\")) {\r\n                return CheckResult.wrong(\"Expected: \\\"Total 0 students have been added.\\\", but \" +\r\n                        \"your output was: \" + output);\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 7)\r\n        CheckResult testFindAll1() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n            main.execute(\"add students\");\r\n            main.execute(\"back\");\r\n\r\n            String output = main.execute(\"list\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"no\", \"found\")) {\r\n                return CheckResult.wrong(\"Expected: \\\"No students found.\\\", but \" +\r\n                        \"your output was: \" + output);\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 8)\r\n        CheckResult testAddDoubles() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n            main.execute(\"add students\");\r\n\r\n            List<String> credentials = getRandomCredentials(12);\r\n            for (String arg : credentials) {\r\n                String output = main.execute(arg);\r\n                expect(output).toContain(1).lines();\r\n                if (anyMissingKeywords(output, \"student\", \"added\")) {\r\n                    return CheckResult.wrong(\"Expected output: \\\"The student has been added.\\\", but your \" +\r\n                            \"output was: \" + output);\r\n                }\r\n\r\n                output = main.execute(arg);\r\n                expect(output).toContain(1).lines();\r\n                if (anyMissingKeywords(output, \"this\", \"email\", \"already\", \"taken\")) {\r\n                    return CheckResult.wrong(\"Expected output: \\\"This email is already taken.\\\", but your \" +\r\n                            \"output was: \" + output);\r\n                }\r\n            }\r\n\r\n            String output = main.execute(\"back\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"total\", String.valueOf(credentials.size()), \"students\", \"added\")) {\r\n                return CheckResult.wrong(\"Expected: \\\"Total \" + credentials.size() + \"students have been added.\\\", but \" +\r\n                        \"your output was: \" + output);\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 9)\r\n        CheckResult testFindAll2() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n            main.execute(\"add students\");\r\n\r\n            List<String> credentials = getRandomCredentials(12);\r\n            for (String arg : credentials) {\r\n                String output = main.execute(arg);\r\n                expect(output).toContain(1).lines();\r\n                if (anyMissingKeywords(output, \"student\", \"added\")) {\r\n                    main.stop();\r\n                    return CheckResult.wrong(\"Expected output: \\\"The student has been added.\\\", but your \" +\r\n                            \"output was: \" + output);\r\n                }\r\n            }\r\n\r\n            String output = main.execute(\"back\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"total\", String.valueOf(credentials.size()), \"students\", \"added\")) {\r\n                return CheckResult.wrong(\"Expected: \\\"Total \" + credentials.size() + \"students have been added.\\\", but \" +\r\n                        \"your output was: \" + output);\r\n            }\r\n\r\n            output = main.execute(\"list\");\r\n            List<String> lines = expect(output).toContain(credentials.size() + 1).lines();\r\n            if (!lines.get(0).toLowerCase().contains(\"students\")) {\r\n                return CheckResult.wrong(\"Expected the header \\\"Students:\\\" but your first line was: \" + lines.get(0));\r\n            }\r\n\r\n            List<String> ids = parseIds(lines);\r\n            Set<String> uniqueIds = new HashSet<>(ids);\r\n            if (uniqueIds.size() != ids.size()) {\r\n                return CheckResult.wrong(\"Expected \" + ids.size() +\r\n                        \" unique IDs but found only \" + uniqueIds.size());\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 10)\r\n        CheckResult testBackFromAddPoints() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n\r\n            String output = main.execute(\"add points\");\r\n            expect(output).toContain().lines();\r\n            if (anyMissingKeywords(output, \"enter\", \"id\", \"points\", \"back\", \"return\")) {\r\n                return CheckResult.wrong(\"When 'add points' command is entered, your program should print \" +\r\n                        \"\\\"Enter an id and points or 'back' to return:\\\" but your output was: \" + output);\r\n            }\r\n\r\n            main.execute(\"back\");\r\n            output = main.execute(\"back\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"enter\", \"exit\", \"program\")) {\r\n                return CheckResult.wrong(\"When 'back' command is entered your program \" +\r\n                        \"should stop waiting for student id and points\");\r\n            }\r\n\r\n            output = main.execute(\"exit\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"bye\")) {\r\n                return CheckResult.wrong(\"When the 'exit' command is entered, \" +\r\n                        \"your program should say bye to the user\");\r\n            }\r\n\r\n            if (!main.isFinished()) {\r\n                return CheckResult.wrong(\"After the 'exit' command has been entered, \" +\r\n                        \"your program should stop working\");\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 11)\r\n        CheckResult testStudentPoints1() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n            main.execute(\"add students\");\r\n\r\n            List<String> credentials = getRandomCredentials(6);\r\n            for (String arg : credentials) {\r\n                main.execute(arg);\r\n            }\r\n\r\n            main.execute(\"back\");\r\n            String output = main.execute(\"list\");\r\n            List<String> lines = expect(output).toContain().lines();\r\n            List<String> ids = parseIds(lines);\r\n\r\n            main.execute(\"add points\");\r\n            String[] points = getIncorrectPoints();\r\n            for (String point : points) {\r\n                output = main.execute(ids.get(0) + \" \" + point);\r\n                expect(output).toContain().lines();\r\n                if (anyMissingKeywords(output, \"incorrect\", \"format\")) {\r\n                    return CheckResult.wrong(\"Expected output: \\\"Incorrect points format.\\\", but your output was: \" + output);\r\n                }\r\n            }\r\n\r\n            output = main.execute(\"imsurethereisnosuchstudentid 1 1 1 1\");\r\n            expect(output).toContain().lines();\r\n            if (anyMissingKeywords(output, \"no\", \"student\", \"found\") ||\r\n                    !output.contains(\"imsurethereisnosuchstudentid\")) {\r\n                return CheckResult.wrong(\"Expected output was: \\\"No student is found \" +\r\n                        \"for id=imsurethereisnosuchstudentid.\\\" but your output was: \" + output);\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 12)\r\n        CheckResult testStudentPoints2() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n            main.execute(\"add students\");\r\n\r\n            List<String> credentials = getRandomCredentials(6);\r\n            for (String arg : credentials) {\r\n                main.execute(arg);\r\n            }\r\n            main.execute(\"back\");\r\n\r\n            String output = main.execute(\"list\");\r\n            List<String> lines = expect(output).toContain().lines();\r\n            List<String> ids = parseIds(lines);\r\n\r\n            main.execute(\"add points\");\r\n            String[] points = getCorrectPoints(6);\r\n\r\n            for (int i = 0; i < points.length; i++) {\r\n                output = main.execute(ids.get(i) + \" \" + points[i]);\r\n                expect(output).toContain(1).lines();\r\n                if (anyMissingKeywords(output, \"points\", \"updated\")) {\r\n                    return CheckResult.wrong(\"Expected \\\"Points updated.\\\" but your output was \" + output);\r\n                }\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 13)\r\n        CheckResult testBackFromFind() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n\r\n            String output = main.execute(\"find\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"enter\", \"id\", \"back\", \"return\")) {\r\n                return CheckResult.wrong(\"When 'find' command is entered, you program should \" +\r\n                        \"print \\\"Enter an id or 'back' to return:\\\", but your output was: \" + output);\r\n            }\r\n\r\n            main.execute(\"back\");\r\n            output = main.execute(\"back\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"enter\", \"exit\", \"program\")) {\r\n                return CheckResult.wrong(\"When 'back' command is entered your program \" +\r\n                        \"should stop waiting for student id\");\r\n            }\r\n\r\n            output = main.execute(\"exit\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"bye\")) {\r\n                return CheckResult.wrong(\"When the 'exit' command is entered, \" +\r\n                        \"your program should say bye to the user\");\r\n            }\r\n\r\n            if (!main.isFinished()) {\r\n                return CheckResult.wrong(\"After the 'exit' command has been entered, \" +\r\n                        \"your program should stop working\");\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 14)\r\n        CheckResult testFindByID() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n            main.execute(\"add students\");\r\n\r\n            List<String> credentials = getRandomCredentials(5);\r\n            for (String arg : credentials) {\r\n                main.execute(arg);\r\n            }\r\n            main.execute(\"back\");\r\n\r\n            String output = main.execute(\"list\");\r\n            List<String> lines = expect(output).toContain().lines();\r\n            List<String> ids = parseIds(lines);\r\n\r\n            main.execute(\"add points\");\r\n            for (int i = 0; i < ids.size(); i++) {\r\n                main.execute(String.format(\"%s %d %d %d %d\", ids.get(i), i, i, i, i));\r\n                main.execute(String.format(\"%s %d %d %d %d\", ids.get(i), i, i, i, i));\r\n            }\r\n\r\n            main.execute(\"back\");\r\n            output = main.execute(\"find\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"enter\", \"id\", \"back\", \"return\")) {\r\n                return CheckResult.wrong(\"When 'find' command is entered, you program should \" +\r\n                        \"print \\\"Enter an id or 'back' to return:\\\", but your output was: \" + output);\r\n            }\r\n\r\n            for (int i = 0; i < ids.size(); i++) {\r\n                output = main.execute(ids.get(i));\r\n                expect(output).toContain(1).lines();\r\n                String expected = String.format(\r\n                        \"%s points: Java=%d; DSA=%d; Databases=%d; Spring=%d\",\r\n                        ids.get(i), i * 2, i * 2, i * 2, i * 2\r\n                );\r\n                if (incorrectString(output, expected)) {\r\n                    return CheckResult.wrong(\"Expected output: \" + expected +\r\n                            \", but your output was: \" + output);\r\n                }\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 15)\r\n        CheckResult testBackFromStatistics() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n\r\n            String output = main.execute(\"statistics\");\r\n            main.execute(\"back\");\r\n            output = main.execute(\"back\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"enter\", \"exit\", \"program\")) {\r\n                return CheckResult.wrong(\"When 'back' command is entered your program \" +\r\n                        \"should stop waiting for student id\");\r\n            }\r\n\r\n            output = main.execute(\"exit\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"bye\")) {\r\n                return CheckResult.wrong(\"When the 'exit' command is entered, \" +\r\n                        \"your program should say bye to the user\");\r\n            }\r\n\r\n            if (!main.isFinished()) {\r\n                return CheckResult.wrong(\"After the 'exit' command has been entered, \" +\r\n                        \"your program should stop working\");\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 16)\r\n        CheckResult testStatistics1() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n\r\n            String output = main.execute(\"statistics\");\r\n            String[] lines = Arrays.stream(output.split(\"\\n\"))\r\n                    .filter(Predicate.not(String::isBlank))\r\n                    .toArray(String[]::new);\r\n\r\n            if (anyMissingKeywords(lines[0], \"course\", \"details\", \"back\", \"quit\")) {\r\n                return CheckResult.wrong(\"When the \\\"statistics\\\" command is entered, your \" +\r\n                        \"program must print: \\\"Type the name of a course to see details or 'back' \" +\r\n                        \"to quit:\\\", but your output was: \" + lines[0]);\r\n            }\r\n\r\n            if (lines.length < 7) {\r\n                return CheckResult.wrong(\"Your program should print a header and 6 \" +\r\n                        \"categories, but you printed only \" + lines.length + \" lines\");\r\n            }\r\n\r\n            List<String> categories = List.of(\"Most popular: n/a\", \"Least popular: n/a\",\r\n                    \"Highest activity: n/a\", \"Lowest activity: n/a\", \"Easiest course: n/a\",\r\n                    \"Hardest course: n/a\");\r\n            for (int i = 1; i < lines.length; i++) {\r\n                if (incorrectString(lines[i], categories.get(i - 1))) {\r\n                    return CheckResult.wrong(\"Expected: \" + categories.get(i - 1) +\r\n                            \", but your output was \" + lines[i]);\r\n                }\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 17)\r\n        CheckResult testStatistics2() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n            main.execute(\"statistics\");\r\n\r\n            List<String> courses = List.of(\"Java\", \"DSA\", \"Databases\", \"Spring\");\r\n            for (String course : courses) {\r\n                String output = main.execute(course);\r\n                String[] lines = output.split(\"\\n\");\r\n                if (lines.length < 2) {\r\n                    return CheckResult.wrong(\"Expected 2 lines, but your output was only \" + lines.length + \" lines.\");\r\n                }\r\n\r\n                if (incorrectString(lines[0], course.toLowerCase())) {\r\n                    return CheckResult.wrong(\"Your first line should be \" + course + \", but your output was \" + lines[0]);\r\n                }\r\n\r\n                if (anyMissingKeywords(lines[1], \"id\", \"points\", \"completed\")) {\r\n                    return CheckResult.wrong(\"Your second line should be \\\"id\\tpoints\\tcompleted\\\", \" +\r\n                            \"but your output was \" + lines[1]);\r\n                }\r\n            }\r\n\r\n            List<String> unknown = Arrays.stream(getUnknownCommands())\r\n                    .filter(str -> courses.stream().noneMatch(it -> it.trim().equalsIgnoreCase(str)))\r\n                    .collect(Collectors.toList());\r\n\r\n            for (String course : unknown) {\r\n                String output = main.execute(course);\r\n                if (incorrectString(output, \"unknown course\")) {\r\n                    return CheckResult.wrong(\"Expected output: \\\"Unknown course.\\\", but your output was: \" + output);\r\n                }\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 18)\r\n        CheckResult testStatistics3() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n            main.execute(\"statistics\");\r\n\r\n            main.execute(\"back\");\r\n            if (!main.isWaitingInput()) {\r\n                return CheckResult.wrong(\"Your program should keep running after the 'back' \" +\r\n                        \"command is entered\");\r\n            }\r\n\r\n            String output = main.execute(\"back\");\r\n            if (anyMissingKeywords(output, \"enter\", \"exit\", \"program\")) {\r\n                return CheckResult.wrong(\"When 'back' command is entered your program \" +\r\n                        \"should print the hint \\\"Enter 'exit' to exit the program.\\\"\");\r\n            }\r\n\r\n            output = main.execute(\"exit\");\r\n            if (anyMissingKeywords(output, \"bye\")) {\r\n                return CheckResult.wrong(\"When the 'exit' command is entered, \" +\r\n                        \"your program should say bye to the user\");\r\n            }\r\n\r\n            if (!main.isFinished()) {\r\n                return CheckResult.wrong(\"After the 'exit' command has been entered, \" +\r\n                        \"your program should stop working\");\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 19)\r\n        CheckResult testCategories1() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n            main.execute(\"add students\");\r\n\r\n            getRandomCredentials(4).forEach(main::execute);\r\n\r\n            main.execute(\"back\");\r\n            String output = main.execute(\"list\");\r\n            List<String> lines = expect(output).toContain().lines();\r\n            List<String> ids = parseIds(lines);\r\n\r\n            main.execute(\"add points\");\r\n            for (String id : ids) {\r\n                main.execute(String.format(\"%s 5 4 3 1\", id));\r\n            }\r\n\r\n            main.execute(\"back\");\r\n            lines = expect(main.execute(\"statistics\")).toContain().lines();\r\n\r\n            if (anyMissingKeywords(lines.get(1), \"java\", \"dsa\", \"databases\", \"spring\")) {\r\n                return CheckResult.wrong(\"Expected most popular: Java, DSA, Databases, Spring, \" +\r\n                        \"but your output was: \" + lines.get(1));\r\n            }\r\n\r\n            if (!lines.get(2).toLowerCase().contains(\"n/a\")) {\r\n                return CheckResult.wrong(\"Expected least popular: n/a, \" +\r\n                        \"but your output was: \" + lines.get(2));\r\n            }\r\n\r\n            if (anyMissingKeywords(lines.get(3), \"java\", \"dsa\", \"databases\", \"spring\")) {\r\n                return CheckResult.wrong(\"Expected top activity: Java, DSA, Databases, Spring, \" +\r\n                        \"but your output was: \" + lines.get(3));\r\n            }\r\n\r\n            if (!lines.get(4).contains(\"n/a\")) {\r\n                return CheckResult.wrong(\"Expected lowest activity: n/a, \" +\r\n                        \"but your output was: \" + lines.get(4));\r\n            }\r\n\r\n            if (anyMissingKeywords(lines.get(5), \"java\")) {\r\n                return CheckResult.wrong(\"Expected easiest course: Java, \" +\r\n                        \"but your output was: \" + lines.get(5));\r\n            }\r\n\r\n            if (anyMissingKeywords(lines.get(6), \"Spring\")) {\r\n                return CheckResult.wrong(\"Expected hardest course: Spring, \" +\r\n                        \"but your output was: \" + lines.get(6));\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 20)\r\n        CheckResult testCategories2() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n            main.execute(\"add students\");\r\n\r\n            getRandomCredentials(4).forEach(main::execute);\r\n\r\n            main.execute(\"back\");\r\n            List<String> lines = expect(main.execute(\"list\")).toContain().lines();\r\n            List<String> ids = parseIds(lines);\r\n\r\n            main.execute(\"add points\");\r\n            main.execute(String.format(\"%s 10 10 10 10\", ids.get(0)));\r\n            main.execute(String.format(\"%s 5 5 5 5\", ids.get(1)));\r\n            main.execute(String.format(\"%s 5 5 5 5\", ids.get(2)));\r\n            main.execute(String.format(\"%s 2 2 2 2\", ids.get(3)));\r\n\r\n            main.execute(\"back\");\r\n            main.execute(\"statistics\");\r\n\r\n            List<String> linesJava = expect(main.execute(\"Java\")).toContain(6).lines();\r\n            List<String> linesDsa = expect(main.execute(\"DSA\")).toContain(6).lines();\r\n            List<String> linesDb = expect(main.execute(\"Databases\")).toContain(6).lines();\r\n            List<String> linesSpring = expect(main.execute(\"Spring\")).toContain(6).lines();\r\n\r\n            if (!linesJava.get(2).matches(\".+\\\\s+10\\\\s+1\\\\.7\\\\s?%.*\") ||\r\n                    !linesJava.get(3).matches(\".+\\\\s+5\\\\s+0\\\\.8\\\\s?%.*\") ||\r\n                    !linesJava.get(4).matches(\".+\\\\s+5\\\\s+0\\\\.8\\\\s?%.*\") ||\r\n                    !linesJava.get(5).matches(\".+\\\\s+2\\\\s+0\\\\.3\\\\s?%.*\") ||\r\n                    !linesJava.get(2).startsWith(ids.get(0)) ||\r\n                    !linesJava.get(3).startsWith(ids.get(1)) && !linesJava.get(3).startsWith(ids.get(2)) ||\r\n                    !linesJava.get(4).startsWith(ids.get(1)) && !linesJava.get(4).startsWith(ids.get(2)) ||\r\n                    !linesJava.get(5).startsWith(ids.get(3)) ||\r\n                    linesJava.get(3).startsWith(ids.get(1)) && ids.get(1).compareTo(ids.get(2)) >= 0 ||\r\n                    linesJava.get(3).startsWith(ids.get(2)) && ids.get(2).compareTo(ids.get(1)) >= 0) {\r\n                return CheckResult.wrong(\"Your Java student list either contains incorrect data or is incorrectly sorted\");\r\n            }\r\n\r\n            if (!linesDsa.get(2).matches(\".+\\\\s+10\\\\s+2\\\\.5\\\\s?%.*\") ||\r\n                    !linesDsa.get(3).matches(\".+\\\\s+5\\\\s+1\\\\.3\\\\s?%.*\") ||\r\n                    !linesDsa.get(4).matches(\".+\\\\s+5\\\\s+1\\\\.3\\\\s?%.*\") ||\r\n                    !linesDsa.get(5).matches(\".+\\\\s+2\\\\s+0\\\\.5\\\\s?%.*\") ||\r\n                    !linesDsa.get(2).startsWith(ids.get(0)) ||\r\n                    !linesDsa.get(3).startsWith(ids.get(1)) && !linesDsa.get(3).startsWith(ids.get(2)) ||\r\n                    !linesDsa.get(4).startsWith(ids.get(1)) && !linesDsa.get(4).startsWith(ids.get(2)) ||\r\n                    !linesDsa.get(5).startsWith(ids.get(3)) ||\r\n                    linesDsa.get(3).startsWith(ids.get(1)) && ids.get(1).compareTo(ids.get(2)) >= 0 ||\r\n                    linesDsa.get(3).startsWith(ids.get(2)) && ids.get(2).compareTo(ids.get(1)) >= 0) {\r\n                return CheckResult.wrong(\"Your DSA student list either contains incorrect data or is incorrectly sorted\");\r\n            }\r\n\r\n            if (!linesDb.get(2).matches(\".+\\\\s+10\\\\s+2\\\\.1\\\\s?%.*\") ||\r\n                    !linesDb.get(3).matches(\".+\\\\s+5\\\\s+1\\\\.0\\\\s?%.*\") ||\r\n                    !linesDb.get(4).matches(\".+\\\\s+5\\\\s+1\\\\.0\\\\s?%.*\") ||\r\n                    !linesDb.get(5).matches(\".+\\\\s+2\\\\s+0\\\\.4\\\\s?%.*\") ||\r\n                    !linesDb.get(2).startsWith(ids.get(0)) ||\r\n                    !linesDb.get(3).startsWith(ids.get(1)) && !linesDb.get(3).startsWith(ids.get(2)) ||\r\n                    !linesDb.get(4).startsWith(ids.get(1)) && !linesDb.get(4).startsWith(ids.get(2)) ||\r\n                    !linesDb.get(5).startsWith(ids.get(3)) ||\r\n                    linesDb.get(3).startsWith(ids.get(1)) && ids.get(1).compareTo(ids.get(2)) >= 0 ||\r\n                    linesDb.get(3).startsWith(ids.get(2)) && ids.get(2).compareTo(ids.get(1)) >= 0) {\r\n                return CheckResult.wrong(\"Your Databases student list either contains incorrect data \" +\r\n                        \"or is incorrectly sorted\");\r\n            }\r\n\r\n            if (!linesSpring.get(2).matches(\".+\\\\s+10\\\\s+1\\\\.8\\\\s?%.*\") ||\r\n                    !linesSpring.get(3).matches(\".+\\\\s+5\\\\s+0\\\\.9\\\\s?%.*\") ||\r\n                    !linesSpring.get(4).matches(\".+\\\\s+5\\\\s+0\\\\.9\\\\s?%.*\") ||\r\n                    !linesSpring.get(5).matches(\".+\\\\s+2\\\\s+0\\\\.4\\\\s?%.*\") ||\r\n                    !linesSpring.get(2).startsWith(ids.get(0)) ||\r\n                    !linesSpring.get(3).startsWith(ids.get(1)) && !linesSpring.get(3).startsWith(ids.get(2)) ||\r\n                    !linesSpring.get(4).startsWith(ids.get(1)) && !linesSpring.get(4).startsWith(ids.get(2)) ||\r\n                    !linesSpring.get(5).startsWith(ids.get(3)) ||\r\n                    linesSpring.get(3).startsWith(ids.get(1)) && ids.get(1).compareTo(ids.get(2)) >= 0 ||\r\n                    linesSpring.get(3).startsWith(ids.get(2)) && ids.get(2).compareTo(ids.get(1)) >= 0) {\r\n                return CheckResult.wrong(\"Your Spring student list either contains incorrect data \" +\r\n                        \"or is incorrectly sorted\");\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 21)\r\n        CheckResult testCategories3() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n            main.execute(\"add students\");\r\n\r\n            main.execute(\"John Doe johnd@email.net\");\r\n            main.execute(\"Jane Spark jspark@yahoo.com\");\r\n            main.execute(\"back\");\r\n\r\n            List<String> lines = expect(main.execute(\"list\")).toContain().lines();\r\n            List<String> ids = parseIds(lines);\r\n\r\n            main.execute(\"add points\");\r\n            main.execute(String.format(\"%s 8 7 7 5\", ids.get(0)));\r\n            main.execute(String.format(\"%s 7 6 9 7\", ids.get(0)));\r\n            main.execute(String.format(\"%s 6 5 5 0\", ids.get(0)));\r\n            main.execute(String.format(\"%s 8 0 8 6\", ids.get(1)));\r\n            main.execute(String.format(\"%s 7 0 0 0\", ids.get(1)));\r\n            main.execute(String.format(\"%s 9 0 0 5\", ids.get(1)));\r\n\r\n            main.execute(\"back\");\r\n            main.execute(\"statistics\");\r\n\r\n            List<String> linesJava = expect(main.execute(\"Java\")).toContain(4).lines();\r\n            List<String> linesDsa = expect(main.execute(\"DSA\")).toContain(3).lines();\r\n            List<String> linesDb = expect(main.execute(\"Databases\")).toContain(4).lines();\r\n            List<String> linesSpring = expect(main.execute(\"Spring\")).toContain(4).lines();\r\n\r\n            if (!linesJava.get(2).matches(\".+\\\\s+24\\\\s+4\\\\.0\\\\s?%.*\") ||\r\n                    !linesJava.get(3).matches(\".+\\\\s+21\\\\s+3\\\\.5\\\\s?%.*\") ||\r\n                    !linesJava.get(2).startsWith(ids.get(1)) || !linesJava.get(3).startsWith(ids.get(0))) {\r\n                return CheckResult.wrong(\"Your Java student list either contains incorrect data or is incorrectly sorted\");\r\n            }\r\n\r\n            if (!linesDsa.get(2).matches(\".+\\\\s+18\\\\s+4\\\\.5\\\\s?%.*\") || !linesDsa.get(2).startsWith(ids.get(0))) {\r\n                return CheckResult.wrong(\"Your DSA student list either contains incorrect data or is incorrectly sorted\");\r\n            }\r\n\r\n            if (!linesDb.get(2).matches(\".+\\\\s+21\\\\s+4\\\\.4\\\\s?%.*\") ||\r\n                    !linesDb.get(3).matches(\".+\\\\s+8\\\\s+1\\\\.7\\\\s?%.*\") ||\r\n                    !linesDb.get(2).startsWith(ids.get(0)) || !linesDb.get(3).startsWith(ids.get(1))) {\r\n                return CheckResult.wrong(\"Your Databases student list either contains incorrect data \" +\r\n                        \"or is incorrectly sorted\");\r\n            }\r\n\r\n            if (!linesSpring.get(2).matches(\".+\\\\s+12\\\\s+2\\\\.2\\\\s?%.*\") ||\r\n                    !linesSpring.get(3).matches(\".+\\\\s+11\\\\s+2\\\\.0\\\\s?%.*\") ||\r\n                    !linesSpring.get(2).startsWith(ids.get(0)) || !linesSpring.get(3).startsWith(ids.get(1))) {\r\n                return CheckResult.wrong(\"Your Spring student list either contains incorrect data \" +\r\n                        \"or is incorrectly sorted\");\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 22)\r\n        CheckResult testNotification1() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n\r\n            List<String> output = expect(main.execute(\"notify\")).toContain(1).lines();\r\n            if (output.stream()\r\n                    .map(String::toLowerCase)\r\n                    .allMatch(str -> anyMissingKeywords(str, \"total\", \"0\", \"notified\"))) {\r\n                return CheckResult.wrong(\"Expected output was \\\"Total 0 students have been notified.\\\", \" +\r\n                        \"but your output was: \" + String.join(\"\\n\", output));\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 23)\r\n        CheckResult testNotification2() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n\r\n            main.execute(\"add students\");\r\n            main.execute(\"John Doe johnd@email.net\");\r\n            main.execute(\"Jane Spark jspark@yahoo.com\");\r\n            main.execute(\"back\");\r\n\r\n            List<String> lines = expect(main.execute(\"list\")).toContain().lines();\r\n            List<String> ids = parseIds(lines);\r\n\r\n            main.execute(\"add points\");\r\n            main.execute(String.format(\"%s 600 400 0 0\", ids.get(0)));\r\n            main.execute(\"back\");\r\n\r\n            List<String> output = expect(main.execute(\"notify\")).toContain(7).lines();\r\n\r\n            if (!output.get(0).toLowerCase().startsWith(\"to:\") ||\r\n                    !output.get(0).toLowerCase().contains(\"johnd@email.net\") ||\r\n                    !output.get(1).toLowerCase().startsWith(\"re:\") ||\r\n                    anyMissingKeywords(output.get(1), \"learning\", \"progress\") ||\r\n                    anyMissingKeywords(output.get(2), \"john\", \"doe\", \"accomplished\") ||\r\n                    !output.get(2).toLowerCase().contains(\"java\") && !output.get(5).toLowerCase().contains(\"java\")) {\r\n                return CheckResult.wrong(\"You program should have printed the following:\\nTo: johnd@email.net\\n\" +\r\n                        \"Re: Your Learning Progress\\nHello, John Doe! You have accomplished our Java course!\\n\" +\r\n                        \"but your output was: \\n\" + output.stream().limit(3).collect(Collectors.joining(\"\\n\")));\r\n            }\r\n\r\n            if (!output.get(3).toLowerCase().startsWith(\"to:\") ||\r\n                    !output.get(3).toLowerCase().contains(\"johnd@email.net\") ||\r\n                    !output.get(4).toLowerCase().startsWith(\"re:\") ||\r\n                    anyMissingKeywords(output.get(4), \"learning\", \"progress\") ||\r\n                    anyMissingKeywords(output.get(5), \"john\", \"doe\", \"accomplished\", \"course\") ||\r\n                    !output.get(5).toLowerCase().contains(\"dsa\") && !output.get(2).toLowerCase().contains(\"dsa\")) {\r\n                return CheckResult.wrong(\"You program should have printed the following:\\nTo: johnd@email.net\\n\" +\r\n                        \"Re: Your Learning Progress\\nHello, John Doe! You have accomplished our DSA course!\\n\" +\r\n                        \"but your output was: \\n\" + output.stream().limit(3).collect(Collectors.joining(\"\\n\")));\r\n            }\r\n\r\n            if (anyMissingKeywords(output.get(6).toLowerCase(), \"total\", \"1\", \"notified\")) {\r\n                return CheckResult.wrong(\"Expected output was \\\"Total 1 student has been notified.\\\", but your output was: \\n\" +\r\n                        String.join(\"\\n\", output));\r\n            }\r\n\r\n            if (output.stream().map(String::toLowerCase).anyMatch(str ->\r\n                    str.contains(\"jane\") || str.contains(\"spark\") || str.contains(\"jspark@yahoo.com\"))) {\r\n                return CheckResult.wrong(\"Your notification should not mention Jane Spark\");\r\n            }\r\n\r\n            output = expect(main.execute(\"notify\")).toContain(1).lines();\r\n            if (output.stream()\r\n                    .map(String::toLowerCase)\r\n                    .allMatch(str -> anyMissingKeywords(str, \"total\", \"0\", \"notified\"))) {\r\n                return CheckResult.wrong(\"Expected output was \\\"Total 0 students have been notified\\\", \" +\r\n                        \"but your output was: \" + String.join(\"\\n\", output));\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        private boolean anyMissingKeywords(String output, String... keywords) {\r\n            List<String> tokens = Arrays.asList(\r\n                    output.trim().toLowerCase().split(\"\\\\W+\")\r\n            );\r\n\r\n            return !tokens.containsAll(Arrays.stream(keywords)\r\n                    .map(String::toLowerCase)\r\n                    .collect(Collectors.toList()));\r\n        }\r\n\r\n        private boolean incorrectString(String output, String model) {\r\n            String normalizedOutput = output.replaceAll(\"\\\\W+\", \"\").toLowerCase();\r\n            String normalizedModel = model.replaceAll(\"\\\\W+\", \"\").toLowerCase();\r\n\r\n            return !normalizedOutput.contains(normalizedModel);\r\n        }\r\n\r\n        private String[] getBlankInput() {\r\n            return new String[]{\"\", \"  \", \"\\t\", \" \\t\"};\r\n        }\r\n\r\n        private String[] getUnknownCommands() {\r\n            return new String[]{\"abc\", \"quit\", \"  brexit \", \"exi  t\", \"?\", \"break\",\r\n                    \"-exit\", \"Ctrl+C\", \"exit please\", \":q\", \"java\", \"spring\", \"dsa\", \"databases\"};\r\n        }\r\n\r\n        private String[] getCorrectCredentials() {\r\n            return new String[]{\"John Smith jsmith@hotmail.com\", \"Anny Doolittle anny.md@mail.edu\",\r\n                    \"Jean-Claude O'Connor jcda123@google.net\", \"Mary Emelianenko 125367at@zzz90.z9\",\r\n                    \"Al Owen u15da125@a1s2f4f7.a1c2c5s4\", \"Robert Jemison Van de Graaff robertvdgraaff@mit.edu\",\r\n                    \"Ed Eden a1@a1.a1\", \"na'me s-u ii@ii.ii\", \"n'a me su aa-b'b ab@ab.ab\", \"nA me 1@1.1\"};\r\n        }\r\n\r\n        private String[][] getIncorrectCredentials() {\r\n            return new String[][]{\r\n                    {\"\", \"Incorrect credentials\"}, {\" \\t\", \"Incorrect credentials.\"},\r\n                    {\"name surname\", \"Incorrect credentials.\"},\r\n                    {\"n surname email@email.xyz\", \"Incorrect first name.\"},\r\n                    {\"'name surname email@email.xyz\", \"Incorrect first name.\"},\r\n                    {\"-name surname email@email.xyz\", \"Incorrect first name.\"},\r\n                    {\"name- surname email@email.xyz\", \"Incorrect first name.\"},\r\n                    {\"name' surname email@email.xyz\", \"Incorrect first name.\"},\r\n                    {\"nam-'e surname email@email.xyz\", \"Incorrect first name.\"},\r\n                    {\"na'-me surname email@email.xyz\", \"Incorrect first name.\"},\r\n                    {\"na--me surname email@email.xyz\", \"Incorrect first name.\"},\r\n                    {\"na''me surname email@email.xyz\", \"Incorrect first name.\"},\r\n                    {\"námé surname email@email.xyz\", \"Incorrect first name.\"},\r\n                    {\"name s email@email.xyz\", \"Incorrect last name.\"},\r\n                    {\"name -surname email@email.xyz\", \"Incorrect last name.\"},\r\n                    {\"name 'surname email@email.xyz\", \"Incorrect last name.\"},\r\n                    {\"name surnam''e email@email.xyz\", \"Incorrect last name.\"},\r\n                    {\"name surn--ame email@email.xyz\", \"Incorrect last name.\"},\r\n                    {\"name s'-urname email@email.xyz\", \"Incorrect last name.\"},\r\n                    {\"name su-'rname email@email.xyz\", \"Incorrect last name.\"},\r\n                    {\"name surname- email@email.xyz\", \"Incorrect last name.\"},\r\n                    {\"name surname' email@email.xyz\", \"Incorrect last name.\"},\r\n                    {\"name surnámé email@email.xyz\", \"Incorrect last name.\"},\r\n                    {\"name surname emailemail.xyz\", \"Incorrect email.\"},\r\n                    {\"name surname email@emailxyz\", \"Incorrect email.\"},\r\n                    {\"name surname email@e@mail.xyz\", \"Incorrect email.\"},\r\n            };\r\n        }\r\n\r\n        private String[] getIncorrectPoints() {\r\n            return new String[]{\"\", \"-1 1 1 1\", \"1 1 2 A\", \"1 1 1\", \"1 1 1 1 1\"};\r\n        }\r\n\r\n        private String[] getCorrectPoints(int n) {\r\n            return Stream.generate(String::new)\r\n                    .limit(n)\r\n                    .map(it -> String.format(\"%d %d %d %d\", nextPoint(), nextPoint(), nextPoint(), nextPoint()))\r\n                    .toArray(String[]::new);\r\n        }\r\n\r\n        private int nextPoint() {\r\n            return rnd.nextInt(10) + 1;\r\n        }\r\n\r\n        private List<String> parseIds(List<String> lines) {\r\n            try {\r\n                return lines.stream()\r\n                        .skip(1)\r\n                        .map(String::trim)\r\n                        .collect(Collectors.toList());\r\n            } catch (Exception e) {\r\n                throw new WrongAnswer(\"Error occurred while parsing your output \" + e.getMessage());\r\n            }\r\n        }\r\n\r\n        private List<String> generateNames(int n) {\r\n            List<String> names = List.of(\"Shoshana Utica\", \"Marisa Firman\", \"Gwenette Anagnos\", \"Charlena Girardo\",\r\n                    \"Alexina Belcher\", \"Karee Antoinetta\", \"Dolley Panther\", \"Elysha Quinlan\", \"Trixie Winer\",\r\n                    \"Ricki Trovillion\", \"Amye Uriisa\", \"Hedwig Wally\", \"Gwenette Kironde\", \"Jermaine Naaman\",\r\n                    \"Olga Rosanne\", \"Annecorinne Ause\", \"Aurie Dorisa\", \"Van Fawnia\", \"Carmella Campman\",\r\n                    \"Francesca Francis\", \"Elwira Florrie\", \"Nonna Miko\", \"Natka Herculie\", \"Roxi Hett\", \"Brandise Hardan\",\r\n                    \"Toby Bleier\", \"Dalia Gleeson\", \"Emelia Annnora\", \"Beatrisa Jegar\", \"Barbara-Anne Chicky\",\r\n                    \"Ann Agnella\", \"Lebbie Alabaster\", \"Leola Whelan\", \"Starlin Griz\", \"Anjanette Uis\", \"Tasha Chem\");\r\n\r\n            List<String> selectedNames = new ArrayList<>(names);\r\n            Collections.shuffle(selectedNames);\r\n            return selectedNames.stream().limit(n).collect(Collectors.toList());\r\n        }\r\n\r\n        private List<String> generateEmails(int n) {\r\n            return IntStream.rangeClosed(1, n).mapToObj(it -> \"address\" + it + \"@mail.com\").collect(Collectors.toList());\r\n        }\r\n\r\n        private List<String> getRandomCredentials(int n) {\r\n            List<String> names = generateNames(n);\r\n            List<String> emails = generateEmails(n);\r\n            return IntStream.range(0, n)\r\n                    .mapToObj(it -> String.format(\"%s %s\", names.get(it), emails.get(it)))\r\n                    .collect(Collectors.toList());\r\n        }\r\n    }\r\n  learner_created: false\r\nfeedback_link: https://hyperskill.org/projects/197/stages/983/implement#comment\r\nstatus: Unchecked\r\nrecord: -1\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Learning Progress Tracker/Learning Progress Tracker/Notification service/task-info.yaml b/../Learning Progress Tracker/Learning Progress Tracker/Notification service/task-info.yaml
--- a/../Learning Progress Tracker/Learning Progress Tracker/Notification service/task-info.yaml	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../Learning Progress Tracker/Learning Progress Tracker/Notification service/task-info.yaml	(date 1648299039939)
@@ -33,6 +33,7 @@
     package tracker;
 
     import org.junit.jupiter.api.Test;
+    import tracker.commands.AddStudentsCommand;
 
     import static org.junit.jupiter.api.Assertions.*;
 
@@ -40,7 +41,6 @@
 
         @Test
         void test() {
-            assertEquals(5, 2 + 3);
         }
     }
   learner_created: false
@@ -1035,6 +1035,648 @@
         }
     }
   learner_created: false
-feedback_link: https://hyperskill.org/projects/197/stages/983/implement#comment
-status: Unchecked
+- name: src/tracker/Application.java
+  visible: true
+  text: |+
+    package tracker;
+
+    import tracker.commands.*;
+
+    import java.util.Scanner;
+
+    public class Application {
+
+        public static void run() {
+            System.out.println("Learning Progress Tracker");
+
+            Controller controller = new Controller();
+            Command command = null;
+            StudentsDataBase studentsDataBase = StudentsDataBase.getStudentsDataBase();
+
+            try (Scanner scanner = new Scanner(System.in)) {
+                while (scanner.hasNextLine()) {
+                    String input = scanner.nextLine();
+                    if (input.equals("add students")) {
+                        command = new AddStudentsCommand(studentsDataBase);
+                        controller.setCommand(command);
+                    } else if (input.equals("back")) {
+                        command = new BackCommand(studentsDataBase);
+                        controller.setCommand(command);
+                    } else if (input.equals("list")) {
+                        command = new ListCommand(studentsDataBase);
+                        controller.setCommand(command);
+                    } else if (input.equals("add points")) {
+                        command = new AddPointsCommand(studentsDataBase);
+                        controller.setCommand(command);
+                    } else if (input.equals("find")) {
+                        command = new FindCommand(studentsDataBase);
+                        controller.setCommand(command);
+                    } else if (input.equals("statistics")) {
+                        command = new StatisticsCommand(studentsDataBase);
+                        controller.setCommand(command);
+                    } else if (input.equals("exit")) {
+                        command = new ExitCommand();
+                        controller.setCommand(command);
+                        controller.executeCommand();
+                        break;
+                    }
+                    if (command != null) {
+                        controller.executeCommand();
+                    } else if (input.isBlank()) {
+                        System.out.println("No input.");
+                    } else System.out.println("Unknown command!");
+                }
+            }
+
+        }
+    }
+
+
+  learner_created: true
+- name: src/tracker/courses/Course.java
+  visible: true
+  text: |
+    package tracker.courses;
+
+    import java.math.RoundingMode;
+    import java.text.DecimalFormat;
+    import java.util.HashMap;
+    import java.util.Map;
+
+    public class Course {
+        private int coursePoint;
+        private Map<String, Integer> learningStudents = new HashMap<>();
+        private String nameCourse;
+
+        public Course(int coursePoint, String nameCourse) {
+            this.coursePoint = coursePoint;
+            this.nameCourse = nameCourse;
+        }
+
+        public String getNameCourse() {
+            return nameCourse;
+        }
+
+        public int getCoursePoint() {
+            return coursePoint;
+        }
+
+        public Map<String, Integer> getLearningStudents() {
+            return learningStudents;
+        }
+
+        public void setLearningStudents(Map<String, Integer> learningStudents) {
+            this.learningStudents = learningStudents;
+        }
+
+        public String calculatePercent(int coursePoint, int pointStudent) {
+            double result = (double) pointStudent / ((double)coursePoint / 100);
+            DecimalFormat df = new DecimalFormat("0.0");
+            df.setRoundingMode(RoundingMode.HALF_UP);
+            return df.format(result);
+        }
+
+        public void printStats() {
+            System.out.println(getNameCourse());
+            System.out.format("%-6s %-6s %-6s" + "\n", "id", "points", "completed");
+            if (!getLearningStudents().isEmpty())
+
+                getLearningStudents().entrySet()
+                        .stream()
+                        .sorted(Map.Entry.<String, Integer>comparingByValue().reversed().thenComparing(Map.Entry::getKey))
+                        .limit(4)
+                        .forEach(x -> System.out.format("%-6s %-6d %s%%" + "\n", x.getKey(), x.getValue(), calculatePercent(getCoursePoint(), x.getValue())));
+        }
+
+        public int calculateSumPoints(Map<String, Integer> learningStudents) {
+            int sum = 0;
+            for (Map.Entry<String, Integer> entry : learningStudents.entrySet()) {
+                sum += entry.getValue();
+            }
+            return sum;
+        }
+    }
+  learner_created: true
+- name: src/tracker/Student.java
+  visible: true
+  text: |
+    package tracker;
+
+    public class Student {
+        private String email;
+        private String firstName;
+        private String lastName;
+        private Integer ID;
+        private int grad1 = 0;
+        private int grad2 = 0;
+        private int grad3 = 0;
+        private int grad4 = 0;
+
+        public Student(String email, String firstName, String lastName, Integer ID) {
+            this.email = email;
+            this.firstName = firstName;
+            this.lastName = lastName;
+            this.ID = ID;
+        }
+
+        public int getGrad1() {
+            return grad1;
+        }
+
+        public int getGrad2() {
+            return grad2;
+        }
+
+        public int getGrad3() {
+            return grad3;
+        }
+
+        public int getGrad4() {
+            return grad4;
+        }
+
+        public void setGrad1(int grad1) {
+            this.grad1 = grad1;
+        }
+
+        public void setGrad2(int grad2) {
+            this.grad2 = grad2;
+        }
+
+        public void setGrad3(int grad3) {
+            this.grad3 = grad3;
+        }
+
+        public void setGrad4(int grad4) {
+            this.grad4 = grad4;
+        }
+
+        @Override
+        public String toString() {
+            return " points: Java=" + grad1 + "; DSA=" + grad2 + "; Databases=" + grad3 + "; Spring=" + grad4;
+        }
+    }
+  learner_created: true
+- name: src/tracker/commands/ExitCommand.java
+  visible: true
+  text: |
+    package tracker.commands;
+
+    public class ExitCommand implements Command{
+        @Override
+        public void execute() {
+            System.out.println("Bye!");
+        }
+    }
+  learner_created: true
+- name: src/tracker/commands/StatisticsCommand.java
+  visible: true
+  text: |
+    package tracker.commands;
+
+    import tracker.Student;
+    import tracker.StudentsDataBase;
+    import tracker.courses.*;
+
+    import java.util.*;
+
+    public class StatisticsCommand implements Command {
+        StudentsDataBase studentsDataBase;
+        private String mostPopular = "n/a";
+        private String leastPopular = "n/a";
+        private String highestActivity = "n/a";
+        private String lowestActivity = "n/a";
+        private String easiestCourse = "n/a";
+        private String hardestCourse = "n/a";
+        private final Course javaCourse = new Course(600, "Java");
+        private final Course dsaCourse = new Course(400, "DSA");
+        private final Course databasesCourse = new Course(480, "Databases");
+        private final Course springCourse = new Course(550, "Spring");
+        private final List<Course> courses = List.of(javaCourse, dsaCourse, databasesCourse, springCourse);
+
+
+        public StatisticsCommand(StudentsDataBase studentsDataBase) {
+            this.studentsDataBase = studentsDataBase;
+        }
+
+        @Override
+        public void execute() {
+            System.out.println("Type the name of a course to see details or 'back' to quit:");
+            Scanner scanner = new Scanner(System.in);
+            sortingStudentsOnCourses(studentsDataBase);
+            printCommonStats();
+            while (scanner.hasNextLine()) {
+                String input = scanner.nextLine();
+                if (input.equals("back")) {
+                    break;
+                } else if (input.equals("Java")) {
+                    javaCourse.printStats();
+                } else if (input.equals("DSA")) {
+                    dsaCourse.printStats();
+                } else if (input.equals("Databases")) {
+                    databasesCourse.printStats();
+                } else if (input.equals("Spring")) {
+                    springCourse.printStats();
+                } else {
+                    System.out.println("Unknown course.");
+                }
+            }
+        }
+
+        void printCommonStats() {
+            if (!studentsDataBase.getDbScores().isEmpty()) {
+                for (Course course : courses) {
+                    if (!course.getLearningStudents().isEmpty()) {
+                        mostPopular = mostPopular.replaceAll("n/a", "") + course.getNameCourse() + ", ";
+                    } else leastPopular = leastPopular.replaceAll("n/a", "") + course.getNameCourse() + ", ";
+                }
+                for (Course course : courses) {
+                    if (!course.getLearningStudents().isEmpty()) {
+                        highestActivity = highestActivity.replaceAll("n/a", "") + course.getNameCourse() + ", ";
+                    } else lowestActivity = lowestActivity.replaceAll("n/a", "") + course.getNameCourse() + ", ";
+                }
+                easiestCourse = courses.stream()
+                        .max(Comparator.comparingInt(x -> x.calculateSumPoints(x.getLearningStudents()))).get().getNameCourse();
+                hardestCourse = courses.stream()
+                        .min(Comparator.comparingInt(x -> x.calculateSumPoints(x.getLearningStudents()))).get().getNameCourse();
+            }
+
+
+            System.out.println("most popular: " + mostPopular.trim());
+            System.out.println("Least popular: " + leastPopular.trim());
+            System.out.println("Highest activity: " + highestActivity.trim());
+            System.out.println("Lowest activity: " + lowestActivity.trim());
+            System.out.println("Easiest course: " + easiestCourse.trim());
+            System.out.println("Hardest course: " + hardestCourse.trim());
+        }
+
+        void sortingStudentsOnCourses(StudentsDataBase studentsDataBase) {
+            Map<String, Integer> java = new HashMap<>();
+            Map<String, Integer> dsa = new HashMap<>();
+            Map<String, Integer> databases = new HashMap<>();
+            Map<String, Integer> spring = new HashMap<>();
+            for (Map.Entry<String, Student> entry : studentsDataBase.getDbScores().entrySet()) {
+                if (entry.getValue().getGrad1() != 0) {
+                    java.put(entry.getKey(), entry.getValue().getGrad1());
+                }
+                if (entry.getValue().getGrad2() != 0) {
+                    dsa.put(entry.getKey(), entry.getValue().getGrad2());
+                }
+                if (entry.getValue().getGrad3() != 0) {
+                    databases.put(entry.getKey(), entry.getValue().getGrad3());
+                }
+                if (entry.getValue().getGrad4() != 0) {
+                    spring.put(entry.getKey(), entry.getValue().getGrad4());
+                }
+            }
+            if (!java.isEmpty())
+                javaCourse.setLearningStudents(java);
+            if (!dsa.isEmpty())
+                dsaCourse.setLearningStudents(dsa);
+            if (!databases.isEmpty())
+                databasesCourse.setLearningStudents(databases);
+            if (!spring.isEmpty())
+                springCourse.setLearningStudents(spring);
+        }
+    }
+  learner_created: true
+- name: src/tracker/commands/AddStudentsCommand.java
+  visible: true
+  text: |
+    package tracker.commands;
+
+    import tracker.Student;
+    import tracker.StudentsDataBase;
+
+    import java.util.Scanner;
+    import java.util.regex.Matcher;
+    import java.util.regex.Pattern;
+
+    public class AddStudentsCommand implements Command {
+        private final StudentsDataBase studentsDataBase;
+        private String firstName;
+        private String lastName;
+        private String email;
+        private static Integer ID = 100;
+
+        public AddStudentsCommand(StudentsDataBase studentsDataBase) {
+            this.studentsDataBase = studentsDataBase;
+        }
+
+        @Override
+        public void execute() {
+            System.out.println("Enter student credentials or 'back' to return:");
+            Scanner scanner = new Scanner(System.in);
+            while (scanner.hasNextLine()) {
+                String input = scanner.nextLine();
+                if (input.equals("back")) {
+                    System.out.printf("Total %d students have been added." + "\n", studentsDataBase.getDb().size());
+                    break;
+                } else if (input.isBlank()) {
+                    System.out.println("Incorrect credentials.");
+                } else if (splitter(input)) {
+                    if (isCorrectCredentials(firstName, lastName, email)) {
+                        studentsDataBase.getDb().put(String.valueOf(ID), email);
+                        studentsDataBase.getDbScores().put(String.valueOf(ID), new Student(email, firstName, lastName, ID));
+                        System.out.println("The student has been added.");
+                        ID++;
+                    }
+                }
+            }
+
+        }
+
+        boolean splitter(String input) {
+            String[] strings = input.split(" ");
+            if (strings.length == 3) {
+                firstName = strings[0];
+                lastName = strings[1];
+                email = strings[2];
+                return true;
+            } else if (strings.length > 3) {
+                firstName = strings[0];
+                email = strings[strings.length - 1];
+                StringBuilder sb = new StringBuilder();
+                for (int i = 1; i < strings.length - 1; i++) {
+                    sb.append(strings[i]).append(" ");
+                }
+                lastName = sb.toString().trim();
+                return true;
+
+            } else {
+                System.out.println("Incorrect credentials.");
+                return false;
+            }
+        }
+
+        boolean isFirstName(String firstName) {
+            Pattern pattern = Pattern.compile("^[a-zA-Z]+[-'][A-Za-z]*\\w$|^[A-Za-z]{2,}$");
+            Matcher matcher = pattern.matcher(firstName.trim());
+            return matcher.matches();
+        }
+
+        boolean isLastName(String lastName) {
+            Pattern pattern = Pattern.compile("^[a-zA-Z]+ +(([',. -][a-zA-Z ])?[a-zA-Z]*)*$|" +
+                    "^[A-Za-z]+[-][A-Za-z]*\\w$|^[A-Za-z]{2,}$|" +
+                    "^[A-Z]['][A-Z][a-z]+$");
+            Matcher matcher = pattern.matcher(lastName.trim());
+            return matcher.matches();
+        }
+
+        boolean isEmail(String email) {
+            Pattern pattern = Pattern.compile("^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z0-9]{1,8}(?:\\.[a-z0-9]{2})?)$");
+            Matcher matcher = pattern.matcher(email.trim());
+            return matcher.matches();
+        }
+
+        boolean isEmailAlreadyExist(String email) {
+            return studentsDataBase.getDb().containsValue(email);
+        }
+
+        boolean isCorrectCredentials(String firstName, String lastName, String email) {
+            if (!isFirstName(firstName)) {
+                System.out.println("Incorrect first name.");
+                return false;
+            } else if (!isLastName(lastName)) {
+                System.out.println("Incorrect last name.");
+                return false;
+            } else if (!isEmail(email)) {
+                System.out.println("Incorrect email.");
+                return false;
+            } else if (isEmailAlreadyExist(email)) {
+                System.out.println("This email is already taken.");
+                return false;
+            } else return true;
+        }
+    }
+  learner_created: true
+- name: src/tracker/StudentsDataBase.java
+  visible: true
+  text: |
+    package tracker;
+
+    import java.util.HashMap;
+
+    public class StudentsDataBase {
+        private static StudentsDataBase studentsDataBase;
+        private HashMap<String , String> db = new HashMap<>();
+        private HashMap<String , Student> dbScores = new HashMap<>();
+
+        private StudentsDataBase() {
+
+        }
+
+        public static StudentsDataBase getStudentsDataBase() {
+            if (studentsDataBase == null) {
+                studentsDataBase = new StudentsDataBase();
+            }
+            return studentsDataBase;
+        }
+
+        public HashMap<String , String> getDb() {
+            return db;
+        }
+
+        public HashMap<String , Student> getDbScores() {
+            return dbScores;
+        }
+    }
+  learner_created: true
+- name: src/tracker/commands/AddPointsCommand.java
+  visible: true
+  text: |
+    package tracker.commands;
+
+    import tracker.Student;
+    import tracker.StudentsDataBase;
+
+    import java.util.Arrays;
+    import java.util.Scanner;
+    import java.util.regex.Matcher;
+    import java.util.regex.Pattern;
+
+    public class AddPointsCommand implements Command {
+        private final StudentsDataBase studentsDataBase;
+        private static String ID;
+        private static Integer[] scores = new Integer[5];
+
+        public AddPointsCommand(StudentsDataBase studentsDataBase) {
+            this.studentsDataBase = studentsDataBase;
+        }
+
+        @Override
+        public void execute() {
+            System.out.println("Enter an id and points or 'back' to return:");
+            Scanner scanner = new Scanner(System.in);
+            while (scanner.hasNextLine()) {
+                String input = scanner.nextLine();
+                if (input.equals("back")) {
+                    break;
+                } else if (splitterConverter(input)) {
+                    if (studentsDataBase.getDbScores().containsKey(ID)) {
+                        updaterPoints(studentsDataBase.getDbScores().get(ID));
+                        System.out.println("Points updated.");
+                    } else {
+                        System.out.println("No student is found for id=" + ID);
+                    }
+                }
+            }
+        }
+
+        boolean splitterConverter(String input) {
+            String[] rawInput = input.split(" ");
+            if (rawInput.length == 5 & isCorrectRequest(input.substring(input.indexOf(" ",2)))) {
+                ID = rawInput[0];
+                for (int i = 1; i < rawInput.length; i++) {
+                    scores[i - 1] = Integer.valueOf(rawInput[i]);
+                }
+                return true;
+            } else {
+                System.out.println("Incorrect points format.");
+                return false;
+            }
+        }
+
+        boolean isCorrectRequest(String input) {
+            Pattern pattern = Pattern.compile("^[0-9 ]+");
+            Matcher matcher = pattern.matcher(input);
+            return matcher.matches();
+        }
+
+        void updaterPoints(Student student) {
+            student.setGrad1(student.getGrad1() + scores[0]);
+            student.setGrad2(student.getGrad2() + scores[1]);
+            student.setGrad3(student.getGrad3() + scores[2]);
+            student.setGrad4(student.getGrad4() + scores[3]);
+        }
+    }
+  learner_created: true
+- name: src/tracker/commands/Controller.java
+  visible: true
+  text: |
+    package tracker.commands;
+
+    public class Controller {
+        private Command command;
+
+        public void setCommand(Command command) {
+            this.command = command;
+        }
+
+        public void executeCommand() {
+            command.execute();
+        }
+    }
+  learner_created: true
+- name: src/tracker/commands/ListCommand.java
+  visible: true
+  text: |
+    package tracker.commands;
+
+    import tracker.StudentsDataBase;
+
+    import java.util.Map;
+
+    public class ListCommand implements Command {
+        private final StudentsDataBase studentsDataBase;
+
+        public ListCommand(StudentsDataBase studentsDataBase) {
+            this.studentsDataBase = studentsDataBase;
+        }
+
+        @Override
+        public void execute() {
+            if (studentsDataBase.getDb().size() == 0) {
+                System.out.println("No students found.");
+            } else {
+                System.out.println("Students:");
+                for (Map.Entry<String, String> entry : studentsDataBase.getDb().entrySet()) {
+                    System.out.println(entry.getKey());
+                }
+            }
+        }
+    }
+  learner_created: true
+- name: src/tracker/commands/BackCommand.java
+  visible: true
+  text: |
+    package tracker.commands;
+
+    import tracker.StudentsDataBase;
+
+    public class BackCommand implements Command {
+        StudentsDataBase studentsDataBase;
+
+        public BackCommand(StudentsDataBase studentsDataBase) {
+            this.studentsDataBase = studentsDataBase;
+        }
+
+        @Override
+        public void execute() {
+            if (studentsDataBase.getDb().isEmpty()) {
+                System.out.println("Enter 'exit' to exit the program.");
+            } else {
+                int count = studentsDataBase.getDb().size();
+                System.out.printf("Total %d students have been added." + "\n", count);
+            }
+        }
+    }
+  learner_created: true
+- name: src/tracker/commands/FindCommand.java
+  visible: true
+  text: |
+    package tracker.commands;
+
+    import tracker.StudentsDataBase;
+
+    import java.util.Scanner;
+
+    public class FindCommand implements Command {
+        StudentsDataBase studentsDataBase;
+
+        public FindCommand(StudentsDataBase studentsDataBase) {
+            this.studentsDataBase = studentsDataBase;
+        }
+
+        @Override
+        public void execute() {
+            System.out.println("Enter an id or 'back' to return.");
+            Scanner scanner = new Scanner(System.in);
+            while (scanner.hasNextLine()) {
+                String input = scanner.nextLine();
+                if (input.equals("back")) {
+                    break;
+                } else if (isCorrectID(input)) {
+                    System.out.print(input + studentsDataBase.getDbScores().get(input).toString());
+                    System.out.println();
+                } else {
+                    System.out.println("No student is found for id=" + input);
+                }
+
+            }
+        }
+
+        boolean isCorrectID(String input) {
+            return studentsDataBase.getDbScores().containsKey(input);
+        }
+    }
+  learner_created: true
+- name: src/tracker/commands/Command.java
+  visible: true
+  text: |
+    package tracker.commands;
+
+    public interface Command {
+        void execute();
+    }
+  learner_created: true
+- name: src/tracker/commands/NotifyCommand.java
+  visible: true
+  learner_created: true
+feedback_link: https://hyperskill.org/learn/step/14400#comment
+status: Solved
+feedback:
+  message: Well done! You've finished the project. Select a new project on <a href="https://hyperskill.org/projects">JetBrains
+    Academy</a> to continue learning.
+  time: Sat, 26 Mar 2022 12:50:35 UTC
 record: -1
Index: ../Learning Progress Tracker/Learning Progress Tracker/lesson-info.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>type: framework\r\ncontent:\r\n- No empty lines here\r\n- Verify new users\r\n- A detailed record\r\n- Retrieving statistics\r\n- Notification service\r\ncurrent_task: 0\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Learning Progress Tracker/Learning Progress Tracker/lesson-info.yaml b/../Learning Progress Tracker/Learning Progress Tracker/lesson-info.yaml
--- a/../Learning Progress Tracker/Learning Progress Tracker/lesson-info.yaml	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../Learning Progress Tracker/Learning Progress Tracker/lesson-info.yaml	(date 1648296234550)
@@ -5,4 +5,4 @@
 - A detailed record
 - Retrieving statistics
 - Notification service
-current_task: 0
+current_task: 4
Index: ../Learning Progress Tracker/course-remote-info.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>hyperskill_project:\r\n  id: 197\r\n  ide_files: https://stepik.org/media/attachments/lesson/562390/additional_files.json\r\n  is_template_based: false\r\n  use_ide: true\r\nupdate_date: Thu, 01 Jan 1970 00:00:00 UTC\r\nstages:\r\n- id: 979\r\n  step: 14396\r\n  is_completed: true\r\n- id: 980\r\n  step: 14397\r\n  is_completed: false\r\n- id: 981\r\n  step: 14398\r\n  is_completed: false\r\n- id: 982\r\n  step: 14399\r\n  is_completed: false\r\n- id: 983\r\n  step: 14400\r\n  is_completed: false\r\ntopics:\r\n  0:\r\n  - title: Write, compile, and run\r\n    theory_id: 3739\r\n  - title: JVM, JRE, and JDK\r\n    theory_id: 3499\r\n  - title: Units of information\r\n    theory_id: 6865\r\n  - title: Immutability\r\n    theory_id: 7929\r\n  - title: Introduction to operating systems\r\n    theory_id: 9704\r\n  - title: Computer algorithms\r\n    theory_id: 16547\r\n  - title: The big O notation\r\n    theory_id: 16699\r\n  - title: Data structures\r\n    theory_id: 16927\r\n  - title: Computer programming\r\n    theory_id: 8739\r\n  - title: Introduction to Java\r\n    theory_id: 3500\r\n  - title: Basic literals\r\n    theory_id: 3522\r\n  - title: Overview of the basic program\r\n    theory_id: 3521\r\n  - title: Printing data\r\n    theory_id: 3749\r\n  - title: Types and variables\r\n    theory_id: 3518\r\n  - title: Comments\r\n    theory_id: 3520\r\n  - title: Scanning the input\r\n    theory_id: 9055\r\n  - title: Coding style conventions\r\n    theory_id: 12411\r\n  - title: Naming variables\r\n    theory_id: 3513\r\n  - title: Arithmetic operations\r\n    theory_id: 3519\r\n  - title: Integer types and operations\r\n    theory_id: 3565\r\n  - title: Boolean and logical operations\r\n    theory_id: 3516\r\n  - title: Relational operators\r\n    theory_id: 3512\r\n  - title: Conditional statement\r\n    theory_id: 3503\r\n  - title: Ternary operator\r\n    theory_id: 3506\r\n  - title: Increment and decrement\r\n    theory_id: 5008\r\n  - title: The while and do-while loops\r\n    theory_id: 3498\r\n  - title: The for-loop\r\n    theory_id: 3505\r\n  - title: Branching statements\r\n    theory_id: 3507\r\n  - title: Switch statement\r\n    theory_id: 3504\r\n  - title: Characters\r\n    theory_id: 3514\r\n  - title: Sizes and ranges\r\n    theory_id: 3532\r\n  - title: Type casting\r\n    theory_id: 3510\r\n  - title: Calling a method\r\n    theory_id: 10973\r\n  - title: Declaring a method\r\n    theory_id: 10982\r\n  - title: The main method\r\n    theory_id: 3489\r\n  - title: Functional decomposition\r\n    theory_id: 10570\r\n  - title: String\r\n    theory_id: 3523\r\n  - title: Primitive and reference types\r\n    theory_id: 5035\r\n  - title: Array\r\n    theory_id: 3511\r\n  - title: Arrays as parameters\r\n    theory_id: 3594\r\n  - title: Overloading\r\n    theory_id: 3525\r\n  - title: Iterating over arrays\r\n    theory_id: 3602\r\n  - title: Final variables\r\n    theory_id: 7427\r\n  - title: Errors in programs\r\n    theory_id: 3536\r\n  - title: What is an exception\r\n    theory_id: 3497\r\n  - title: NPE\r\n    theory_id: 1945\r\n  - title: Introduction to OOP\r\n    theory_id: 3614\r\n  - title: Package\r\n    theory_id: 3621\r\n  - title: Hierarchy of exceptions\r\n    theory_id: 3570\r\n  - title: Exception handling\r\n    theory_id: 3552\r\n  - title: Command line overview\r\n    theory_id: 8977\r\n  - title: Parameters and options\r\n    theory_id: 9746\r\n  - title: Pseudocode\r\n    theory_id: 15090\r\n  - title: Fixed-size array\r\n    theory_id: 7255\r\n  - title: Dynamic array\r\n    theory_id: 5357\r\n  - title: What is a bug\r\n    theory_id: 5504\r\n  - title: Floating-point types\r\n    theory_id: 3517\r\n  - title: Defining classes\r\n    theory_id: 3618\r\n  - title: Instance methods\r\n    theory_id: 3495\r\n  - title: Constructor\r\n    theory_id: 3535\r\n  - title: Access modifiers\r\n    theory_id: 3589\r\n  - title: Getters and setters\r\n    theory_id: 3599\r\n  - title: Inheritance\r\n    theory_id: 3583\r\n  - title: Protected modifier\r\n    theory_id: 6692\r\n  - title: Referencing subclass objects\r\n    theory_id: 3585\r\n  - title: The Object class\r\n    theory_id: 3596\r\n  - title: Objects\r\n    theory_id: 4727\r\n  - title: Interface\r\n    theory_id: 3615\r\n  - title: Multiple constructors\r\n    theory_id: 3538\r\n  - title: The keyword super\r\n    theory_id: 3588\r\n  - title: Static members\r\n    theory_id: 3534\r\n  - title: Annotations basics\r\n    theory_id: 3622\r\n  - title: Hiding and overriding\r\n    theory_id: 3572\r\n  - title: Polymorphism\r\n    theory_id: 3587\r\n  - title: Boxing and unboxing\r\n    theory_id: 3595\r\n  1:\r\n  - title: Java Archive\r\n    theory_id: 4311\r\n  - title: Build tools\r\n    theory_id: 4284\r\n  - title: Gradle basics\r\n    theory_id: 5075\r\n  - title: Basic project with Gradle\r\n    theory_id: 5077\r\n  - title: Building apps using Gradle\r\n    theory_id: 7917\r\n  - title: Dependency management\r\n    theory_id: 5076\r\n  - title: Libraries\r\n    theory_id: 8504\r\n  - title: Frameworks\r\n    theory_id: 6701\r\n  - title: Regexps basics\r\n    theory_id: 7580\r\n  - title: Regexps in Java\r\n    theory_id: 3670\r\n  - title: Functional testing\r\n    theory_id: 13438\r\n  - title: Unit testing\r\n    theory_id: 7545\r\n  - title: Unit testing with JUnit\r\n    theory_id: 12640\r\n  2:\r\n  - title: Stack\r\n    theory_id: 5252\r\n  - title: Queue\r\n    theory_id: 5350\r\n  - title: Deque\r\n    theory_id: 18635\r\n  - title: Test lifecycle annotations\r\n    theory_id: 12867\r\n  - title: Parameterized test\r\n    theory_id: 12877\r\n  - title: Introduction to generic programming\r\n    theory_id: 3492\r\n  - title: Generics and Object\r\n    theory_id: 3493\r\n  - title: What are collections\r\n    theory_id: 3770\r\n  - title: The Collections Framework overview\r\n    theory_id: 3624\r\n  - title: ArrayList\r\n    theory_id: 3567\r\n  - title: The List interface\r\n    theory_id: 3581\r\n  - title: The Set interface\r\n    theory_id: 3575\r\n  - title: LinkedList vs. ArrayList\r\n    theory_id: 12391\r\n  - title: Queue and Stack\r\n    theory_id: 3576\r\n  - title: 'Hashing: overview'\r\n    theory_id: 9831\r\n  - title: Hash function\r\n    theory_id: 10878\r\n  - title: Hash table\r\n    theory_id: 13054\r\n  - title: The Map interface\r\n    theory_id: 3558\r\n  - title: HashMap\r\n    theory_id: 12379\r\n  - title: Choosing the right collection\r\n    theory_id: 12854\r\n  3:\r\n  - title: Ordering and total order\r\n    theory_id: 9253\r\n  - title: Lambda expressions\r\n    theory_id: 11635\r\n  - title: Method references\r\n    theory_id: 3620\r\n  - title: Functional interfaces\r\n    theory_id: 11636\r\n  - title: Comparator\r\n    theory_id: 12966\r\n  - title: Anonymous classes\r\n    theory_id: 11896\r\n  - title: Default methods\r\n    theory_id: 11354\r\n  - title: Comparable\r\n    theory_id: 14456\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Learning Progress Tracker/course-remote-info.yaml b/../Learning Progress Tracker/course-remote-info.yaml
--- a/../Learning Progress Tracker/course-remote-info.yaml	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../Learning Progress Tracker/course-remote-info.yaml	(date 1648299039960)
@@ -3,23 +3,23 @@
   ide_files: https://stepik.org/media/attachments/lesson/562390/additional_files.json
   is_template_based: false
   use_ide: true
-update_date: Thu, 01 Jan 1970 00:00:00 UTC
+update_date: Sat, 26 Mar 2022 11:56:50 UTC
 stages:
 - id: 979
   step: 14396
   is_completed: true
 - id: 980
   step: 14397
-  is_completed: false
+  is_completed: true
 - id: 981
   step: 14398
-  is_completed: false
+  is_completed: true
 - id: 982
   step: 14399
-  is_completed: false
+  is_completed: true
 - id: 983
   step: 14400
-  is_completed: false
+  is_completed: true
 topics:
   0:
   - title: Write, compile, and run
Index: ../Learning Progress Tracker/Learning Progress Tracker/No empty lines here/task-remote-info.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>id: 14396\r\nupdate_date: Sat, 19 Mar 2022 15:34:57 UTC\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Learning Progress Tracker/Learning Progress Tracker/No empty lines here/task-remote-info.yaml b/../Learning Progress Tracker/Learning Progress Tracker/No empty lines here/task-remote-info.yaml
--- a/../Learning Progress Tracker/Learning Progress Tracker/No empty lines here/task-remote-info.yaml	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../Learning Progress Tracker/Learning Progress Tracker/No empty lines here/task-remote-info.yaml	(date 1648234060509)
@@ -1,2 +1,2 @@
 id: 14396
-update_date: Sat, 19 Mar 2022 15:34:57 UTC
+update_date: Fri, 25 Mar 2022 17:08:41 UTC
Index: ../Learning Progress Tracker/Learning Progress Tracker/No empty lines here/task-info.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>type: edu\r\nfiles:\r\n- name: test/LearningProgressTrackerTest.java\r\n  visible: false\r\n  text: |\r\n    import org.hyperskill.hstest.dynamic.DynamicTest;\r\n    import org.hyperskill.hstest.stage.StageTest;\r\n    import org.hyperskill.hstest.testcase.CheckResult;\r\n    import org.hyperskill.hstest.testing.TestedProgram;\r\n\r\n    import java.util.Arrays;\r\n    import java.util.List;\r\n\r\n    import static org.hyperskill.hstest.testing.expect.Expectation.expect;\r\n\r\n    public class LearningProgressTrackerTest extends StageTest<String> {\r\n\r\n        @DynamicTest\r\n        CheckResult testStartAndExit() {\r\n            TestedProgram main = new TestedProgram();\r\n\r\n            String output = main.start().toLowerCase();\r\n\r\n            expect(output).toContain(1).lines();\r\n            if (incorrectString(output, \"learning progress tracker\")) {\r\n                return CheckResult.wrong(\"When started, your program \" +\r\n                        \"should print \\\"Learning Progress Tracker\\\"\");\r\n            }\r\n\r\n            if (!main.isWaitingInput()) {\r\n                return CheckResult.wrong(\"After the start, your program should \" +\r\n                        \"be ready to accept commands from the user\");\r\n            }\r\n\r\n            output = main.execute(\"exit\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"bye\")) {\r\n                return CheckResult.wrong(\"When the 'exit' command is entered, \" +\r\n                        \"your program should say bye to the user\");\r\n            }\r\n\r\n            if (!main.isFinished()) {\r\n                return CheckResult.wrong(\"After the 'exit' command has been entered, \" +\r\n                        \"your program should stop working\");\r\n            }\r\n\r\n            return CheckResult.correct();\r\n\r\n        }\r\n\r\n        @DynamicTest(data = \"getBlankInput\")\r\n        CheckResult testBlankInput(String input) {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n\r\n            String output = main.execute(input);\r\n            expect(output).toContain(1).lines();\r\n            if (incorrectString(output, \"no input\")) {\r\n                return CheckResult.wrong(\"When the user enters an empty or blank \" +\r\n                        \"string, your program should print \\\"no input\\\"\");\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(data = \"getUnknownCommands\")\r\n        CheckResult testUnknownCommands(String input) {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n\r\n            String output = main.execute(input);\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"unknown\", \"command\")) {\r\n                return CheckResult.wrong(\"When an unknown command is entered, your \" +\r\n                        \"program should display an error message: \\\"Unknown command!\\\"\");\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        private boolean anyMissingKeywords(String output, String... keywords) {\r\n            List<String> tokens = Arrays.asList(\r\n                    output.toLowerCase().split(\"\\\\W+\")\r\n            );\r\n\r\n            return !tokens.containsAll(Arrays.asList(keywords.clone()));\r\n        }\r\n\r\n        private boolean incorrectString(String output, String model) {\r\n            String normalizedOutput = output.replaceAll(\"\\\\W+\", \"\").toLowerCase();\r\n            String normalizedModel = model.replaceAll(\"\\\\W+\", \"\").toLowerCase();\r\n\r\n            return !normalizedOutput.contains(normalizedModel);\r\n        }\r\n\r\n        private String[] getBlankInput() {\r\n            return new String[]{\"\", \"  \", \"\\t\", \" \\t\"};\r\n        }\r\n\r\n        private String[] getUnknownCommands() {\r\n            return new String[]{\"abc\", \"quit\", \"  brexit \", \"exi  t\", \"help\", \"break\",\r\n                    \"-help\", \"Ctrl+C\", \"exit please\", \":q\"};\r\n        }\r\n    }\r\n  learner_created: false\r\n- name: src/tracker/Main.java\r\n  visible: true\r\n  text: |\r\n    package tracker;\r\n\r\n    public class Main {\r\n        public static void main(String[] args) {\r\n            System.out.println(\"Hello, World!\");\r\n        }\r\n    }\r\n  learner_created: false\r\n- name: build.gradle\r\n  visible: true\r\n  text: |\r\n    repositories {\r\n        mavenCentral()\r\n    }\r\n\r\n    dependencies {\r\n        testImplementation 'org.junit.jupiter:junit-jupiter:5.7.1'\r\n        testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.7.1'\r\n    }\r\n\r\n    test {\r\n        useJUnitPlatform()\r\n    }\r\n  learner_created: false\r\n- name: test/tracker/SampleTest.java\r\n  visible: true\r\n  text: |\r\n    package tracker;\r\n\r\n    import org.junit.jupiter.api.Test;\r\n\r\n    import static org.junit.jupiter.api.Assertions.*;\r\n\r\n    public class SampleTest {\r\n\r\n        @Test\r\n        void test() {\r\n            assertEquals(5, 2 + 3);\r\n        }\r\n    }\r\n  learner_created: false\r\n- name: src/tracker/Application.java\r\n  visible: true\r\n  learner_created: true\r\nfeedback_link: https://hyperskill.org/projects/197/stages/979/implement#comment\r\nstatus: Solved\r\nfeedback:\r\n  message: Congratulations!\r\n  time: Tue, 22 Mar 2022 16:08:16 UTC\r\nrecord: -1\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Learning Progress Tracker/Learning Progress Tracker/No empty lines here/task-info.yaml b/../Learning Progress Tracker/Learning Progress Tracker/No empty lines here/task-info.yaml
--- a/../Learning Progress Tracker/Learning Progress Tracker/No empty lines here/task-info.yaml	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../Learning Progress Tracker/Learning Progress Tracker/No empty lines here/task-info.yaml	(date 1648131757570)
@@ -150,9 +150,9 @@
 - name: src/tracker/Application.java
   visible: true
   learner_created: true
-feedback_link: https://hyperskill.org/projects/197/stages/979/implement#comment
+feedback_link: https://hyperskill.org/learn/step/14396#comment
 status: Solved
 feedback:
   message: Congratulations!
   time: Tue, 22 Mar 2022 16:08:16 UTC
-record: -1
+record: 1
Index: ../Learning Progress Tracker/Learning Progress Tracker/Verify new users/task-info.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>type: edu\r\nfiles:\r\n- name: src/tracker/Main.java\r\n  visible: true\r\n  text: |\r\n    package tracker;\r\n\r\n    public class Main {\r\n        public static void main(String[] args) {\r\n            System.out.println(\"Hello, World!\");\r\n        }\r\n    }\r\n  learner_created: false\r\n- name: build.gradle\r\n  visible: true\r\n  text: |\r\n    repositories {\r\n        mavenCentral()\r\n    }\r\n\r\n    dependencies {\r\n        testImplementation 'org.junit.jupiter:junit-jupiter:5.7.1'\r\n        testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.7.1'\r\n    }\r\n\r\n    test {\r\n        useJUnitPlatform()\r\n    }\r\n  learner_created: false\r\n- name: test/tracker/SampleTest.java\r\n  visible: true\r\n  text: |\r\n    package tracker;\r\n\r\n    import org.junit.jupiter.api.Test;\r\n\r\n    import static org.junit.jupiter.api.Assertions.*;\r\n\r\n    public class SampleTest {\r\n\r\n        @Test\r\n        void test() {\r\n            assertEquals(5, 2 + 3);\r\n        }\r\n    }\r\n  learner_created: false\r\n- name: test/LearningProgressTrackerTest.java\r\n  visible: false\r\n  text: |\r\n    import org.hyperskill.hstest.dynamic.DynamicTest;\r\n    import org.hyperskill.hstest.stage.StageTest;\r\n    import org.hyperskill.hstest.testcase.CheckResult;\r\n    import org.hyperskill.hstest.testing.TestedProgram;\r\n\r\n    import java.util.Arrays;\r\n    import java.util.List;\r\n\r\n    import static org.hyperskill.hstest.testing.expect.Expectation.expect;\r\n\r\n    public class LearningProgressTrackerTest extends StageTest<String> {\r\n\r\n        @DynamicTest(order = 1)\r\n        CheckResult testStartAndExit() {\r\n            TestedProgram main = new TestedProgram();\r\n            String output = main.start();\r\n            expect(output).toContain(1).lines();\r\n            if (incorrectString(output, \"learning progress tracker\")) {\r\n                return CheckResult.wrong(\"When started, your program \" +\r\n                        \"should print \\\"Learning Progress Tracker\\\"\");\r\n            }\r\n\r\n            if (!main.isWaitingInput()) {\r\n                return CheckResult.wrong(\"After the start, your program should \" +\r\n                        \"be ready to accept commands from the user\");\r\n            }\r\n\r\n            output = main.execute(\"back\");\r\n            expect(output).toContain(1).lines();\r\n            if (!main.isWaitingInput()) {\r\n                return CheckResult.wrong(\"Your program should keep running after the 'back' \" +\r\n                        \"command is entered\");\r\n            }\r\n\r\n            if (anyMissingKeywords(output, \"enter\", \"exit\", \"program\")) {\r\n                return CheckResult.wrong(\"When 'back' command is entered your program \" +\r\n                        \"should print the hint \\\"Enter 'exit' to exit the program\\\"\");\r\n            }\r\n\r\n            output = main.execute(\"exit\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"bye\")) {\r\n                return CheckResult.wrong(\"When the 'exit' command is entered, \" +\r\n                        \"your program should say bye to the user\");\r\n            }\r\n\r\n            if (!main.isFinished()) {\r\n                return CheckResult.wrong(\"After the 'exit' command has been entered, \" +\r\n                        \"your program should stop working\");\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 2, data = \"getBlankInput\")\r\n        CheckResult testBlankInput(String input) {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n\r\n            String output = main.execute(input);\r\n            expect(output).toContain(1).lines();\r\n            if (incorrectString(output, \"no input\")) {\r\n                return CheckResult.wrong(\"When the user enters an empty or blank \" +\r\n                        \"string, your program should print \\\"No input.\\\"\");\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 3, data = \"getUnknownCommands\")\r\n        CheckResult testUnknownCommands(String input) {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n\r\n            String output = main.execute(input);\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"unknown\", \"command\")) {\r\n                return CheckResult.wrong(\"When an unknown command is entered, your \" +\r\n                        \"program should display an error message: \\\"Unknown command!\\\"\");\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 4)\r\n        CheckResult testAddStudents1() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n\r\n            String output = main.execute(\"add students\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output,\r\n                    \"enter\", \"student\", \"credentials\", \"back\", \"return\")) {\r\n                return CheckResult.wrong(\"When 'add students' command is entered, your \" +\r\n                        \"program should display the prompt \\\"Enter student credentials or \" +\r\n                        \"'back' to return.\\\"\");\r\n            }\r\n\r\n            output = main.execute(\"exit\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"incorrect\", \"credentials\")) {\r\n                return CheckResult.wrong(\"Expected output: \\\"Incorrect credentials.\\\", \" +\r\n                        \"but your output was: \" + output);\r\n            }\r\n\r\n            output = main.execute(\"back\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"total\", \"0\", \"students\", \"added\")) {\r\n                return CheckResult.wrong(\"Expected: \\\"Total 0 students were added\\\", but \" +\r\n                        \"your output was: \" + output);\r\n            }\r\n\r\n            output = main.execute(\"back\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"enter\", \"exit\", \"program\")) {\r\n                return CheckResult.wrong(\"When 'back' command is entered your program \" +\r\n                        \"should stop waiting for student credentials\");\r\n            }\r\n\r\n            output = main.execute(\"exit\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"bye\")) {\r\n                return CheckResult.wrong(\"When the 'exit' command is entered, \" +\r\n                        \"your program should say bye to the user\");\r\n            }\r\n\r\n            if (!main.isFinished()) {\r\n                return CheckResult.wrong(\"After the 'exit' command has been entered, \" +\r\n                        \"your program should stop working\");\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 5)\r\n        CheckResult testAddStudents2() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n\r\n            main.execute(\"add students\");\r\n            for (String input : getCorrectCredentials()) {\r\n                String output = main.execute(input);\r\n                expect(output).toContain(1).lines();\r\n                if (anyMissingKeywords(output, \"student\", \"added\")) {\r\n                    return CheckResult.wrong(\"Expected output: \\\"Student has been added.\\\", but your \" +\r\n                            \"output was: \" + output);\r\n                }\r\n            }\r\n\r\n            String output = main.execute(\"back\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"total\", \"10\", \"students\", \"added\")) {\r\n                return CheckResult.wrong(\"Expected: \\\"Total 10 students have been added\\\", but \" +\r\n                        \"your output was: \" + output);\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 6)\r\n        CheckResult testAddStudents3() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n            main.execute(\"add students\");\r\n\r\n            for (String[] args : getIncorrectCredentials()) {\r\n                String output = main.execute(args[0]);\r\n                expect(output).toContain(1).lines();\r\n                if (incorrectString(output, args[1])) {\r\n                    main.stop();\r\n                    return CheckResult.wrong(\"Expected output: \\\"\" + args[1] + \"\\\", but your \" +\r\n                            \"output was: \" + output);\r\n                }\r\n            }\r\n\r\n            String output = main.execute(\"back\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"total\", \"0\", \"students\", \"added\")) {\r\n                return CheckResult.wrong(\"Expected: \\\"Total 0 students have been added\\\", but \" +\r\n                        \"your output was: \" + output);\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        private boolean anyMissingKeywords(String output, String... keywords) {\r\n            List<String> tokens = Arrays.asList(\r\n                    output.toLowerCase().split(\"\\\\W+\")\r\n            );\r\n\r\n            return !tokens.containsAll(Arrays.asList(keywords.clone()));\r\n        }\r\n\r\n        private boolean incorrectString(String output, String expected) {\r\n            String normalizedOutput = output.replaceAll(\"\\\\W+\", \"\").toLowerCase();\r\n            String normalizedModel = expected.replaceAll(\"\\\\W+\", \"\").toLowerCase();\r\n\r\n            return !normalizedOutput.contains(normalizedModel);\r\n        }\r\n\r\n        private String[] getBlankInput() {\r\n            return new String[] {\"\", \"  \", \"\\t\", \" \\t\"};\r\n        }\r\n\r\n        private String[] getUnknownCommands() {\r\n            return new String[] {\"abc\", \"quit\", \"  brexit \", \"exi  t\", \"?\", \"break\",\r\n                    \"-exit\", \"Ctrl+C\", \"exit please\", \":q\"};\r\n        }\r\n\r\n        private String[] getCorrectCredentials() {\r\n            return new String[] { \"John Smith jsmith@hotmail.com\", \"Anny Doolittle anny.md@mail.edu\",\r\n                    \"Jean-Claude O'Connor jcda123@google.net\", \"Mary Emelianenko 125367at@zzz90.z9\",\r\n                    \"Al Owen u15da125@a1s2f4f7.a1c2c5s4\", \"Robert Jemison Van de Graaff robertvdgraaff@mit.edu\",\r\n                    \"Ed Eden a1@a1.a1\", \"na'me s-u ii@ii.ii\", \"n'a me su aa-b'b ab@ab.ab\", \"nA me 1@1.1\"};\r\n        }\r\n\r\n        private String[][] getIncorrectCredentials() {\r\n            return new String[][] {\r\n                    { \"\", \"Incorrect credentials\" }, { \" \\t\", \"Incorrect credentials.\" },\r\n                    { \"name surname\", \"Incorrect credentials.\" },\r\n                    { \"n surname email@email.xyz\", \"Incorrect first name.\" },\r\n                    { \"'name surname email@email.xyz\", \"Incorrect first name.\" },\r\n                    { \"-name surname email@email.xyz\", \"Incorrect first name.\" },\r\n                    { \"name- surname email@email.xyz\", \"Incorrect first name.\" },\r\n                    { \"name' surname email@email.xyz\", \"Incorrect first name.\" },\r\n                    { \"nam-'e surname email@email.xyz\", \"Incorrect first name.\" },\r\n                    { \"na'-me surname email@email.xyz\", \"Incorrect first name.\" },\r\n                    { \"na--me surname email@email.xyz\", \"Incorrect first name.\" },\r\n                    { \"na''me surname email@email.xyz\", \"Incorrect first name.\" },\r\n                    { \"námé surname email@email.xyz\", \"Incorrect first name.\" },\r\n                    { \"name s email@email.xyz\", \"Incorrect last name.\" },\r\n                    { \"name -surname email@email.xyz\", \"Incorrect last name.\" },\r\n                    { \"name 'surname email@email.xyz\", \"Incorrect last name.\" },\r\n                    { \"name surnam''e email@email.xyz\", \"Incorrect last name.\" },\r\n                    { \"name surn--ame email@email.xyz\", \"Incorrect last name.\" },\r\n                    { \"name s'-urname email@email.xyz\", \"Incorrect last name.\" },\r\n                    { \"name su-'rname email@email.xyz\", \"Incorrect last name.\" },\r\n                    { \"name surname- email@email.xyz\", \"Incorrect last name.\" },\r\n                    { \"name surname' email@email.xyz\", \"Incorrect last name.\" },\r\n                    { \"name surnámé email@email.xyz\", \"Incorrect last name.\" },\r\n                    { \"name surname emailemail.xyz\", \"Incorrect email.\" },\r\n                    { \"name surname email@emailxyz\", \"Incorrect email.\" },\r\n                    { \"name surname email@e@mail.xyz\", \"Incorrect email.\" },\r\n            };\r\n        }\r\n    }\r\n  learner_created: false\r\nfeedback_link: https://hyperskill.org/projects/197/stages/980/implement#comment\r\nstatus: Unchecked\r\nrecord: -1\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Learning Progress Tracker/Learning Progress Tracker/Verify new users/task-info.yaml b/../Learning Progress Tracker/Learning Progress Tracker/Verify new users/task-info.yaml
--- a/../Learning Progress Tracker/Learning Progress Tracker/Verify new users/task-info.yaml	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../Learning Progress Tracker/Learning Progress Tracker/Verify new users/task-info.yaml	(date 1648215946979)
@@ -294,6 +294,58 @@
         }
     }
   learner_created: false
-feedback_link: https://hyperskill.org/projects/197/stages/980/implement#comment
-status: Unchecked
-record: -1
+- name: src/tracker/Application.java
+  visible: true
+  text: |
+    package tracker;
+
+    import java.util.Scanner;
+
+    public class Application {
+        public static void run() {
+            System.out.println("Learning Progress Tracker");
+            String command;
+            try (Scanner scanner = new Scanner(System.in)) {
+                while (scanner.hasNextLine()) {
+                    command = scanner.nextLine().strip();
+                    if (command.equals("exit")) {
+                        System.out.println("Bye!");
+                        break;
+                    }
+                    if (command.isBlank()) {
+                        System.out.println("No input.");
+                    }
+                    if (command.length() > 0) {
+                        System.out.println("Error: unknown command!");
+                    }
+
+                }
+            }
+        }
+
+    }
+  learner_created: true
+- name: src/tracker/commands/Controller.java
+  visible: true
+  learner_created: true
+- name: src/tracker/commands/Command.java
+  visible: true
+  learner_created: true
+- name: src/tracker/commands/AddStudentsCommand.java
+  visible: true
+  learner_created: true
+- name: src/tracker/commands/BackCommand.java
+  visible: true
+  learner_created: true
+- name: src/tracker/commands/ExitCommand.java
+  visible: true
+  learner_created: true
+- name: src/tracker/StudentsDataBase.java
+  visible: true
+  learner_created: true
+feedback_link: https://hyperskill.org/learn/step/14397#comment
+status: Solved
+feedback:
+  message: Congratulations!
+  time: Thu, 24 Mar 2022 20:11:23 UTC
+record: 2
Index: ../Learning Progress Tracker/Learning Progress Tracker/A detailed record/task-info.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>type: edu\r\nfiles:\r\n- name: src/tracker/Main.java\r\n  visible: true\r\n  text: |\r\n    package tracker;\r\n\r\n    public class Main {\r\n        public static void main(String[] args) {\r\n            System.out.println(\"Hello, World!\");\r\n        }\r\n    }\r\n  learner_created: false\r\n- name: build.gradle\r\n  visible: true\r\n  text: |\r\n    repositories {\r\n        mavenCentral()\r\n    }\r\n\r\n    dependencies {\r\n        testImplementation 'org.junit.jupiter:junit-jupiter:5.7.1'\r\n        testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.7.1'\r\n    }\r\n\r\n    test {\r\n        useJUnitPlatform()\r\n    }\r\n  learner_created: false\r\n- name: test/tracker/SampleTest.java\r\n  visible: true\r\n  text: |\r\n    package tracker;\r\n\r\n    import org.junit.jupiter.api.Test;\r\n\r\n    import static org.junit.jupiter.api.Assertions.*;\r\n\r\n    public class SampleTest {\r\n\r\n        @Test\r\n        void test() {\r\n            assertEquals(5, 2 + 3);\r\n        }\r\n    }\r\n  learner_created: false\r\n- name: test/LearningProgressTrackerTest.java\r\n  visible: false\r\n  text: |\r\n    import org.hyperskill.hstest.dynamic.DynamicTest;\r\n    import org.hyperskill.hstest.exception.outcomes.WrongAnswer;\r\n    import org.hyperskill.hstest.stage.StageTest;\r\n    import org.hyperskill.hstest.testcase.CheckResult;\r\n    import org.hyperskill.hstest.testing.TestedProgram;\r\n\r\n    import java.util.ArrayList;\r\n    import java.util.Arrays;\r\n    import java.util.Collections;\r\n    import java.util.HashSet;\r\n    import java.util.List;\r\n    import java.util.Random;\r\n    import java.util.Set;\r\n    import java.util.stream.Collectors;\r\n    import java.util.stream.IntStream;\r\n    import java.util.stream.Stream;\r\n\r\n    import static org.hyperskill.hstest.testing.expect.Expectation.expect;\r\n\r\n    public class LearningProgressTrackerTest extends StageTest<String> {\r\n        private static final Random rnd = new Random();\r\n\r\n        @DynamicTest(order = 1)\r\n        CheckResult testStartAndExit() {\r\n            TestedProgram main = new TestedProgram();\r\n            String output = main.start();\r\n            expect(output).toContain(1).lines();\r\n            if (incorrectString(output, \"Learning Progress Tracker\")) {\r\n                return CheckResult.wrong(\"When started, your program \" +\r\n                        \"should print \\\"Learning Progress Tracker\\\"\");\r\n            }\r\n\r\n            if (!main.isWaitingInput()) {\r\n                return CheckResult.wrong(\"After the start, your program should \" +\r\n                        \"be ready to accept commands from the user\");\r\n            }\r\n\r\n            output = main.execute(\"back\");\r\n            expect(output).toContain(1).lines();\r\n            if (!main.isWaitingInput()) {\r\n                return CheckResult.wrong(\"Your program should keep running after the 'back' \" +\r\n                        \"command is entered\");\r\n            }\r\n\r\n            if (anyMissingKeywords(output, \"enter\", \"exit\", \"program\")) {\r\n                return CheckResult.wrong(\"When 'back' command is entered your program \" +\r\n                        \"should print the hint \\\"Enter 'exit' to exit the program.\\\"\");\r\n            }\r\n\r\n            output = main.execute(\"exit\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"bye\")) {\r\n                return CheckResult.wrong(\"When the 'exit' command is entered, \" +\r\n                        \"your program should say bye to the user\");\r\n            }\r\n\r\n            if (!main.isFinished()) {\r\n                return CheckResult.wrong(\"After the 'exit' command has been entered, \" +\r\n                        \"your program should stop working\");\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 2, data = \"getBlankInput\")\r\n        CheckResult testBlankInput(String input) {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n\r\n            String output = main.execute(input);\r\n            expect(output).toContain(1).lines();\r\n            if (incorrectString(output, \"no input\")) {\r\n                return CheckResult.wrong(\"When the user enters an empty or blank \" +\r\n                        \"string, your program should print \\\"No input.\\\"\");\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 3, data = \"getUnknownCommands\")\r\n        CheckResult testUnknownCommands(String input) {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n\r\n            String output = main.execute(input);\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"unknown\", \"command\")) {\r\n                return CheckResult.wrong(\"When an unknown command is entered, your \" +\r\n                        \"program should display an error message: \\\"Unknown command!\\\"\");\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 4)\r\n        CheckResult testAddStudents1() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n\r\n            String output = main.execute(\"add students\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output,\r\n                    \"enter\", \"student\", \"credentials\", \"back\", \"return\")) {\r\n                return CheckResult.wrong(\"When 'add students' command is entered, your \" +\r\n                        \"program should display the prompt \\\"Enter student credentials or \" +\r\n                        \"'back' to return:\\\"\");\r\n            }\r\n\r\n            output = main.execute(\"exit\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"incorrect\", \"credentials\")) {\r\n                return CheckResult.wrong(\"Expected output: \\\"Incorrect credentials.\\\", \" +\r\n                        \"but your output was: \" + output);\r\n            }\r\n\r\n            output = main.execute(\"back\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"total\", \"0\", \"students\", \"added\")) {\r\n                return CheckResult.wrong(\"Expected: \\\"Total 0 students have been added.\\\", but \" +\r\n                        \"your output was: \" + output);\r\n            }\r\n\r\n            output = main.execute(\"back\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"enter\", \"exit\", \"program\")) {\r\n                return CheckResult.wrong(\"When 'back' command is entered your program \" +\r\n                        \"should stop waiting for student credentials\");\r\n            }\r\n\r\n            output = main.execute(\"exit\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"bye\")) {\r\n                return CheckResult.wrong(\"When the 'exit' command is entered, \" +\r\n                        \"your program should say bye to the user\");\r\n            }\r\n\r\n            if (!main.isFinished()) {\r\n                return CheckResult.wrong(\"After the 'exit' command has been entered, \" +\r\n                        \"your program should stop working\");\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 5)\r\n        CheckResult testAddStudents2() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n\r\n            main.execute(\"add students\");\r\n            for (String input : getCorrectCredentials()) {\r\n                String output = main.execute(input);\r\n                expect(output).toContain(1).lines();\r\n                if (anyMissingKeywords(output, \"student\", \"added\")) {\r\n                    return CheckResult.wrong(\"Expected output: \\\"The student has been added.\\\", but your \" +\r\n                            \"output was: \" + output);\r\n                }\r\n            }\r\n\r\n            String output = main.execute(\"back\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"total\", \"10\", \"students\", \"added\")) {\r\n                return CheckResult.wrong(\"Expected: \\\"Total 10 students have been added.\\\", but \" +\r\n                        \"your output was: \" + output);\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 6)\r\n        CheckResult testAddStudents3() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n            main.execute(\"add students\");\r\n\r\n            for (String[] args : getIncorrectCredentials()) {\r\n                String output = main.execute(args[0]);\r\n                expect(output).toContain(1).lines();\r\n                if (incorrectString(output, args[1])) {\r\n                    return CheckResult.wrong(\"Expected output: \\\"\" + args[1] + \"\\\", but your \" +\r\n                            \"output was: \" + output);\r\n                }\r\n            }\r\n\r\n            String output = main.execute(\"back\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"total\", \"0\", \"students\", \"added\")) {\r\n                return CheckResult.wrong(\"Expected: \\\"Total 0 students have been added.\\\", but \" +\r\n                        \"your output was: \" + output);\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 7)\r\n        CheckResult testFindAll1() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n            main.execute(\"add students\");\r\n            main.execute(\"back\");\r\n\r\n            String output = main.execute(\"list\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"no\", \"found\")) {\r\n                return CheckResult.wrong(\"Expected: \\\"No students found.\\\", but \" +\r\n                        \"your output was: \" + output);\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 8)\r\n        CheckResult testAddDoubles() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n            main.execute(\"add students\");\r\n\r\n            String[] credentials = getRandomCredentials(12);\r\n            for (String arg : credentials) {\r\n                String output = main.execute(arg);\r\n                expect(output).toContain(1).lines();\r\n                if (anyMissingKeywords(output, \"student\", \"added\")) {\r\n                    return CheckResult.wrong(\"Expected output: \\\"The student has been added.\\\", but your \" +\r\n                            \"output was: \" + output);\r\n                }\r\n\r\n                output = main.execute(arg);\r\n                expect(output).toContain(1).lines();\r\n                if (anyMissingKeywords(output, \"this\", \"email\", \"already\", \"taken\")) {\r\n                    return CheckResult.wrong(\"Expected output: \\\"This email is already taken.\\\", but your \" +\r\n                            \"output was: \" + output);\r\n                }\r\n            }\r\n\r\n            String output = main.execute(\"back\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"total\", String.valueOf(credentials.length), \"students\", \"added\")) {\r\n                return CheckResult.wrong(\"Expected: \\\"Total \" + credentials.length + \"students have been added.\\\", but \" +\r\n                        \"your output was: \" + output);\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 9)\r\n        CheckResult testFindAll2() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n            main.execute(\"add students\");\r\n\r\n            String[] credentials = getRandomCredentials(12);\r\n            for (String arg : credentials) {\r\n                String output = main.execute(arg);\r\n                expect(output).toContain(1).lines();\r\n                if (anyMissingKeywords(output, \"student\", \"added\")) {\r\n                    main.stop();\r\n                    return CheckResult.wrong(\"Expected output: \\\"The student has been added.\\\", but your \" +\r\n                            \"output was: \" + output);\r\n                }\r\n            }\r\n\r\n            String output = main.execute(\"back\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"total\", String.valueOf(credentials.length), \"students\", \"added\")) {\r\n                return CheckResult.wrong(\"Expected: \\\"Total \" + credentials.length + \"students have been added.\\\", but \" +\r\n                        \"your output was: \" + output);\r\n            }\r\n\r\n            output = main.execute(\"list\");\r\n            List<String> lines = expect(output).toContain(credentials.length + 1).lines();\r\n            if (!lines.get(0).toLowerCase().contains(\"students\")) {\r\n                return CheckResult.wrong(\"Expected the header \\\"Students:\\\" but your first line was: \" + lines.get(0));\r\n            }\r\n\r\n            List<String> ids = parseIds(lines);\r\n            Set<String> uniqueIds = new HashSet<>(ids);\r\n            if (uniqueIds.size() != ids.size()) {\r\n                return CheckResult.wrong(\"Expected \" + ids.size() +\r\n                        \" unique IDs but found only \" + uniqueIds.size());\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 10)\r\n        CheckResult testBackFromAddPoints() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n\r\n            String output = main.execute(\"add points\");\r\n            expect(output).toContain().lines();\r\n            if (anyMissingKeywords(output, \"enter\", \"id\", \"points\", \"back\", \"return\")) {\r\n                return CheckResult.wrong(\"When 'add points' command is entered, your program should print \" +\r\n                        \"\\\"Enter an id and points or 'back' to return:\\\" but your output was: \" + output);\r\n            }\r\n\r\n            main.execute(\"back\");\r\n            output = main.execute(\"back\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"enter\", \"exit\", \"program\")) {\r\n                return CheckResult.wrong(\"When 'back' command is entered your program \" +\r\n                        \"should stop waiting for student id and points\");\r\n            }\r\n\r\n            output = main.execute(\"exit\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"bye\")) {\r\n                return CheckResult.wrong(\"When the 'exit' command is entered, \" +\r\n                        \"your program should say bye to the user\");\r\n            }\r\n\r\n            if (!main.isFinished()) {\r\n                return CheckResult.wrong(\"After the 'exit' command has been entered, \" +\r\n                        \"your program should stop working\");\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 11)\r\n        CheckResult testStudentPoints1() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n            main.execute(\"add students\");\r\n\r\n            String[] credentials = getRandomCredentials(6);\r\n            for (String arg : credentials) {\r\n                main.execute(arg);\r\n            }\r\n\r\n            main.execute(\"back\");\r\n            String output = main.execute(\"list\");\r\n            List<String> lines = expect(output).toContain().lines();\r\n            List<String> ids = parseIds(lines);\r\n\r\n            main.execute(\"add points\");\r\n            String[] points = getIncorrectPoints();\r\n            for (String point : points) {\r\n                output = main.execute(ids.get(0) + \" \" + point);\r\n                expect(output).toContain(1).lines();\r\n                if (anyMissingKeywords(output, \"incorrect\", \"points\", \"format\")) {\r\n                    return CheckResult.wrong(\"Expected output: \\\"Incorrect points format.\\\", \" +\r\n                            \"but your output was: \" + output);\r\n                }\r\n            }\r\n\r\n            output = main.execute(\"imsurethereisnosuchstudentid 1 1 1 1\");\r\n            expect(output).toContain().lines();\r\n            if (anyMissingKeywords(output, \"no\", \"student\", \"found\") ||\r\n                    !output.contains(\"imsurethereisnosuchstudentid\")) {\r\n                return CheckResult.wrong(\"Expected output was: \\\"No student is found \" +\r\n                        \"for id=imsurethereisnosuchstudentid\\\", but your output was: \" + output);\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 12)\r\n        CheckResult testStudentPoints2() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n            main.execute(\"add students\");\r\n\r\n            String[] credentials = getRandomCredentials(6);\r\n            for (String arg : credentials) {\r\n                main.execute(arg);\r\n            }\r\n            main.execute(\"back\");\r\n\r\n            String output = main.execute(\"list\");\r\n            List<String> lines = expect(output).toContain().lines();\r\n            List<String> ids = parseIds(lines);\r\n\r\n            main.execute(\"add points\");\r\n            String[] points = getCorrectPoints(6);\r\n\r\n            for (int i = 0; i < points.length; i++) {\r\n                output = main.execute(ids.get(i) + \" \" + points[i]);\r\n                expect(output).toContain(1).lines();\r\n                if (anyMissingKeywords(output, \"points\", \"updated\")) {\r\n                    return CheckResult.wrong(\"Expected \\\"Points updated.\\\" but your output was \" + output);\r\n                }\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 13)\r\n        CheckResult testBackFromFind() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n\r\n            String output = main.execute(\"find\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"enter\", \"id\", \"back\", \"return\")) {\r\n                return CheckResult.wrong(\"When 'find' command is entered, you program should \" +\r\n                        \"print \\\"Enter an id or 'back' to return:\\\", but your output was: \" + output);\r\n            }\r\n\r\n            main.execute(\"back\");\r\n            output = main.execute(\"back\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"enter\", \"exit\", \"program\")) {\r\n                return CheckResult.wrong(\"When 'back' command is entered your program \" +\r\n                        \"should stop waiting for student id\");\r\n            }\r\n\r\n            output = main.execute(\"exit\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"bye\")) {\r\n                return CheckResult.wrong(\"When the 'exit' command is entered, \" +\r\n                        \"your program should say bye to the user\");\r\n            }\r\n\r\n            if (!main.isFinished()) {\r\n                return CheckResult.wrong(\"After the 'exit' command has been entered, \" +\r\n                        \"your program should stop working\");\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 14)\r\n        CheckResult testFindByID() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n            main.execute(\"add students\");\r\n\r\n            String[] credentials = getRandomCredentials(5);\r\n            for (String arg : credentials) {\r\n                main.execute(arg);\r\n            }\r\n            main.execute(\"back\");\r\n\r\n            String output = main.execute(\"list\");\r\n            List<String> lines = expect(output).toContain().lines();\r\n            List<String> ids = parseIds(lines);\r\n\r\n            main.execute(\"add points\");\r\n            for (int i = 0; i < ids.size(); i++) {\r\n                main.execute(String.format(\"%s %d %d %d %d\", ids.get(i), i, i, i, i));\r\n                main.execute(String.format(\"%s %d %d %d %d\", ids.get(i), i, i, i, i));\r\n            }\r\n\r\n            main.execute(\"back\");\r\n            output = main.execute(\"find\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"enter\", \"id\", \"back\", \"return\")) {\r\n                return CheckResult.wrong(\"When 'find' command is entered, you program should \" +\r\n                        \"print \\\"Enter an id or 'back' to return:\\\", but your output was: \" + output);\r\n            }\r\n\r\n            for (int i = 0; i < ids.size(); i++) {\r\n                output = main.execute(ids.get(i));\r\n                expect(output).toContain(1).lines();\r\n                String expected = String.format(\r\n                        \"%s points: Java=%d; DSA=%d; Databases=%d; Spring=%d\",\r\n                        ids.get(i), i * 2, i * 2, i * 2, i * 2\r\n                );\r\n                if (incorrectString(output, expected)) {\r\n                    return CheckResult.wrong(\"Expected output: \" + expected +\r\n                            \", but your output was: \" + output);\r\n                }\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        private boolean anyMissingKeywords(String output, String... keywords) {\r\n            List<String> tokens = Arrays.asList(\r\n                    output.trim().toLowerCase().split(\"\\\\W+\")\r\n            );\r\n\r\n            return !tokens.containsAll(Arrays.stream(keywords)\r\n                    .map(String::toLowerCase)\r\n                    .collect(Collectors.toList()));\r\n        }\r\n\r\n        private boolean incorrectString(String output, String expected) {\r\n            String normalizedOutput = output.replaceAll(\"\\\\W+\", \"\").toLowerCase();\r\n            String normalizedModel = expected.replaceAll(\"\\\\W+\", \"\").toLowerCase();\r\n\r\n            return !normalizedOutput.contains(normalizedModel);\r\n        }\r\n\r\n        private String[] getBlankInput() {\r\n            return new String[]{\"\", \"  \", \"\\t\", \" \\t\"};\r\n        }\r\n\r\n        private String[] getUnknownCommands() {\r\n            return new String[]{\"abc\", \"quit\", \"  brexit \", \"exi  t\", \"?\", \"break\",\r\n                    \"-exit\", \"Ctrl+C\", \"exit please\", \":q\"};\r\n        }\r\n\r\n        private String[] getCorrectCredentials() {\r\n            return new String[]{\"John Smith jsmith@hotmail.com\", \"Anny Doolittle anny.md@mail.edu\",\r\n                    \"Jean-Claude O'Connor jcda123@google.net\", \"Mary Emelianenko 125367at@zzz90.z9\",\r\n                    \"Al Owen u15da125@a1s2f4f7.a1c2c5s4\", \"Robert Jemison Van de Graaff robertvdgraaff@mit.edu\",\r\n                    \"Ed Eden a1@a1.a1\", \"na'me s-u ii@ii.ii\", \"n'a me su aa-b'b ab@ab.ab\", \"nA me 1@1.1\"};\r\n        }\r\n\r\n        private String[][] getIncorrectCredentials() {\r\n            return new String[][]{\r\n                    {\"\", \"Incorrect credentials\"}, {\" \\t\", \"Incorrect credentials.\"},\r\n                    {\"name surname\", \"Incorrect credentials.\"},\r\n                    {\"n surname email@email.xyz\", \"Incorrect first name.\"},\r\n                    {\"'name surname email@email.xyz\", \"Incorrect first name.\"},\r\n                    {\"-name surname email@email.xyz\", \"Incorrect first name.\"},\r\n                    {\"name- surname email@email.xyz\", \"Incorrect first name.\"},\r\n                    {\"name' surname email@email.xyz\", \"Incorrect first name.\"},\r\n                    {\"nam-'e surname email@email.xyz\", \"Incorrect first name.\"},\r\n                    {\"na'-me surname email@email.xyz\", \"Incorrect first name.\"},\r\n                    {\"na--me surname email@email.xyz\", \"Incorrect first name.\"},\r\n                    {\"na''me surname email@email.xyz\", \"Incorrect first name.\"},\r\n                    {\"námé surname email@email.xyz\", \"Incorrect first name.\"},\r\n                    {\"name s email@email.xyz\", \"Incorrect last name.\"},\r\n                    {\"name -surname email@email.xyz\", \"Incorrect last name.\"},\r\n                    {\"name 'surname email@email.xyz\", \"Incorrect last name.\"},\r\n                    {\"name surnam''e email@email.xyz\", \"Incorrect last name.\"},\r\n                    {\"name surn--ame email@email.xyz\", \"Incorrect last name.\"},\r\n                    {\"name s'-urname email@email.xyz\", \"Incorrect last name.\"},\r\n                    {\"name su-'rname email@email.xyz\", \"Incorrect last name.\"},\r\n                    {\"name surname- email@email.xyz\", \"Incorrect last name.\"},\r\n                    {\"name surname' email@email.xyz\", \"Incorrect last name.\"},\r\n                    {\"name surnámé email@email.xyz\", \"Incorrect last name.\"},\r\n                    {\"name surname emailemail.xyz\", \"Incorrect email.\"},\r\n                    {\"name surname email@emailxyz\", \"Incorrect email.\"},\r\n                    {\"name surname email@e@mail.xyz\", \"Incorrect email.\"},\r\n            };\r\n        }\r\n\r\n        private String[] getIncorrectPoints() {\r\n            return new String[]{\"\", \"-1 1 1 1\", \"1 1 2 A\", \"1 1 1\", \"1 1 1 1 1\"};\r\n        }\r\n\r\n        private String[] getCorrectPoints(int n) {\r\n            return Stream.generate(String::new)\r\n                    .limit(n)\r\n                    .map(it -> String.format(\"%d %d %d %d\", nextPoint(), nextPoint(), nextPoint(), nextPoint()))\r\n                    .toArray(String[]::new);\r\n        }\r\n\r\n        private int nextPoint() {\r\n            return rnd.nextInt(10) + 1;\r\n        }\r\n\r\n        private List<String> parseIds(List<String> lines) {\r\n            try {\r\n                return lines.stream()\r\n                        .skip(1)\r\n                        .map(String::trim)\r\n                        .collect(Collectors.toList());\r\n            } catch (Exception e) {\r\n                throw new WrongAnswer(\"Error occurred while parsing your output \" + e.getMessage());\r\n            }\r\n        }\r\n\r\n        private List<String> generateNames(int n) {\r\n            List<String> names = List.of(\"Shoshana Utica\", \"Marisa Firman\", \"Gwenette Anagnos\", \"Charlena Girardo\",\r\n                    \"Alexina Belcher\", \"Karee Antoinetta\", \"Dolley Panther\", \"Elysha Quinlan\", \"Trixie Winer\",\r\n                    \"Ricki Trovillion\", \"Amye Uriisa\", \"Hedwig Wally\", \"Gwenette Kironde\", \"Jermaine Naaman\",\r\n                    \"Olga Rosanne\", \"Annecorinne Ause\", \"Aurie Dorisa\", \"Van Fawnia\", \"Carmella Campman\",\r\n                    \"Francesca Francis\", \"Elwira Florrie\", \"Nonna Miko\", \"Natka Herculie\", \"Roxi Hett\", \"Brandise Hardan\",\r\n                    \"Toby Bleier\", \"Dalia Gleeson\", \"Emelia Annnora\", \"Beatrisa Jegar\", \"Barbara-Anne Chicky\",\r\n                    \"Ann Agnella\", \"Lebbie Alabaster\", \"Leola Whelan\", \"Starlin Griz\", \"Anjanette Uis\", \"Tasha Chem\");\r\n\r\n            List<String> selectedNames = new ArrayList<>(names);\r\n            Collections.shuffle(selectedNames);\r\n            return selectedNames.stream().limit(n).collect(Collectors.toList());\r\n        }\r\n\r\n        private List<String> generateEmails(int n) {\r\n            return IntStream.rangeClosed(1, n).mapToObj(it -> \"address\" + it + \"@mail.com\").collect(Collectors.toList());\r\n        }\r\n\r\n        private String[] getRandomCredentials(int n) {\r\n            List<String> names = generateNames(n);\r\n            List<String> emails = generateEmails(n);\r\n            return IntStream.range(0, n)\r\n                    .mapToObj(it -> String.format(\"%s %s\", names.get(it), emails.get(it)))\r\n                    .toArray(String[]::new);\r\n        }\r\n    }\r\n  learner_created: false\r\nfeedback_link: https://hyperskill.org/projects/197/stages/981/implement#comment\r\nstatus: Unchecked\r\nrecord: -1\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Learning Progress Tracker/Learning Progress Tracker/A detailed record/task-info.yaml b/../Learning Progress Tracker/Learning Progress Tracker/A detailed record/task-info.yaml
--- a/../Learning Progress Tracker/Learning Progress Tracker/A detailed record/task-info.yaml	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../Learning Progress Tracker/Learning Progress Tracker/A detailed record/task-info.yaml	(date 1648227988309)
@@ -33,6 +33,7 @@
     package tracker;
 
     import org.junit.jupiter.api.Test;
+    import tracker.commands.AddStudentsCommand;
 
     import static org.junit.jupiter.api.Assertions.*;
 
@@ -40,7 +41,6 @@
 
         @Test
         void test() {
-            assertEquals(5, 2 + 3);
         }
     }
   learner_created: false
@@ -631,6 +631,263 @@
         }
     }
   learner_created: false
-feedback_link: https://hyperskill.org/projects/197/stages/981/implement#comment
-status: Unchecked
-record: -1
+- name: src/tracker/StudentsDataBase.java
+  visible: true
+  text: |
+    package tracker;
+
+    import java.util.ArrayList;
+    import java.util.HashMap;
+    import java.util.List;
+
+    public class StudentsDataBase {
+        private static StudentsDataBase studentsDataBase;
+        private HashMap<String, String[]> db = new HashMap<>();
+
+        private StudentsDataBase() {
+
+        }
+
+        public static StudentsDataBase getStudentsDataBase() {
+            if (studentsDataBase == null) {
+                studentsDataBase = new StudentsDataBase();
+            }
+            return studentsDataBase;
+        }
+
+        public HashMap<String, String[]> getDb() {
+            return db;
+        }
+    }
+  learner_created: true
+- name: src/tracker/Application.java
+  visible: true
+  text: |+
+    package tracker;
+
+    import tracker.commands.*;
+
+    import java.util.Scanner;
+
+    public class Application {
+
+        public static void run() {
+            System.out.println("Learning Progress Tracker");
+
+            Controller controller = new Controller();
+            Command command = null;
+            StudentsDataBase studentsDataBase = StudentsDataBase.getStudentsDataBase();
+
+            try (Scanner scanner = new Scanner(System.in)) {
+                while (scanner.hasNextLine()) {
+                    String input = scanner.nextLine();
+                    if (input.equals("add students")) {
+                        command = new AddStudentsCommand(studentsDataBase);
+                        controller.setCommand(command);
+                    } else if (input.equals("back")) {
+                        command = new BackCommand(studentsDataBase);
+                        controller.setCommand(command);
+                    } else if (input.equals("exit")) {
+                        command = new ExitCommand();
+                        controller.setCommand(command);
+                        controller.executeCommand();
+                        break;
+                    }
+                    if (command != null) {
+                        controller.executeCommand();
+                    } else if (input.isBlank()) {
+                        System.out.println("No input.");
+                    } else System.out.println("Unknown command!");
+                }
+            }
+
+        }
+    }
+
+
+  learner_created: true
+- name: src/tracker/commands/Controller.java
+  visible: true
+  text: |
+    package tracker.commands;
+
+    public class Controller {
+        private Command command;
+
+        public void setCommand(Command command) {
+            this.command = command;
+        }
+
+        public void executeCommand() {
+            command.execute();
+        }
+    }
+  learner_created: true
+- name: src/tracker/commands/BackCommand.java
+  visible: true
+  text: |
+    package tracker.commands;
+
+    import tracker.StudentsDataBase;
+
+    public class BackCommand implements Command {
+        StudentsDataBase studentsDataBase;
+
+        public BackCommand(StudentsDataBase studentsDataBase) {
+            this.studentsDataBase = studentsDataBase;
+        }
+
+        @Override
+        public void execute() {
+            if (studentsDataBase.getDb().isEmpty()) {
+                System.out.println("Enter 'exit' to exit the program.");
+            } else {
+                int count = studentsDataBase.getDb().size();
+                System.out.printf("Total %d students have been added." + "\n", count);
+            }
+        }
+    }
+  learner_created: true
+- name: src/tracker/commands/ExitCommand.java
+  visible: true
+  text: |
+    package tracker.commands;
+
+    public class ExitCommand implements Command{
+        @Override
+        public void execute() {
+            System.out.println("Bye!");
+        }
+    }
+  learner_created: true
+- name: src/tracker/commands/Command.java
+  visible: true
+  text: |
+    package tracker.commands;
+
+    public interface Command {
+        void execute();
+    }
+  learner_created: true
+- name: src/tracker/commands/AddStudentsCommand.java
+  visible: true
+  text: |
+    package tracker.commands;
+
+    import tracker.StudentsDataBase;
+
+    import java.util.Scanner;
+    import java.util.regex.Matcher;
+    import java.util.regex.Pattern;
+
+    public class AddStudentsCommand implements Command {
+        private StudentsDataBase studentsDataBase;
+        private String firstName;
+        private String lastName;
+        private String email;
+
+        public AddStudentsCommand(StudentsDataBase studentsDataBase) {
+            this.studentsDataBase = studentsDataBase;
+        }
+
+        @Override
+        public void execute() {
+            System.out.println("Enter student credentials or 'back' to return:");
+            try (Scanner scanner = new Scanner(System.in)) {
+                while (scanner.hasNextLine()) {
+                    String input = scanner.nextLine();
+                    if (input.equals("back")) {
+                        System.out.printf("Total %d students have been added." + "\n", studentsDataBase.getDb().size());
+                        break;
+                    } else if (input.isBlank()) {
+                        System.out.println("Incorrect credentials.");
+                    } else if (splitter(input)) {
+
+    //                    System.out.println(firstName);
+    //                    System.out.println(lastName);
+    //                    System.out.println(email);
+
+                        if (isCorrectCredentials(firstName, lastName, email)) {
+                            String[] firstLastName = {firstName, lastName};
+                            studentsDataBase.getDb().put(email, firstLastName);
+                            System.out.println("The student has been added.");
+                        }
+                    }
+                }
+            }
+        }
+
+        boolean splitter(String input) {
+            String[] strings = input.split(" ");
+            if (strings.length == 3) {
+                firstName = strings[0];
+                lastName = strings[1];
+                email = strings[2];
+                return true;
+            } else if (strings.length > 3) {
+                firstName = strings[0];
+                email = strings[strings.length - 1];
+                StringBuilder sb = new StringBuilder();
+                for (int i = 1; i < strings.length - 1; i++) {
+                    sb.append(strings[i]).append(" ");
+                }
+                lastName = sb.toString().trim();
+                return true;
+
+            } else {
+                System.out.println("Incorrect credentials.");
+                return false;
+            }
+        }
+
+        boolean isFirstName(String firstName) {
+            Pattern pattern = Pattern.compile("^[a-zA-Z]+[-'][A-Za-z]*\\w$|^[A-Za-z]{2,}$");
+            Matcher matcher = pattern.matcher(firstName.trim());
+            return matcher.matches();
+        }
+
+        boolean isLastName(String lastName) {
+            Pattern pattern = Pattern.compile("^[a-zA-Z]{1,} +(([',. -][a-zA-Z ])?[a-zA-Z]*)*$|^[A-Za-z]+[-][A-Za-z]*\\w$|^[A-Za-z]{2,}$|^[A-Z]['][A-Z][a-z]+$");
+           // Pattern pattern = Pattern.compile("^[A-Z][a-z]*[-][A-Z][a-z]*\\w$|^[A-Z][a-z]+$|^[A-Z]['][A-Z][a-z]+$");
+            Matcher matcher = pattern.matcher(lastName.trim());
+            return matcher.matches();
+        }
+
+        boolean isEmail(String email) {
+            Pattern pattern = Pattern.compile("^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z0-9]{1,8}(?:\\.[a-z0-9]{2})?)$");
+            Matcher matcher = pattern.matcher(email.trim());
+            return matcher.matches();
+        }
+
+        boolean isCorrectCredentials(String firstName, String lastName, String email) {
+            if (!isFirstName(firstName)) {
+                System.out.println("Incorrect first name.");
+                return false;
+            } else if (!isLastName(lastName)) {
+                System.out.println("Incorrect last name.");
+                return false;
+            } else if (!isEmail(email)) {
+                System.out.println("Incorrect email.");
+                return false;
+            } else return true;
+        }
+    }
+  learner_created: true
+- name: src/tracker/commands/ListCommand.java
+  visible: true
+  learner_created: true
+- name: src/tracker/commands/FindCommand.java
+  visible: true
+  learner_created: true
+- name: src/tracker/commands/AddPointsCommand.java
+  visible: true
+  learner_created: true
+- name: src/tracker/Student.java
+  visible: true
+  learner_created: true
+feedback_link: https://hyperskill.org/learn/step/14398#comment
+status: Solved
+feedback:
+  message: Congratulations!
+  time: Fri, 25 Mar 2022 17:05:22 UTC
+record: 3
Index: ../Learning Progress Tracker/Learning Progress Tracker/Retrieving statistics/task-info.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>type: edu\r\nfiles:\r\n- name: src/tracker/Main.java\r\n  visible: true\r\n  text: |\r\n    package tracker;\r\n\r\n    public class Main {\r\n        public static void main(String[] args) {\r\n            System.out.println(\"Hello, World!\");\r\n        }\r\n    }\r\n  learner_created: false\r\n- name: build.gradle\r\n  visible: true\r\n  text: |\r\n    repositories {\r\n        mavenCentral()\r\n    }\r\n\r\n    dependencies {\r\n        testImplementation 'org.junit.jupiter:junit-jupiter:5.7.1'\r\n        testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.7.1'\r\n    }\r\n\r\n    test {\r\n        useJUnitPlatform()\r\n    }\r\n  learner_created: false\r\n- name: test/tracker/SampleTest.java\r\n  visible: true\r\n  text: |\r\n    package tracker;\r\n\r\n    import org.junit.jupiter.api.Test;\r\n\r\n    import static org.junit.jupiter.api.Assertions.*;\r\n\r\n    public class SampleTest {\r\n\r\n        @Test\r\n        void test() {\r\n            assertEquals(5, 2 + 3);\r\n        }\r\n    }\r\n  learner_created: false\r\n- name: test/LearningProgressTrackerTest.java\r\n  visible: false\r\n  text: |\r\n    import org.hyperskill.hstest.dynamic.DynamicTest;\r\n    import org.hyperskill.hstest.exception.outcomes.WrongAnswer;\r\n    import org.hyperskill.hstest.stage.StageTest;\r\n    import org.hyperskill.hstest.testcase.CheckResult;\r\n    import org.hyperskill.hstest.testing.TestedProgram;\r\n\r\n    import java.util.ArrayList;\r\n    import java.util.Arrays;\r\n    import java.util.Collections;\r\n    import java.util.HashSet;\r\n    import java.util.List;\r\n    import java.util.Random;\r\n    import java.util.Set;\r\n    import java.util.function.Predicate;\r\n    import java.util.stream.Collectors;\r\n    import java.util.stream.IntStream;\r\n    import java.util.stream.Stream;\r\n\r\n    import static org.hyperskill.hstest.testing.expect.Expectation.expect;\r\n\r\n    public class LearningProgressTrackerTest extends StageTest<String> {\r\n        private static final Random rnd = new Random();\r\n\r\n        @DynamicTest(order = 1)\r\n        CheckResult testStartAndExit() {\r\n            TestedProgram main = new TestedProgram();\r\n            String output = main.start();\r\n            expect(output).toContain(1).lines();\r\n            if (incorrectString(output, \"Learning Progress Tracker\")) {\r\n                return CheckResult.wrong(\"When started, your program \" +\r\n                        \"should print \\\"Learning Progress Tracker\\\"\");\r\n            }\r\n\r\n            if (!main.isWaitingInput()) {\r\n                return CheckResult.wrong(\"After the start, your program should \" +\r\n                        \"be ready to accept commands from the user\");\r\n            }\r\n\r\n            output = main.execute(\"back\");\r\n            expect(output).toContain(1).lines();\r\n            if (!main.isWaitingInput()) {\r\n                return CheckResult.wrong(\"Your program should keep running after the 'back' \" +\r\n                        \"command is entered\");\r\n            }\r\n\r\n            if (anyMissingKeywords(output, \"enter\", \"exit\", \"program\")) {\r\n                return CheckResult.wrong(\"When 'back' command is entered your program \" +\r\n                        \"should print the hint \\\"Enter 'exit' to exit the program.\\\"\");\r\n            }\r\n\r\n            output = main.execute(\"exit\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"bye\")) {\r\n                return CheckResult.wrong(\"When the 'exit' command is entered, \" +\r\n                        \"your program should say bye to the user\");\r\n            }\r\n\r\n            if (!main.isFinished()) {\r\n                return CheckResult.wrong(\"After the 'exit' command has been entered, \" +\r\n                        \"your program should stop working\");\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 2, data = \"getBlankInput\")\r\n        CheckResult testBlankInput(String input) {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n\r\n            String output = main.execute(input);\r\n            expect(output).toContain(1).lines();\r\n            if (incorrectString(output, \"no input\")) {\r\n                return CheckResult.wrong(\"When the user enters an empty or blank \" +\r\n                        \"string, your program should print \\\"No input.\\\"\");\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 3, data = \"getUnknownCommands\")\r\n        CheckResult testUnknownCommands(String input) {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n\r\n            String output = main.execute(input);\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"unknown\", \"command\")) {\r\n                return CheckResult.wrong(\"When an unknown command is entered, your \" +\r\n                        \"program should display an error message: \\\"Unknown command!\\\"\");\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 4)\r\n        CheckResult testAddStudents1() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n\r\n            String output = main.execute(\"add students\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output,\r\n                    \"enter\", \"student\", \"credentials\", \"back\", \"return\")) {\r\n                return CheckResult.wrong(\"When 'add students' command is entered, your \" +\r\n                        \"program should display the prompt \\\"Enter student credentials or \" +\r\n                        \"'back' to return:\\\"\");\r\n            }\r\n\r\n            output = main.execute(\"exit\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"incorrect\", \"credentials\")) {\r\n                return CheckResult.wrong(\"Expected output: \\\"Incorrect credentials.\\\", \" +\r\n                        \"but your output was: \" + output);\r\n            }\r\n\r\n            output = main.execute(\"back\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"total\", \"0\", \"students\", \"added\")) {\r\n                return CheckResult.wrong(\"Expected: \\\"Total 0 students have been added.\\\", but \" +\r\n                        \"your output was: \" + output);\r\n            }\r\n\r\n            output = main.execute(\"back\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"enter\", \"exit\", \"program\")) {\r\n                return CheckResult.wrong(\"When 'back' command is entered your program \" +\r\n                        \"should stop waiting for student credentials\");\r\n            }\r\n\r\n            output = main.execute(\"exit\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"bye\")) {\r\n                return CheckResult.wrong(\"When the 'exit' command is entered, \" +\r\n                        \"your program should say bye to the user\");\r\n            }\r\n\r\n            if (!main.isFinished()) {\r\n                return CheckResult.wrong(\"After the 'exit' command has been entered, \" +\r\n                        \"your program should stop working\");\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 5)\r\n        CheckResult testAddStudents2() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n\r\n            main.execute(\"add students\");\r\n            for (String input : getCorrectCredentials()) {\r\n                String output = main.execute(input);\r\n                expect(output).toContain(1).lines();\r\n                if (anyMissingKeywords(output, \"student\", \"added\")) {\r\n                    return CheckResult.wrong(\"Expected output: \\\"The student has been added.\\\", but your \" +\r\n                            \"output was: \" + output);\r\n                }\r\n            }\r\n\r\n            String output = main.execute(\"back\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"total\", \"10\", \"students\", \"added\")) {\r\n                return CheckResult.wrong(\"Expected: \\\"Total 10 students have been added.\\\", but \" +\r\n                        \"your output was: \" + output);\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 6)\r\n        CheckResult testAddStudents3() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n            main.execute(\"add students\");\r\n\r\n            for (String[] args : getIncorrectCredentials()) {\r\n                String output = main.execute(args[0]);\r\n                expect(output).toContain(1).lines();\r\n                if (incorrectString(output, args[1])) {\r\n                    return CheckResult.wrong(\"Expected output: \\\"\" + args[1] + \"\\\", but your \" +\r\n                            \"output was: \" + output);\r\n                }\r\n            }\r\n\r\n            String output = main.execute(\"back\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"total\", \"0\", \"students\", \"added\")) {\r\n                return CheckResult.wrong(\"Expected: \\\"Total 0 students have been added.\\\", but \" +\r\n                        \"your output was: \" + output);\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 7)\r\n        CheckResult testFindAll1() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n            main.execute(\"add students\");\r\n            main.execute(\"back\");\r\n\r\n            String output = main.execute(\"list\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"no\", \"found\")) {\r\n                return CheckResult.wrong(\"Expected: \\\"No students found.\\\", but \" +\r\n                        \"your output was: \" + output);\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 8)\r\n        CheckResult testAddDoubles() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n            main.execute(\"add students\");\r\n\r\n            List<String> credentials = getRandomCredentials(12);\r\n            for (String arg : credentials) {\r\n                String output = main.execute(arg);\r\n                expect(output).toContain(1).lines();\r\n                if (anyMissingKeywords(output, \"student\", \"added\")) {\r\n                    return CheckResult.wrong(\"Expected output: \\\"The student has been added.\\\", but your \" +\r\n                            \"output was: \" + output);\r\n                }\r\n\r\n                output = main.execute(arg);\r\n                expect(output).toContain(1).lines();\r\n                if (anyMissingKeywords(output, \"this\", \"email\", \"already\", \"taken\")) {\r\n                    return CheckResult.wrong(\"Expected output: \\\"This email is already taken.\\\", but your \" +\r\n                            \"output was: \" + output);\r\n                }\r\n            }\r\n\r\n            String output = main.execute(\"back\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"total\", String.valueOf(credentials.size()), \"students\", \"added\")) {\r\n                return CheckResult.wrong(\"Expected: \\\"Total \" + credentials.size() + \"students have been added.\\\", but \" +\r\n                        \"your output was: \" + output);\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 9)\r\n        CheckResult testFindAll2() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n            main.execute(\"add students\");\r\n\r\n            List<String> credentials = getRandomCredentials(12);\r\n            for (String arg : credentials) {\r\n                String output = main.execute(arg);\r\n                expect(output).toContain(1).lines();\r\n                if (anyMissingKeywords(output, \"student\", \"added\")) {\r\n                    main.stop();\r\n                    return CheckResult.wrong(\"Expected output: \\\"The student has been added.\\\", but your \" +\r\n                            \"output was: \" + output);\r\n                }\r\n            }\r\n\r\n            String output = main.execute(\"back\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"total\", String.valueOf(credentials.size()), \"students\", \"added\")) {\r\n                return CheckResult.wrong(\"Expected: \\\"Total \" + credentials.size() + \"students have been added.\\\", but \" +\r\n                        \"your output was: \" + output);\r\n            }\r\n\r\n            output = main.execute(\"list\");\r\n            List<String> lines = expect(output).toContain(credentials.size() + 1).lines();\r\n            if (!lines.get(0).toLowerCase().contains(\"students\")) {\r\n                return CheckResult.wrong(\"Expected the header \\\"Students:\\\" but your first line was: \" + lines.get(0));\r\n            }\r\n\r\n            List<String> ids = parseIds(lines);\r\n            Set<String> uniqueIds = new HashSet<>(ids);\r\n            if (uniqueIds.size() != ids.size()) {\r\n                return CheckResult.wrong(\"Expected \" + ids.size() +\r\n                        \" unique IDs but found only \" + uniqueIds.size());\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 10)\r\n        CheckResult testBackFromAddPoints() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n\r\n            String output = main.execute(\"add points\");\r\n            expect(output).toContain().lines();\r\n            if (anyMissingKeywords(output, \"enter\", \"id\", \"points\", \"back\", \"return\")) {\r\n                return CheckResult.wrong(\"When 'add points' command is entered, your program should print \" +\r\n                        \"\\\"Enter an id and points or 'back' to return:\\\" but your output was: \" + output);\r\n            }\r\n\r\n            main.execute(\"back\");\r\n            output = main.execute(\"back\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"enter\", \"exit\", \"program\")) {\r\n                return CheckResult.wrong(\"When 'back' command is entered your program \" +\r\n                        \"should stop waiting for student id and points\");\r\n            }\r\n\r\n            output = main.execute(\"exit\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"bye\")) {\r\n                return CheckResult.wrong(\"When the 'exit' command is entered, \" +\r\n                        \"your program should say bye to the user\");\r\n            }\r\n\r\n            if (!main.isFinished()) {\r\n                return CheckResult.wrong(\"After the 'exit' command has been entered, \" +\r\n                        \"your program should stop working\");\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 11)\r\n        CheckResult testStudentPoints1() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n            main.execute(\"add students\");\r\n\r\n            List<String> credentials = getRandomCredentials(6);\r\n            for (String arg : credentials) {\r\n                main.execute(arg);\r\n            }\r\n\r\n            main.execute(\"back\");\r\n            String output = main.execute(\"list\");\r\n            List<String> lines = expect(output).toContain().lines();\r\n            List<String> ids = parseIds(lines);\r\n\r\n            main.execute(\"add points\");\r\n            String[] points = getIncorrectPoints();\r\n            for (String point : points) {\r\n                output = main.execute(ids.get(0) + \" \" + point);\r\n                expect(output).toContain().lines();\r\n                if (anyMissingKeywords(output, \"incorrect\", \"format\")) {\r\n                    return CheckResult.wrong(\"Expected output: \\\"Incorrect points format.\\\", but your output was: \" + output);\r\n                }\r\n            }\r\n\r\n            output = main.execute(\"imsurethereisnosuchstudentid 1 1 1 1\");\r\n            expect(output).toContain().lines();\r\n            if (anyMissingKeywords(output, \"no\", \"student\", \"found\") ||\r\n                    !output.contains(\"imsurethereisnosuchstudentid\")) {\r\n                return CheckResult.wrong(\"Expected output was: \\\"No student is found \" +\r\n                        \"for id=imsurethereisnosuchstudentid.\\\" but your output was: \" + output);\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 12)\r\n        CheckResult testStudentPoints2() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n            main.execute(\"add students\");\r\n\r\n            List<String> credentials = getRandomCredentials(6);\r\n            for (String arg : credentials) {\r\n                main.execute(arg);\r\n            }\r\n            main.execute(\"back\");\r\n\r\n            String output = main.execute(\"list\");\r\n            List<String> lines = expect(output).toContain().lines();\r\n            List<String> ids = parseIds(lines);\r\n\r\n            main.execute(\"add points\");\r\n            String[] points = getCorrectPoints(6);\r\n\r\n            for (int i = 0; i < points.length; i++) {\r\n                output = main.execute(ids.get(i) + \" \" + points[i]);\r\n                expect(output).toContain(1).lines();\r\n                if (anyMissingKeywords(output, \"points\", \"updated\")) {\r\n                    return CheckResult.wrong(\"Expected \\\"Points updated.\\\" but your output was \" + output);\r\n                }\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 13)\r\n        CheckResult testBackFromFind() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n\r\n            String output = main.execute(\"find\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"enter\", \"id\", \"back\", \"return\")) {\r\n                return CheckResult.wrong(\"When 'find' command is entered, you program should \" +\r\n                        \"print \\\"Enter an id or 'back' to return:\\\", but your output was: \" + output);\r\n            }\r\n\r\n            main.execute(\"back\");\r\n            output = main.execute(\"back\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"enter\", \"exit\", \"program\")) {\r\n                return CheckResult.wrong(\"When 'back' command is entered your program \" +\r\n                        \"should stop waiting for student id\");\r\n            }\r\n\r\n            output = main.execute(\"exit\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"bye\")) {\r\n                return CheckResult.wrong(\"When the 'exit' command is entered, \" +\r\n                        \"your program should say bye to the user\");\r\n            }\r\n\r\n            if (!main.isFinished()) {\r\n                return CheckResult.wrong(\"After the 'exit' command has been entered, \" +\r\n                        \"your program should stop working\");\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 14)\r\n        CheckResult testFindByID() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n            main.execute(\"add students\");\r\n\r\n            List<String> credentials = getRandomCredentials(5);\r\n            for (String arg : credentials) {\r\n                main.execute(arg);\r\n            }\r\n            main.execute(\"back\");\r\n\r\n            String output = main.execute(\"list\");\r\n            List<String> lines = expect(output).toContain().lines();\r\n            List<String> ids = parseIds(lines);\r\n\r\n            main.execute(\"add points\");\r\n            for (int i = 0; i < ids.size(); i++) {\r\n                main.execute(String.format(\"%s %d %d %d %d\", ids.get(i), i, i, i, i));\r\n                main.execute(String.format(\"%s %d %d %d %d\", ids.get(i), i, i, i, i));\r\n            }\r\n\r\n            main.execute(\"back\");\r\n            output = main.execute(\"find\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"enter\", \"id\", \"back\", \"return\")) {\r\n                return CheckResult.wrong(\"When 'find' command is entered, you program should \" +\r\n                        \"print \\\"Enter an id or 'back' to return:\\\", but your output was: \" + output);\r\n            }\r\n\r\n            for (int i = 0; i < ids.size(); i++) {\r\n                output = main.execute(ids.get(i));\r\n                expect(output).toContain(1).lines();\r\n                String expected = String.format(\r\n                        \"%s points: Java=%d; DSA=%d; Databases=%d; Spring=%d\",\r\n                        ids.get(i), i * 2, i * 2, i * 2, i * 2\r\n                );\r\n                if (incorrectString(output, expected)) {\r\n                    return CheckResult.wrong(\"Expected output: \" + expected +\r\n                            \", but your output was: \" + output);\r\n                }\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 15)\r\n        CheckResult testBackFromStatistics() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n\r\n            String output = main.execute(\"statistics\");\r\n            main.execute(\"back\");\r\n            output = main.execute(\"back\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"enter\", \"exit\", \"program\")) {\r\n                return CheckResult.wrong(\"When 'back' command is entered your program \" +\r\n                        \"should stop waiting for student id\");\r\n            }\r\n\r\n            output = main.execute(\"exit\");\r\n            expect(output).toContain(1).lines();\r\n            if (anyMissingKeywords(output, \"bye\")) {\r\n                return CheckResult.wrong(\"When the 'exit' command is entered, \" +\r\n                        \"your program should say bye to the user\");\r\n            }\r\n\r\n            if (!main.isFinished()) {\r\n                return CheckResult.wrong(\"After the 'exit' command has been entered, \" +\r\n                        \"your program should stop working\");\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 16)\r\n        CheckResult testStatistics1() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n\r\n            String output = main.execute(\"statistics\");\r\n            String[] lines = Arrays.stream(output.split(\"\\n\"))\r\n                    .filter(Predicate.not(String::isBlank))\r\n                    .toArray(String[]::new);\r\n\r\n            if (anyMissingKeywords(lines[0], \"course\", \"details\", \"back\", \"quit\")) {\r\n                return CheckResult.wrong(\"When the \\\"statistics\\\" command is entered, your \" +\r\n                        \"program must print: \\\"Type the name of a course to see details or 'back' \" +\r\n                        \"to quit:\\\", but your output was: \" + lines[0]);\r\n            }\r\n\r\n            if (lines.length < 7) {\r\n                return CheckResult.wrong(\"Your program should print a header and 6 \" +\r\n                        \"categories, but you printed only \" + lines.length + \" lines\");\r\n            }\r\n\r\n            List<String> categories = List.of(\"Most popular: n/a\", \"Least popular: n/a\",\r\n                    \"Highest activity: n/a\", \"Lowest activity: n/a\", \"Easiest course: n/a\",\r\n                    \"Hardest course: n/a\");\r\n            for (int i = 0; i < categories.size(); i++) {\r\n                if (incorrectString(lines[i + 1], categories.get(i))) {\r\n                    return CheckResult.wrong(\"Expected: \" + categories.get(i) +\r\n                            \", but your output was \" + lines[i + 1]);\r\n                }\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 17)\r\n        CheckResult testStatistics2() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n            main.execute(\"statistics\");\r\n\r\n            List<String> courses = List.of(\"Java\", \"DSA\", \"Databases\", \"Spring\");\r\n            for (String course : courses) {\r\n                String output = main.execute(course);\r\n                String[] lines = output.split(\"\\n\");\r\n                if (lines.length < 2) {\r\n                    return CheckResult.wrong(\"Expected 2 lines, but your output was only \" + lines.length + \" lines.\");\r\n                }\r\n\r\n                if (incorrectString(lines[0], course.toLowerCase())) {\r\n                    return CheckResult.wrong(\"Your first line should be \" + course + \", but your output was \" + lines[0]);\r\n                }\r\n\r\n                if (anyMissingKeywords(lines[1], \"id\", \"points\", \"completed\")) {\r\n                    return CheckResult.wrong(\"Your second line should be \\\"id\\tpoints\\tcompleted\\\", \" +\r\n                            \"but your output was \" + lines[1]);\r\n                }\r\n            }\r\n\r\n            List<String> unknown = Arrays.stream(getUnknownCommands())\r\n                    .filter(str -> courses.stream().noneMatch(it -> it.trim().equalsIgnoreCase(str)))\r\n                    .collect(Collectors.toList());\r\n\r\n            for (String course : unknown) {\r\n                String output = main.execute(course);\r\n                if (incorrectString(output, \"unknown course\")) {\r\n                    return CheckResult.wrong(\"Expected output: \\\"Unknown course.\\\", but your output was: \" + output);\r\n                }\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 18)\r\n        CheckResult testStatistics3() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n            main.execute(\"statistics\");\r\n\r\n            main.execute(\"back\");\r\n            if (!main.isWaitingInput()) {\r\n                return CheckResult.wrong(\"Your program should keep running after the 'back' \" +\r\n                        \"command is entered\");\r\n            }\r\n\r\n            String output = main.execute(\"back\");\r\n            if (anyMissingKeywords(output, \"enter\", \"exit\", \"program\")) {\r\n                return CheckResult.wrong(\"When 'back' command is entered your program \" +\r\n                        \"should print the hint \\\"Enter 'exit' to exit the program.\\\"\");\r\n            }\r\n\r\n            output = main.execute(\"exit\");\r\n            if (anyMissingKeywords(output, \"bye\")) {\r\n                return CheckResult.wrong(\"When the 'exit' command is entered, \" +\r\n                        \"your program should say bye to the user\");\r\n            }\r\n\r\n            if (!main.isFinished()) {\r\n                return CheckResult.wrong(\"After the 'exit' command has been entered, \" +\r\n                        \"your program should stop working\");\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 19)\r\n        CheckResult testCategories1() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n            main.execute(\"add students\");\r\n\r\n            getRandomCredentials(4).forEach(main::execute);\r\n\r\n            main.execute(\"back\");\r\n            String output = main.execute(\"list\");\r\n            List<String> lines = expect(output).toContain().lines();\r\n            List<String> ids = parseIds(lines);\r\n\r\n            main.execute(\"add points\");\r\n            for (String id : ids) {\r\n                main.execute(String.format(\"%s 5 4 3 1\", id));\r\n            }\r\n\r\n            main.execute(\"back\");\r\n            lines = expect(main.execute(\"statistics\")).toContain().lines();\r\n\r\n            if (anyMissingKeywords(lines.get(1), \"java\", \"dsa\", \"databases\", \"spring\")) {\r\n                return CheckResult.wrong(\"Expected most popular: Java, DSA, Databases, Spring, \" +\r\n                        \"but your output was: \" + lines.get(1));\r\n            }\r\n\r\n            if (!lines.get(2).toLowerCase().contains(\"n/a\")) {\r\n                return CheckResult.wrong(\"Expected least popular: n/a, \" +\r\n                        \"but your output was: \" + lines.get(2));\r\n            }\r\n\r\n            if (anyMissingKeywords(lines.get(3), \"java\", \"dsa\", \"databases\", \"spring\")) {\r\n                return CheckResult.wrong(\"Expected top activity: Java, DSA, Databases, Spring, \" +\r\n                        \"but your output was: \" + lines.get(3));\r\n            }\r\n\r\n            if (!lines.get(4).contains(\"n/a\")) {\r\n                return CheckResult.wrong(\"Expected lowest activity: n/a, \" +\r\n                        \"but your output was: \" + lines.get(4));\r\n            }\r\n\r\n            if (anyMissingKeywords(lines.get(5), \"java\")) {\r\n                return CheckResult.wrong(\"Expected easiest course: Java, \" +\r\n                        \"but your output was: \" + lines.get(5));\r\n            }\r\n\r\n            if (anyMissingKeywords(lines.get(6), \"Spring\")) {\r\n                return CheckResult.wrong(\"Expected hardest course: Spring, \" +\r\n                        \"but your output was: \" + lines.get(6));\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 20)\r\n        CheckResult testCategories2() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n            main.execute(\"add students\");\r\n\r\n            getRandomCredentials(4).forEach(main::execute);\r\n\r\n            main.execute(\"back\");\r\n            List<String> lines = expect(main.execute(\"list\")).toContain().lines();\r\n            List<String> ids = parseIds(lines);\r\n\r\n            main.execute(\"add points\");\r\n            main.execute(String.format(\"%s 10 10 10 10\", ids.get(0)));\r\n            main.execute(String.format(\"%s 5 5 5 5\", ids.get(1)));\r\n            main.execute(String.format(\"%s 5 5 5 5\", ids.get(2)));\r\n            main.execute(String.format(\"%s 2 2 2 2\", ids.get(3)));\r\n\r\n            main.execute(\"back\");\r\n            main.execute(\"statistics\");\r\n\r\n            List<String> linesJava = expect(main.execute(\"Java\")).toContain(6).lines();\r\n            List<String> linesDsa = expect(main.execute(\"DSA\")).toContain(6).lines();\r\n            List<String> linesDb = expect(main.execute(\"Databases\")).toContain(6).lines();\r\n            List<String> linesSpring = expect(main.execute(\"Spring\")).toContain(6).lines();\r\n\r\n            if (!linesJava.get(2).matches(\".+\\\\s+10\\\\s+1\\\\.7\\\\s?%.*\") ||\r\n                    !linesJava.get(3).matches(\".+\\\\s+5\\\\s+0\\\\.8\\\\s?%.*\") ||\r\n                    !linesJava.get(4).matches(\".+\\\\s+5\\\\s+0\\\\.8\\\\s?%.*\") ||\r\n                    !linesJava.get(5).matches(\".+\\\\s+2\\\\s+0\\\\.3\\\\s?%.*\") ||\r\n                    !linesJava.get(2).startsWith(ids.get(0)) ||\r\n                    !linesJava.get(3).startsWith(ids.get(1)) && !linesJava.get(3).startsWith(ids.get(2)) ||\r\n                    !linesJava.get(4).startsWith(ids.get(1)) && !linesJava.get(4).startsWith(ids.get(2)) ||\r\n                    !linesJava.get(5).startsWith(ids.get(3)) ||\r\n                    linesJava.get(3).startsWith(ids.get(1)) && ids.get(1).compareTo(ids.get(2)) >= 0 ||\r\n                    linesJava.get(3).startsWith(ids.get(2)) && ids.get(2).compareTo(ids.get(1)) >= 0) {\r\n                return CheckResult.wrong(\"Your Java student list either contains incorrect data or is incorrectly sorted\");\r\n            }\r\n\r\n            if (!linesDsa.get(2).matches(\".+\\\\s+10\\\\s+2\\\\.5\\\\s?%.*\") ||\r\n                    !linesDsa.get(3).matches(\".+\\\\s+5\\\\s+1\\\\.3\\\\s?%.*\") ||\r\n                    !linesDsa.get(4).matches(\".+\\\\s+5\\\\s+1\\\\.3\\\\s?%.*\") ||\r\n                    !linesDsa.get(5).matches(\".+\\\\s+2\\\\s+0\\\\.5\\\\s?%.*\") ||\r\n                    !linesDsa.get(2).startsWith(ids.get(0)) ||\r\n                    !linesDsa.get(3).startsWith(ids.get(1)) && !linesDsa.get(3).startsWith(ids.get(2)) ||\r\n                    !linesDsa.get(4).startsWith(ids.get(1)) && !linesDsa.get(4).startsWith(ids.get(2)) ||\r\n                    !linesDsa.get(5).startsWith(ids.get(3)) ||\r\n                    linesDsa.get(3).startsWith(ids.get(1)) && ids.get(1).compareTo(ids.get(2)) >= 0 ||\r\n                    linesDsa.get(3).startsWith(ids.get(2)) && ids.get(2).compareTo(ids.get(1)) >= 0) {\r\n                return CheckResult.wrong(\"Your DSA student list either contains incorrect data or is incorrectly sorted\");\r\n            }\r\n\r\n            if (!linesDb.get(2).matches(\".+\\\\s+10\\\\s+2\\\\.1\\\\s?%.*\") ||\r\n                    !linesDb.get(3).matches(\".+\\\\s+5\\\\s+1\\\\.0\\\\s?%.*\") ||\r\n                    !linesDb.get(4).matches(\".+\\\\s+5\\\\s+1\\\\.0\\\\s?%.*\") ||\r\n                    !linesDb.get(5).matches(\".+\\\\s+2\\\\s+0\\\\.4\\\\s?%.*\") ||\r\n                    !linesDb.get(2).startsWith(ids.get(0)) ||\r\n                    !linesDb.get(3).startsWith(ids.get(1)) && !linesDb.get(3).startsWith(ids.get(2)) ||\r\n                    !linesDb.get(4).startsWith(ids.get(1)) && !linesDb.get(4).startsWith(ids.get(2)) ||\r\n                    !linesDb.get(5).startsWith(ids.get(3)) ||\r\n                    linesDb.get(3).startsWith(ids.get(1)) && ids.get(1).compareTo(ids.get(2)) >= 0 ||\r\n                    linesDb.get(3).startsWith(ids.get(2)) && ids.get(2).compareTo(ids.get(1)) >= 0) {\r\n                return CheckResult.wrong(\"Your Databases student list either contains incorrect data \" +\r\n                        \"or is incorrectly sorted\");\r\n            }\r\n\r\n            if (!linesSpring.get(2).matches(\".+\\\\s+10\\\\s+1\\\\.8\\\\s?%.*\") ||\r\n                    !linesSpring.get(3).matches(\".+\\\\s+5\\\\s+0\\\\.9\\\\s?%.*\") ||\r\n                    !linesSpring.get(4).matches(\".+\\\\s+5\\\\s+0\\\\.9\\\\s?%.*\") ||\r\n                    !linesSpring.get(5).matches(\".+\\\\s+2\\\\s+0\\\\.4\\\\s?%.*\") ||\r\n                    !linesSpring.get(2).startsWith(ids.get(0)) ||\r\n                    !linesSpring.get(3).startsWith(ids.get(1)) && !linesSpring.get(3).startsWith(ids.get(2)) ||\r\n                    !linesSpring.get(4).startsWith(ids.get(1)) && !linesSpring.get(4).startsWith(ids.get(2)) ||\r\n                    !linesSpring.get(5).startsWith(ids.get(3)) ||\r\n                    linesSpring.get(3).startsWith(ids.get(1)) && ids.get(1).compareTo(ids.get(2)) >= 0 ||\r\n                    linesSpring.get(3).startsWith(ids.get(2)) && ids.get(2).compareTo(ids.get(1)) >= 0) {\r\n                return CheckResult.wrong(\"Your Spring student list either contains incorrect data \" +\r\n                        \"or is incorrectly sorted\");\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 21)\r\n        CheckResult testCategories3() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start();\r\n            main.execute(\"add students\");\r\n\r\n            main.execute(\"John Doe johnd@email.net\");\r\n            main.execute(\"Jane Spark jspark@yahoo.com\");\r\n            main.execute(\"back\");\r\n\r\n            List<String> lines = expect(main.execute(\"list\")).toContain().lines();\r\n            List<String> ids = parseIds(lines);\r\n\r\n            main.execute(\"add points\");\r\n            main.execute(String.format(\"%s 8 7 7 5\", ids.get(0)));\r\n            main.execute(String.format(\"%s 7 6 9 7\", ids.get(0)));\r\n            main.execute(String.format(\"%s 6 5 5 0\", ids.get(0)));\r\n            main.execute(String.format(\"%s 8 0 8 6\", ids.get(1)));\r\n            main.execute(String.format(\"%s 7 0 0 0\", ids.get(1)));\r\n            main.execute(String.format(\"%s 9 0 0 5\", ids.get(1)));\r\n\r\n            main.execute(\"back\");\r\n            main.execute(\"statistics\");\r\n\r\n            List<String> linesJava = expect(main.execute(\"Java\")).toContain(4).lines();\r\n            List<String> linesDsa = expect(main.execute(\"DSA\")).toContain(3).lines();\r\n            List<String> linesDb = expect(main.execute(\"Databases\")).toContain(4).lines();\r\n            List<String> linesSpring = expect(main.execute(\"Spring\")).toContain(4).lines();\r\n\r\n            if (!linesJava.get(2).matches(\".+\\\\s+24\\\\s+4\\\\.0\\\\s?%.*\") ||\r\n                    !linesJava.get(3).matches(\".+\\\\s+21\\\\s+3\\\\.5\\\\s?%.*\") ||\r\n                    !linesJava.get(2).startsWith(ids.get(1)) || !linesJava.get(3).startsWith(ids.get(0))) {\r\n                return CheckResult.wrong(\"Your Java student list either contains incorrect data or is incorrectly sorted\");\r\n            }\r\n\r\n            if (!linesDsa.get(2).matches(\".+\\\\s+18\\\\s+4\\\\.5\\\\s?%.*\") || !linesDsa.get(2).startsWith(ids.get(0))) {\r\n                return CheckResult.wrong(\"Your DSA student list either contains incorrect data or is incorrectly sorted\");\r\n            }\r\n\r\n            if (!linesDb.get(2).matches(\".+\\\\s+21\\\\s+4\\\\.4\\\\s?%.*\") ||\r\n                    !linesDb.get(3).matches(\".+\\\\s+8\\\\s+1\\\\.7\\\\s?%.*\") ||\r\n                    !linesDb.get(2).startsWith(ids.get(0)) || !linesDb.get(3).startsWith(ids.get(1))) {\r\n                return CheckResult.wrong(\"Your Databases student list either contains incorrect data \" +\r\n                        \"or is incorrectly sorted\");\r\n            }\r\n\r\n            if (!linesSpring.get(2).matches(\".+\\\\s+12\\\\s+2\\\\.2\\\\s?%.*\") ||\r\n                    !linesSpring.get(3).matches(\".+\\\\s+11\\\\s+2\\\\.0\\\\s?%.*\") ||\r\n                    !linesSpring.get(2).startsWith(ids.get(0)) || !linesSpring.get(3).startsWith(ids.get(1))) {\r\n                return CheckResult.wrong(\"Your Spring student list either contains incorrect data \" +\r\n                        \"or is incorrectly sorted\");\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        private boolean anyMissingKeywords(String output, String... keywords) {\r\n            List<String> tokens = Arrays.asList(\r\n                    output.trim().toLowerCase().split(\"\\\\W+\")\r\n            );\r\n\r\n            return !tokens.containsAll(Arrays.stream(keywords)\r\n                    .map(String::toLowerCase)\r\n                    .collect(Collectors.toList()));\r\n        }\r\n\r\n        private boolean incorrectString(String output, String model) {\r\n            String normalizedOutput = output.replaceAll(\"\\\\W+\", \"\").toLowerCase();\r\n            String normalizedModel = model.replaceAll(\"\\\\W+\", \"\").toLowerCase();\r\n\r\n            return !normalizedOutput.contains(normalizedModel);\r\n        }\r\n\r\n        private String[] getBlankInput() {\r\n            return new String[]{\"\", \"  \", \"\\t\", \" \\t\"};\r\n        }\r\n\r\n        private String[] getUnknownCommands() {\r\n            return new String[]{\"abc\", \"quit\", \"  brexit \", \"exi  t\", \"?\", \"break\",\r\n                    \"-exit\", \"Ctrl+C\", \"exit please\", \":q\", \"java\", \"spring\", \"dsa\", \"databases\"};\r\n        }\r\n\r\n        private String[] getCorrectCredentials() {\r\n            return new String[]{\"John Smith jsmith@hotmail.com\", \"Anny Doolittle anny.md@mail.edu\",\r\n                    \"Jean-Claude O'Connor jcda123@google.net\", \"Mary Emelianenko 125367at@zzz90.z9\",\r\n                    \"Al Owen u15da125@a1s2f4f7.a1c2c5s4\", \"Robert Jemison Van de Graaff robertvdgraaff@mit.edu\",\r\n                    \"Ed Eden a1@a1.a1\", \"na'me s-u ii@ii.ii\", \"n'a me su aa-b'b ab@ab.ab\", \"nA me 1@1.1\"};\r\n        }\r\n\r\n        private String[][] getIncorrectCredentials() {\r\n            return new String[][]{\r\n                    {\"\", \"Incorrect credentials\"}, {\" \\t\", \"Incorrect credentials.\"},\r\n                    {\"name surname\", \"Incorrect credentials.\"},\r\n                    {\"n surname email@email.xyz\", \"Incorrect first name.\"},\r\n                    {\"'name surname email@email.xyz\", \"Incorrect first name.\"},\r\n                    {\"-name surname email@email.xyz\", \"Incorrect first name.\"},\r\n                    {\"name- surname email@email.xyz\", \"Incorrect first name.\"},\r\n                    {\"name' surname email@email.xyz\", \"Incorrect first name.\"},\r\n                    {\"nam-'e surname email@email.xyz\", \"Incorrect first name.\"},\r\n                    {\"na'-me surname email@email.xyz\", \"Incorrect first name.\"},\r\n                    {\"na--me surname email@email.xyz\", \"Incorrect first name.\"},\r\n                    {\"na''me surname email@email.xyz\", \"Incorrect first name.\"},\r\n                    {\"námé surname email@email.xyz\", \"Incorrect first name.\"},\r\n                    {\"name s email@email.xyz\", \"Incorrect last name.\"},\r\n                    {\"name -surname email@email.xyz\", \"Incorrect last name.\"},\r\n                    {\"name 'surname email@email.xyz\", \"Incorrect last name.\"},\r\n                    {\"name surnam''e email@email.xyz\", \"Incorrect last name.\"},\r\n                    {\"name surn--ame email@email.xyz\", \"Incorrect last name.\"},\r\n                    {\"name s'-urname email@email.xyz\", \"Incorrect last name.\"},\r\n                    {\"name su-'rname email@email.xyz\", \"Incorrect last name.\"},\r\n                    {\"name surname- email@email.xyz\", \"Incorrect last name.\"},\r\n                    {\"name surname' email@email.xyz\", \"Incorrect last name.\"},\r\n                    {\"name surnámé email@email.xyz\", \"Incorrect last name.\"},\r\n                    {\"name surname emailemail.xyz\", \"Incorrect email.\"},\r\n                    {\"name surname email@emailxyz\", \"Incorrect email.\"},\r\n                    {\"name surname email@e@mail.xyz\", \"Incorrect email.\"},\r\n            };\r\n        }\r\n\r\n        private String[] getIncorrectPoints() {\r\n            return new String[]{\"\", \"-1 1 1 1\", \"1 1 2 A\", \"1 1 1\", \"1 1 1 1 1\"};\r\n        }\r\n\r\n        private String[] getCorrectPoints(int n) {\r\n            return Stream.generate(String::new)\r\n                    .limit(n)\r\n                    .map(it -> String.format(\"%d %d %d %d\", nextPoint(), nextPoint(), nextPoint(), nextPoint()))\r\n                    .toArray(String[]::new);\r\n        }\r\n\r\n        private int nextPoint() {\r\n            return rnd.nextInt(10) + 1;\r\n        }\r\n\r\n        private List<String> parseIds(List<String> lines) {\r\n            try {\r\n                return lines.stream()\r\n                        .skip(1)\r\n                        .map(String::trim)\r\n                        .collect(Collectors.toList());\r\n            } catch (Exception e) {\r\n                throw new WrongAnswer(\"Error occurred while parsing your output \" + e.getMessage());\r\n            }\r\n        }\r\n\r\n        private List<String> generateNames(int n) {\r\n            List<String> names = List.of(\"Shoshana Utica\", \"Marisa Firman\", \"Gwenette Anagnos\", \"Charlena Girardo\",\r\n                    \"Alexina Belcher\", \"Karee Antoinetta\", \"Dolley Panther\", \"Elysha Quinlan\", \"Trixie Winer\",\r\n                    \"Ricki Trovillion\", \"Amye Uriisa\", \"Hedwig Wally\", \"Gwenette Kironde\", \"Jermaine Naaman\",\r\n                    \"Olga Rosanne\", \"Annecorinne Ause\", \"Aurie Dorisa\", \"Van Fawnia\", \"Carmella Campman\",\r\n                    \"Francesca Francis\", \"Elwira Florrie\", \"Nonna Miko\", \"Natka Herculie\", \"Roxi Hett\", \"Brandise Hardan\",\r\n                    \"Toby Bleier\", \"Dalia Gleeson\", \"Emelia Annnora\", \"Beatrisa Jegar\", \"Barbara-Anne Chicky\",\r\n                    \"Ann Agnella\", \"Lebbie Alabaster\", \"Leola Whelan\", \"Starlin Griz\", \"Anjanette Uis\", \"Tasha Chem\");\r\n\r\n            List<String> selectedNames = new ArrayList<>(names);\r\n            Collections.shuffle(selectedNames);\r\n            return selectedNames.stream().limit(n).collect(Collectors.toList());\r\n        }\r\n\r\n        private List<String> generateEmails(int n) {\r\n            return IntStream.rangeClosed(1, n).mapToObj(it -> \"address\" + it + \"@mail.com\").collect(Collectors.toList());\r\n        }\r\n\r\n        private List<String> getRandomCredentials(int n) {\r\n            List<String> names = generateNames(n);\r\n            List<String> emails = generateEmails(n);\r\n            return IntStream.range(0, n)\r\n                    .mapToObj(it -> String.format(\"%s %s\", names.get(it), emails.get(it)))\r\n                    .collect(Collectors.toList());\r\n        }\r\n    }\r\n  learner_created: false\r\nfeedback_link: https://hyperskill.org/projects/197/stages/982/implement#comment\r\nstatus: Unchecked\r\nrecord: -1\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Learning Progress Tracker/Learning Progress Tracker/Retrieving statistics/task-info.yaml b/../Learning Progress Tracker/Learning Progress Tracker/Retrieving statistics/task-info.yaml
--- a/../Learning Progress Tracker/Learning Progress Tracker/Retrieving statistics/task-info.yaml	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../Learning Progress Tracker/Learning Progress Tracker/Retrieving statistics/task-info.yaml	(date 1648296234572)
@@ -33,6 +33,7 @@
     package tracker;
 
     import org.junit.jupiter.api.Test;
+    import tracker.commands.AddStudentsCommand;
 
     import static org.junit.jupiter.api.Assertions.*;
 
@@ -40,7 +41,6 @@
 
         @Test
         void test() {
-            assertEquals(5, 2 + 3);
         }
     }
   learner_created: false
@@ -957,6 +957,472 @@
         }
     }
   learner_created: false
-feedback_link: https://hyperskill.org/projects/197/stages/982/implement#comment
-status: Unchecked
-record: -1
+- name: src/tracker/Application.java
+  visible: true
+  text: |+
+    package tracker;
+
+    import tracker.commands.*;
+
+    import java.util.Scanner;
+
+    public class Application {
+
+        public static void run() {
+            System.out.println("Learning Progress Tracker");
+
+            Controller controller = new Controller();
+            Command command = null;
+            StudentsDataBase studentsDataBase = StudentsDataBase.getStudentsDataBase();
+
+            try (Scanner scanner = new Scanner(System.in)) {
+                while (scanner.hasNextLine()) {
+                    String input = scanner.nextLine();
+                    if (input.equals("add students")) {
+                        command = new AddStudentsCommand(studentsDataBase);
+                        controller.setCommand(command);
+                    } else if (input.equals("back")) {
+                        command = new BackCommand(studentsDataBase);
+                        controller.setCommand(command);
+                    } else if (input.equals("list")) {
+                        command = new ListCommand(studentsDataBase);
+                        controller.setCommand(command);
+                    } else if (input.equals("add points")) {
+                        command = new AddPointsCommand(studentsDataBase);
+                        controller.setCommand(command);
+                    } else if (input.equals("find")) {
+                        command = new FindCommand(studentsDataBase);
+                        controller.setCommand(command);
+                    } else if (input.equals("exit")) {
+                        command = new ExitCommand();
+                        controller.setCommand(command);
+                        controller.executeCommand();
+                        break;
+                    }
+                    if (command != null) {
+                        controller.executeCommand();
+                    } else if (input.isBlank()) {
+                        System.out.println("No input.");
+                    } else System.out.println("Unknown command!");
+                }
+            }
+
+        }
+    }
+
+
+  learner_created: true
+- name: src/tracker/Student.java
+  visible: true
+  text: |
+    package tracker;
+
+    public class Student {
+        private String email;
+        private String firstName;
+        private String lastName;
+        private Integer ID;
+        private int grad1 = 0;
+        private int grad2 = 0;
+        private int grad3 = 0;
+        private int grad4 = 0;
+
+        public Student(String email, String firstName, String lastName, Integer ID) {
+            this.email = email;
+            this.firstName = firstName;
+            this.lastName = lastName;
+            this.ID = ID;
+        }
+
+        public int getGrad1() {
+            return grad1;
+        }
+
+        public int getGrad2() {
+            return grad2;
+        }
+
+        public int getGrad3() {
+            return grad3;
+        }
+
+        public int getGrad4() {
+            return grad4;
+        }
+
+        public void setGrad1(int grad1) {
+            this.grad1 = grad1;
+        }
+
+        public void setGrad2(int grad2) {
+            this.grad2 = grad2;
+        }
+
+        public void setGrad3(int grad3) {
+            this.grad3 = grad3;
+        }
+
+        public void setGrad4(int grad4) {
+            this.grad4 = grad4;
+        }
+
+        @Override
+        public String toString() {
+            return " points: Java=" + grad1 + "; DSA=" + grad2 + "; Databases=" + grad3 + "; Spring=" + grad4;
+        }
+    }
+  learner_created: true
+- name: src/tracker/commands/ExitCommand.java
+  visible: true
+  text: |
+    package tracker.commands;
+
+    public class ExitCommand implements Command{
+        @Override
+        public void execute() {
+            System.out.println("Bye!");
+        }
+    }
+  learner_created: true
+- name: src/tracker/commands/AddStudentsCommand.java
+  visible: true
+  text: |
+    package tracker.commands;
+
+    import tracker.Student;
+    import tracker.StudentsDataBase;
+
+    import java.util.Scanner;
+    import java.util.regex.Matcher;
+    import java.util.regex.Pattern;
+
+    public class AddStudentsCommand implements Command {
+        private final StudentsDataBase studentsDataBase;
+        private String firstName;
+        private String lastName;
+        private String email;
+        private static Integer ID = 100;
+
+        public AddStudentsCommand(StudentsDataBase studentsDataBase) {
+            this.studentsDataBase = studentsDataBase;
+        }
+
+        @Override
+        public void execute() {
+            System.out.println("Enter student credentials or 'back' to return:");
+            Scanner scanner = new Scanner(System.in);
+            while (scanner.hasNextLine()) {
+                String input = scanner.nextLine();
+                if (input.equals("back")) {
+                    System.out.printf("Total %d students have been added." + "\n", studentsDataBase.getDb().size());
+                    break;
+                } else if (input.isBlank()) {
+                    System.out.println("Incorrect credentials.");
+                } else if (splitter(input)) {
+                    if (isCorrectCredentials(firstName, lastName, email)) {
+                        studentsDataBase.getDb().put(String.valueOf(ID), email);
+                        studentsDataBase.getDbScores().put(String.valueOf(ID), new Student(email, firstName, lastName, ID));
+                        System.out.println("The student has been added.");
+                        ID++;
+                    }
+                }
+            }
+
+        }
+
+        boolean splitter(String input) {
+            String[] strings = input.split(" ");
+            if (strings.length == 3) {
+                firstName = strings[0];
+                lastName = strings[1];
+                email = strings[2];
+                return true;
+            } else if (strings.length > 3) {
+                firstName = strings[0];
+                email = strings[strings.length - 1];
+                StringBuilder sb = new StringBuilder();
+                for (int i = 1; i < strings.length - 1; i++) {
+                    sb.append(strings[i]).append(" ");
+                }
+                lastName = sb.toString().trim();
+                return true;
+
+            } else {
+                System.out.println("Incorrect credentials.");
+                return false;
+            }
+        }
+
+        boolean isFirstName(String firstName) {
+            Pattern pattern = Pattern.compile("^[a-zA-Z]+[-'][A-Za-z]*\\w$|^[A-Za-z]{2,}$");
+            Matcher matcher = pattern.matcher(firstName.trim());
+            return matcher.matches();
+        }
+
+        boolean isLastName(String lastName) {
+            Pattern pattern = Pattern.compile("^[a-zA-Z]+ +(([',. -][a-zA-Z ])?[a-zA-Z]*)*$|" +
+                    "^[A-Za-z]+[-][A-Za-z]*\\w$|^[A-Za-z]{2,}$|" +
+                    "^[A-Z]['][A-Z][a-z]+$");
+            Matcher matcher = pattern.matcher(lastName.trim());
+            return matcher.matches();
+        }
+
+        boolean isEmail(String email) {
+            Pattern pattern = Pattern.compile("^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z0-9]{1,8}(?:\\.[a-z0-9]{2})?)$");
+            Matcher matcher = pattern.matcher(email.trim());
+            return matcher.matches();
+        }
+
+        boolean isEmailAlreadyExist(String email) {
+            return studentsDataBase.getDb().containsValue(email);
+        }
+
+        boolean isCorrectCredentials(String firstName, String lastName, String email) {
+            if (!isFirstName(firstName)) {
+                System.out.println("Incorrect first name.");
+                return false;
+            } else if (!isLastName(lastName)) {
+                System.out.println("Incorrect last name.");
+                return false;
+            } else if (!isEmail(email)) {
+                System.out.println("Incorrect email.");
+                return false;
+            } else if (isEmailAlreadyExist(email)) {
+                System.out.println("This email is already taken.");
+                return false;
+            } else return true;
+        }
+    }
+  learner_created: true
+- name: src/tracker/StudentsDataBase.java
+  visible: true
+  text: |
+    package tracker;
+
+    import java.util.HashMap;
+
+    public class StudentsDataBase {
+        private static StudentsDataBase studentsDataBase;
+        private HashMap<String , String> db = new HashMap<>();
+        private HashMap<String , Student> dbScores = new HashMap<>();
+
+        private StudentsDataBase() {
+
+        }
+
+        public static StudentsDataBase getStudentsDataBase() {
+            if (studentsDataBase == null) {
+                studentsDataBase = new StudentsDataBase();
+            }
+            return studentsDataBase;
+        }
+
+        public HashMap<String , String> getDb() {
+            return db;
+        }
+
+        public HashMap<String , Student> getDbScores() {
+            return dbScores;
+        }
+    }
+  learner_created: true
+- name: src/tracker/commands/AddPointsCommand.java
+  visible: true
+  text: |
+    package tracker.commands;
+
+    import tracker.Student;
+    import tracker.StudentsDataBase;
+
+    import java.util.Arrays;
+    import java.util.Scanner;
+    import java.util.regex.Matcher;
+    import java.util.regex.Pattern;
+
+    public class AddPointsCommand implements Command {
+        private final StudentsDataBase studentsDataBase;
+        private static String ID;
+        private static Integer[] scores = new Integer[5];
+
+        public AddPointsCommand(StudentsDataBase studentsDataBase) {
+            this.studentsDataBase = studentsDataBase;
+        }
+
+        @Override
+        public void execute() {
+            System.out.println("Enter an id and points or 'back' to return:");
+            Scanner scanner = new Scanner(System.in);
+            while (scanner.hasNextLine()) {
+                String input = scanner.nextLine();
+                if (input.equals("back")) {
+                    break;
+                } else if (splitterConverter(input)) {
+                    if (studentsDataBase.getDbScores().containsKey(ID)) {
+                        updaterPoints(studentsDataBase.getDbScores().get(ID));
+                        System.out.println("Points updated.");
+                    } else {
+                        System.out.println("No student is found for id=" + ID);
+                    }
+                }
+            }
+        }
+
+        boolean splitterConverter(String input) {
+            String[] rawInput = input.split(" ");
+            if (rawInput.length == 5 & isCorrectRequest(input.substring(input.indexOf(" ",2)))) {
+                ID = rawInput[0];
+                for (int i = 1; i < rawInput.length; i++) {
+                    scores[i - 1] = Integer.valueOf(rawInput[i]);
+                }
+                return true;
+            } else {
+                System.out.println("Incorrect points format.");
+                return false;
+            }
+        }
+
+        boolean isCorrectRequest(String input) {
+            Pattern pattern = Pattern.compile("^[0-9 ]+");
+            Matcher matcher = pattern.matcher(input);
+            return matcher.matches();
+        }
+
+        void updaterPoints(Student student) {
+            student.setGrad1(student.getGrad1() + scores[0]);
+            student.setGrad2(student.getGrad2() + scores[1]);
+            student.setGrad3(student.getGrad3() + scores[2]);
+            student.setGrad4(student.getGrad4() + scores[3]);
+        }
+    }
+  learner_created: true
+- name: src/tracker/commands/Controller.java
+  visible: true
+  text: |
+    package tracker.commands;
+
+    public class Controller {
+        private Command command;
+
+        public void setCommand(Command command) {
+            this.command = command;
+        }
+
+        public void executeCommand() {
+            command.execute();
+        }
+    }
+  learner_created: true
+- name: src/tracker/commands/ListCommand.java
+  visible: true
+  text: |
+    package tracker.commands;
+
+    import tracker.StudentsDataBase;
+
+    import java.util.Map;
+
+    public class ListCommand implements Command {
+        private final StudentsDataBase studentsDataBase;
+
+        public ListCommand(StudentsDataBase studentsDataBase) {
+            this.studentsDataBase = studentsDataBase;
+        }
+
+        @Override
+        public void execute() {
+            if (studentsDataBase.getDb().size() == 0) {
+                System.out.println("No students found.");
+            } else {
+                System.out.println("Students:");
+                for (Map.Entry<String, String> entry : studentsDataBase.getDb().entrySet()) {
+                    System.out.println(entry.getKey());
+                }
+            }
+        }
+    }
+  learner_created: true
+- name: src/tracker/commands/BackCommand.java
+  visible: true
+  text: |
+    package tracker.commands;
+
+    import tracker.StudentsDataBase;
+
+    public class BackCommand implements Command {
+        StudentsDataBase studentsDataBase;
+
+        public BackCommand(StudentsDataBase studentsDataBase) {
+            this.studentsDataBase = studentsDataBase;
+        }
+
+        @Override
+        public void execute() {
+            if (studentsDataBase.getDb().isEmpty()) {
+                System.out.println("Enter 'exit' to exit the program.");
+            } else {
+                int count = studentsDataBase.getDb().size();
+                System.out.printf("Total %d students have been added." + "\n", count);
+            }
+        }
+    }
+  learner_created: true
+- name: src/tracker/commands/FindCommand.java
+  visible: true
+  text: |
+    package tracker.commands;
+
+    import tracker.StudentsDataBase;
+
+    import java.util.Scanner;
+
+    public class FindCommand implements Command {
+        StudentsDataBase studentsDataBase;
+
+        public FindCommand(StudentsDataBase studentsDataBase) {
+            this.studentsDataBase = studentsDataBase;
+        }
+
+        @Override
+        public void execute() {
+            System.out.println("Enter an id or 'back' to return.");
+            Scanner scanner = new Scanner(System.in);
+            while (scanner.hasNextLine()) {
+                String input = scanner.nextLine();
+                if (input.equals("back")) {
+                    break;
+                } else if (isCorrectID(input)) {
+                    System.out.print(input + studentsDataBase.getDbScores().get(input).toString());
+                    System.out.println();
+                } else {
+                    System.out.println("No student is found for id=" + input);
+                }
+
+            }
+        }
+
+        boolean isCorrectID(String input) {
+            return studentsDataBase.getDbScores().containsKey(input);
+        }
+    }
+  learner_created: true
+- name: src/tracker/commands/Command.java
+  visible: true
+  text: |
+    package tracker.commands;
+
+    public interface Command {
+        void execute();
+    }
+  learner_created: true
+- name: src/tracker/commands/StatisticsCommand.java
+  visible: true
+  learner_created: true
+- name: src/tracker/courses/Course.java
+  visible: true
+  learner_created: true
+feedback_link: https://hyperskill.org/learn/step/14399#comment
+status: Solved
+feedback:
+  message: Congratulations!
+  time: Sat, 26 Mar 2022 12:01:39 UTC
+record: 4
Index: ../HyperMetro/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'hyperskill'\r\n\r\nsubprojects {\r\n    apply plugin: 'application'\r\n    apply plugin: 'java'\r\n\r\n    def userJava = Integer.parseInt(JavaVersion.current().getMajorVersion())\r\n    def hsJava = Integer.parseInt(hs.java.version)\r\n    def testJava = Math.max(userJava, hsJava)\r\n\r\n    java.toolchain.languageVersion = JavaLanguageVersion.of(testJava)\r\n\r\n    compileJava {\r\n        javaCompiler = javaToolchains.compilerFor {\r\n            languageVersion = JavaLanguageVersion.of(userJava)\r\n        }\r\n    }\r\n\r\n    compileTestJava {\r\n        javaCompiler = javaToolchains.compilerFor {\r\n            languageVersion = JavaLanguageVersion.of(testJava)\r\n        }\r\n    }\r\n\r\n    repositories {\r\n        mavenCentral()\r\n        maven { url \"https://jitpack.io\" }\r\n    }\r\n\r\n    dependencies {\r\n        testImplementation 'com.github.hyperskill:hs-test:release-SNAPSHOT'\r\n\r\n\t\timplementation group: 'com.beust', name: 'jcommander', version: '1.82'\r\n\r\n\t\timplementation group: 'com.google.code.gson', name: 'gson', version: '2.9.0'\r\n\r\n\r\n    }\r\n\r\n    configurations.all {\r\n        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'\r\n    }\r\n\r\n    sourceSets {\r\n        main.java.srcDir 'src'\r\n        test.java.srcDir 'test'\r\n    }\r\n\r\n    test {\r\n        systemProperty \"file.encoding\", \"utf-8\"\r\n        outputs.upToDateWhen { false }\r\n    }\r\n\r\n    compileJava.options.encoding = 'utf-8'\r\n    tasks.withType(JavaCompile) {\r\n        options.encoding = 'utf-8'\r\n    }\r\n}\r\n\r\nproject(':util') {\r\n    dependencies {\r\n        implementation 'com.github.hyperskill:hs-test:release-SNAPSHOT'\r\n    }\r\n}\r\n\r\nconfigure(subprojects.findAll {it.name != 'util'}) {\r\n    dependencies {\r\n        testImplementation project(':util').sourceSets.main.output\r\n        testImplementation project(':util').sourceSets.test.output\r\n    }\r\n}\r\n\r\nwrapper {\r\n    gradleVersion = hs.gradle.version\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../HyperMetro/build.gradle b/../HyperMetro/build.gradle
--- a/../HyperMetro/build.gradle	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../HyperMetro/build.gradle	(date 1648362364041)
@@ -28,13 +28,13 @@
     }
 
     dependencies {
-        testImplementation 'com.github.hyperskill:hs-test:release-SNAPSHOT'
-
-		implementation group: 'com.beust', name: 'jcommander', version: '1.82'
+	// https://mvnrepository.com/artifact/com.beust/jcommander
+implementation group: 'com.beust', name: 'jcommander', version: '1.82'
 
-		implementation group: 'com.google.code.gson', name: 'gson', version: '2.9.0'
+	// https://mvnrepository.com/artifact/com.google.code.gson/gson
+implementation group: 'com.google.code.gson', name: 'gson', version: '2.9.0'
 
-
+        testImplementation 'com.github.hyperskill:hs-test:release-SNAPSHOT'
     }
 
     configurations.all {
Index: .idea/modules/util/Web_Quiz_Engine.util.test.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules/util/Web_Quiz_Engine.util.test.iml b/.idea/modules/util/Web_Quiz_Engine.util.test.iml
new file mode 100644
--- /dev/null	(date 1648630872335)
+++ b/.idea/modules/util/Web_Quiz_Engine.util.test.iml	(date 1648630872335)
@@ -0,0 +1,26 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module external.linked.project.id=":util:test" external.linked.project.path="$MODULE_DIR$/../../../util" external.root.project.path="$MODULE_DIR$/../../.." external.system.id="GRADLE" external.system.module.group="Web Quiz Engine" external.system.module.type="sourceSet" external.system.module.version="unspecified" type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager">
+    <output-test url="file://$MODULE_DIR$/../../../util/out/test/classes" />
+    <exclude-output />
+    <content url="file://$MODULE_DIR$/../../../util/src/test" />
+    <content url="file://$MODULE_DIR$/../../../util/test" />
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="module" module-name="Web_Quiz_Engine.util.main" />
+    <orderEntry type="library" name="Gradle: com.github.hyperskill:hs-test:release-SNAPSHOT" level="project" />
+    <orderEntry type="library" name="Gradle: org.assertj:assertj-swing-junit:3.9.2" level="project" />
+    <orderEntry type="library" name="Gradle: junit:junit:4.12" level="project" />
+    <orderEntry type="library" name="Gradle: org.apache.httpcomponents:httpclient:4.5.9" level="project" />
+    <orderEntry type="library" name="Gradle: com.google.code.gson:gson:2.8.5" level="project" />
+    <orderEntry type="library" name="Gradle: org.assertj:assertj-swing:3.9.2" level="project" />
+    <orderEntry type="library" name="Gradle: org.easytesting:fest-reflect:1.4.1" level="project" />
+    <orderEntry type="library" name="Gradle: org.hamcrest:hamcrest-core:1.3" level="project" />
+    <orderEntry type="library" name="Gradle: org.apache.httpcomponents:httpcore:4.4.11" level="project" />
+    <orderEntry type="library" name="Gradle: commons-logging:commons-logging:1.2" level="project" />
+    <orderEntry type="library" name="Gradle: commons-codec:commons-codec:1.11" level="project" />
+    <orderEntry type="library" name="Gradle: org.assertj:assertj-core:3.11.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Gradle: org.easytesting:fest-util:1.2.5" level="project" />
+  </component>
+  <component name="TestModuleProperties" production-module="Web_Quiz_Engine.util.main" />
+</module>
\ No newline at end of file
Index: .idea/modules/Web Quiz Engine/task/Web_Quiz_Engine.Web_Quiz_Engine-task.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules/Web Quiz Engine/task/Web_Quiz_Engine.Web_Quiz_Engine-task.iml b/.idea/modules/Web Quiz Engine/task/Web_Quiz_Engine.Web_Quiz_Engine-task.iml
new file mode 100644
--- /dev/null	(date 1648630872328)
+++ b/.idea/modules/Web Quiz Engine/task/Web_Quiz_Engine.Web_Quiz_Engine-task.iml	(date 1648630872328)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module external.linked.project.id=":Web_Quiz_Engine-task" external.linked.project.path="$MODULE_DIR$/../../../../Web Quiz Engine/task" external.root.project.path="$MODULE_DIR$/../../../.." external.system.id="GRADLE" external.system.module.group="Web Quiz Engine" external.system.module.version="unspecified" type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$/../../../../Web Quiz Engine/task">
+      <excludeFolder url="file://$MODULE_DIR$/../../../../Web Quiz Engine/task/.gradle" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../Web Quiz Engine/task/build" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../Web Quiz Engine/task/out" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: .idea/modules/Web_Quiz_Engine.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules/Web_Quiz_Engine.iml b/.idea/modules/Web_Quiz_Engine.iml
new file mode 100644
--- /dev/null	(date 1648630872305)
+++ b/.idea/modules/Web_Quiz_Engine.iml	(date 1648630872305)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module external.linked.project.id="Web Quiz Engine" external.linked.project.path="$MODULE_DIR$/../.." external.root.project.path="$MODULE_DIR$/../.." external.system.id="GRADLE" external.system.module.group="" external.system.module.version="unspecified" type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$/../..">
+      <excludeFolder url="file://$MODULE_DIR$/../../.gradle" />
+      <excludeFolder url="file://$MODULE_DIR$/../../build" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: ../Learning Progress Tracker/Learning Progress Tracker/Verify new users/task-remote-info.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>id: 14397\r\nupdate_date: Sat, 19 Mar 2022 15:34:58 UTC\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Learning Progress Tracker/Learning Progress Tracker/Verify new users/task-remote-info.yaml b/../Learning Progress Tracker/Learning Progress Tracker/Verify new users/task-remote-info.yaml
--- a/../Learning Progress Tracker/Learning Progress Tracker/Verify new users/task-remote-info.yaml	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../Learning Progress Tracker/Learning Progress Tracker/Verify new users/task-remote-info.yaml	(date 1648234060467)
@@ -1,2 +1,2 @@
 id: 14397
-update_date: Sat, 19 Mar 2022 15:34:58 UTC
+update_date: Fri, 25 Mar 2022 17:08:42 UTC
Index: ../Learning Progress Tracker/Learning Progress Tracker/A detailed record/task-remote-info.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>id: 14398\r\nupdate_date: Sat, 19 Mar 2022 15:34:59 UTC\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Learning Progress Tracker/Learning Progress Tracker/A detailed record/task-remote-info.yaml b/../Learning Progress Tracker/Learning Progress Tracker/A detailed record/task-remote-info.yaml
--- a/../Learning Progress Tracker/Learning Progress Tracker/A detailed record/task-remote-info.yaml	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../Learning Progress Tracker/Learning Progress Tracker/A detailed record/task-remote-info.yaml	(date 1648234060500)
@@ -1,2 +1,2 @@
 id: 14398
-update_date: Sat, 19 Mar 2022 15:34:59 UTC
+update_date: Fri, 25 Mar 2022 17:08:43 UTC
Index: .idea/modules/util/Web_Quiz_Engine.util.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules/util/Web_Quiz_Engine.util.iml b/.idea/modules/util/Web_Quiz_Engine.util.iml
new file mode 100644
--- /dev/null	(date 1648630872317)
+++ b/.idea/modules/util/Web_Quiz_Engine.util.iml	(date 1648630872317)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module external.linked.project.id=":util" external.linked.project.path="$MODULE_DIR$/../../../util" external.root.project.path="$MODULE_DIR$/../../.." external.system.id="GRADLE" external.system.module.group="Web Quiz Engine" external.system.module.version="unspecified" type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$/../../../util">
+      <excludeFolder url="file://$MODULE_DIR$/../../../util/.gradle" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../util/build" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../util/out" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: ../Learning Progress Tracker/Learning Progress Tracker/Retrieving statistics/task-remote-info.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>id: 14399\r\nupdate_date: Sat, 19 Mar 2022 15:35:00 UTC\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Learning Progress Tracker/Learning Progress Tracker/Retrieving statistics/task-remote-info.yaml b/../Learning Progress Tracker/Learning Progress Tracker/Retrieving statistics/task-remote-info.yaml
--- a/../Learning Progress Tracker/Learning Progress Tracker/Retrieving statistics/task-remote-info.yaml	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../Learning Progress Tracker/Learning Progress Tracker/Retrieving statistics/task-remote-info.yaml	(date 1648234060491)
@@ -1,2 +1,2 @@
 id: 14399
-update_date: Sat, 19 Mar 2022 15:35:00 UTC
+update_date: Fri, 25 Mar 2022 17:08:44 UTC
Index: ../Learning Progress Tracker/Learning Progress Tracker/Notification service/task-remote-info.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>id: 14400\r\nupdate_date: Sat, 19 Mar 2022 15:35:01 UTC\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Learning Progress Tracker/Learning Progress Tracker/Notification service/task-remote-info.yaml b/../Learning Progress Tracker/Learning Progress Tracker/Notification service/task-remote-info.yaml
--- a/../Learning Progress Tracker/Learning Progress Tracker/Notification service/task-remote-info.yaml	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../Learning Progress Tracker/Learning Progress Tracker/Notification service/task-remote-info.yaml	(date 1648234060481)
@@ -1,2 +1,2 @@
 id: 14400
-update_date: Sat, 19 Mar 2022 15:35:01 UTC
+update_date: Fri, 25 Mar 2022 17:08:45 UTC
Index: ../HyperMetro/HyperMetro/The fastest route/task-info.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>type: edu\r\nfiles:\r\n- name: src/metro/Main.java\r\n  visible: true\r\n  text: |\r\n    package metro;\r\n\r\n    public class Main {\r\n        public static void main(String[] args) {\r\n            System.out.println(\"Hello, world!\");\r\n        }\r\n    }\r\n  learner_created: false\r\n- name: test/Tests.java\r\n  visible: false\r\n  text: |-\r\n    import org.hyperskill.hstest.dynamic.DynamicTest;\r\n    import org.hyperskill.hstest.exception.outcomes.WrongAnswer;\r\n    import org.hyperskill.hstest.stage.StageTest;\r\n    import org.hyperskill.hstest.testcase.CheckResult;\r\n    import org.hyperskill.hstest.testing.TestedProgram;\r\n\r\n    public class Tests extends StageTest<String> {\r\n        // multiple line output\r\n        @DynamicTest(order = 1)\r\n        CheckResult multipleLineOutputTest() {\r\n\r\n            TestedProgram main = new TestedProgram();\r\n            main.start(\"./test/lausanne.json\");\r\n            String output = main.execute(\"/output \\\"m1\\\"\").trim();\r\n\r\n            String[] stations = new String[]{\"Renes—Gare\", \"Epenex\", \"Crochy\", \"Cerisaie\",\r\n                \"Bassenges\", \"EPFL\", \"UNL—Sorge\", \"Mouline\", \"UNL—Chemberonne\", \"Bourdonnette\", \"Melley\",\r\n                \"Provence\", \"Montelly\", \"Vigie\", \"Lausanne—Flon\"};\r\n\r\n            checkDepots(output);\r\n            checkOutputLength(output, stations.length + 2);\r\n            assertStations(output, stations);\r\n\r\n            stations = new String[]{\"Croisettes\", \"Vennes\", \"Fourmi\", \"Sallaz\", \"CHUV\", \"Ours\",\r\n                \"Riponne M.Bejart\", \"Bessieres\", \"Lausanne—Flon\", \"Lausanne Gare CFF\", \"Grancy\", \"Delices\", \"Jourdils\",\r\n                \"Ouchy—Olympique\"};\r\n\r\n            output = main.execute(\"/output \\\"m2\\\"\");\r\n            checkDepots(output);\r\n            checkOutputLength(output, stations.length + 2);\r\n            assertStations(output, stations);\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        // addition test\r\n        @DynamicTest(order = 2)\r\n        CheckResult additionTest() {\r\n\r\n            TestedProgram main = new TestedProgram();\r\n            main.start(\"./test/lausanne.json\");\r\n\r\n            // added a station to the end of the line\r\n            main.execute(\"/append \\\"m1\\\" \\\"Test station 1\\\"\");\r\n            String output = main.execute(\"/output \\\"m1\\\"\");\r\n\r\n            String[] stations = new String[]{\"Renes—Gare\", \"Epenex\", \"Crochy\", \"Cerisaie\",\r\n                \"Bassenges\", \"EPFL\", \"UNL—Sorge\", \"Mouline\", \"UNL—Chemberonne\", \"Bourdonnette\", \"Melley\",\r\n                \"Provence\", \"Montelly\", \"Vigie\", \"Lausanne—Flon\", \"Test station 1\"};\r\n\r\n            checkDepots(output);\r\n            checkOutputLength(output, stations.length + 2);\r\n            assertStations(output, stations);\r\n\r\n            // added another one\r\n            main.execute(\"/append \\\"m1\\\" \\\"Test station 2\\\"\");\r\n            output = main.execute(\"/output \\\"m1\\\"\");\r\n\r\n            stations = new String[]{\"Renes—Gare\", \"Epenex\", \"Crochy\", \"Cerisaie\",\r\n                \"Bassenges\", \"EPFL\", \"UNL—Sorge\", \"Mouline\", \"UNL—Chemberonne\", \"Bourdonnette\", \"Melley\",\r\n                \"Provence\", \"Montelly\", \"Vigie\", \"Lausanne—Flon\", \"Test station 1\", \"Test station 2\"};\r\n\r\n            checkDepots(output);\r\n            checkOutputLength(output, stations.length + 2);\r\n            assertStations(output, stations);\r\n\r\n            // added one station to the beginning of the line\r\n            main.execute(\"/add-head \\\"m1\\\" \\\"Head\\\"\");\r\n            output = main.execute(\"/output \\\"m1\\\"\");\r\n\r\n            stations = new String[]{\"Head\", \"Renes—Gare\", \"Epenex\", \"Crochy\", \"Cerisaie\",\r\n                \"Bassenges\", \"EPFL\", \"UNL—Sorge\", \"Mouline\", \"UNL—Chemberonne\", \"Bourdonnette\", \"Melley\",\r\n                \"Provence\", \"Montelly\", \"Vigie\", \"Lausanne—Flon\", \"Test station 1\", \"Test station 2\"};\r\n\r\n            checkDepots(output);\r\n            checkOutputLength(output, stations.length + 2);\r\n            assertStations(output, stations\r\n            );\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        // not existing file check\r\n        @DynamicTest(order = 3)\r\n        CheckResult nonexistingFileTest() {\r\n            TestedProgram main = new TestedProgram();\r\n            String output = main.start(\"tHiS_fIlE_DoEs_nOt_ExIsT.txt\");\r\n            if (output.trim().length() == 0) {\r\n                return CheckResult.wrong(\"The program did not print anything when the file was not exist. \");\r\n            }\r\n            if (output.toLowerCase().startsWith(\"depot\") || output.toLowerCase().endsWith(\"depot\")) {\r\n                return CheckResult.wrong(\"It looks like the program did not print an error message when the file was not exist.\");\r\n            }\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        // output with transfers\r\n        @DynamicTest(order = 4)\r\n        CheckResult outputLineWithTransfer() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start(\"./test/prague.json\");\r\n\r\n            String[][] stations = new String[][]{\r\n                {\"Nemocnice Motol\", null},\r\n                {\"Petriny\", null},\r\n                {\"Nadrazi Veleslavin\", null},\r\n                {\"Borislavka\", null},\r\n                {\"Dejvicka\", null},\r\n                {\"Hradcanska\", null},\r\n                {\"Malostranska\", null},\r\n                {\"Staromestska\", null},\r\n                {\"Mustek\", \"Linka B\"},\r\n                {\"Muzeum\", \"Linka C\"},\r\n                {\"Namesti Miru\", null},\r\n                {\"Jiriho z Podebrad\", null},\r\n                {\"Flora\", null},\r\n                {\"Zelivskeho\", null},\r\n                {\"Strasnicka\", null},\r\n                {\"Skalka\", null},\r\n                {\"Depo Hostivar\", null}\r\n            };\r\n\r\n            String output = main.execute(\"/output \\\"Linka A\\\"\");\r\n            checkDepots(output);\r\n\r\n            checkOutputLength(output, stations.length + 2);\r\n            assertWithTransfer(output, stations);\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        // connections test\r\n        @DynamicTest(order = 5)\r\n        CheckResult connectLinesTest() {\r\n\r\n            TestedProgram main = new TestedProgram();\r\n            main.start(\"./test/prague.json\");\r\n\r\n            String[][] stations = new String[][]{{\"Nemocnice Motol\", null}, {\"Petriny\", \"Linka C\"},\r\n                {\"Nadrazi Veleslavin\", null}, {\"Borislavka\", null}, {\"Dejvicka\", null}, {\"Hradcanska\", null},\r\n                {\"Malostranska\", null}, {\"Staromestska\", null}, {\"Mustek\", \"Linka B\"}, {\"Muzeum\", \"Linka C\"},\r\n                {\"Namesti Miru\", null}, {\"Jiriho z Podebrad\", null}, {\"Flora\", null}, {\"Zelivskeho\", null},\r\n                {\"Strasnicka\", null}, {\"Skalka\", null}, {\"Depo Hostivar\", null}\r\n            };\r\n            main.execute(\"/connect \\\"Linka C\\\" \\\"I.P.Pavlova\\\" \\\"Linka A\\\" \\\"Petriny\\\"\");\r\n\r\n            String output = main.execute(\"/output \\\"Linka A\\\"\");\r\n\r\n            checkDepots(output);\r\n            checkOutputLength(output, stations.length + 2);\r\n            assertWithTransfer(output, stations);\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 6)\r\n        CheckResult simpleRouteTest() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start(\"./test/prague.json\");\r\n\r\n            String[] correctRoute = {\"Petriny\", \"Nadrazi Veleslavin\", \"Borislavka\", \"Dejvicka\", \"Hradcanska\", \"Malostranska\",\r\n                \"Staromestska\", \"Mustek\", \"Muzeum\", \"Namesti Miru\", \"Jiriho z Podebrad\", \"Flora\"};\r\n\r\n            String[] sOutput = main.execute(\"/route \\\"Linka A\\\" \\\"Petriny\\\" \\\"Linka A\\\" \\\"Flora\\\"\").toLowerCase().split(\"\\n\");\r\n\r\n            if (sOutput.length != correctRoute.length) {\r\n                return CheckResult.wrong(\"Your program printed an incorrect number of stations in the route.\\n\" +\r\n                    \"Expected: \" + correctRoute.length + \" stations.\" +\r\n                    \"\\nYour output: \" + sOutput.length + \" stations.\");\r\n            }\r\n\r\n            for (int i = 0; i < correctRoute.length; i++) {\r\n                if (i == 0 && !correctRoute[i].equalsIgnoreCase(sOutput[i])) {\r\n                    return CheckResult.wrong(\"The first station in the output should be '\" + correctRoute[i] + \"'.\");\r\n                } else if (i != 0) {\r\n                    if (!correctRoute[i].equalsIgnoreCase(sOutput[i])) {\r\n                        return CheckResult.wrong(\"After '\" + correctRoute[i - 1] + \"' should be '\" + correctRoute[i] + \"'.\");\r\n                    }\r\n                }\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        // advanced route test\r\n        @DynamicTest(order = 7)\r\n        CheckResult advancedRouteTest() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start(\"./test/prague.json\");\r\n\r\n            String[] route = {\"Vysehrad\", \"I.P.Pavlova\", \"Muzeum\",\r\n                \"Linka A\", \"Muzeum\", \"Mustek\",\r\n                \"Linka B\", \"Mustek\", \"Namesti Republiky\"};\r\n            String[] sOutput = main.execute(\"/route \\\"Linka C\\\" \\\"Vysehrad\\\" \\\"Linka B\\\" \\\"Namesti Republiky\\\"\").split(\"\\n\");\r\n\r\n            if (sOutput.length != 9) {\r\n                return CheckResult.wrong(\"Your program printed an incorrect number of stations in the route.\");\r\n            }\r\n\r\n            int index = 0;\r\n            for (String station : sOutput) {\r\n                if (!station.toLowerCase().trim().contains(route[index].toLowerCase())) {\r\n                    return CheckResult.wrong(\"The route is incorrect. Wrong stations were displayed\");\r\n                }\r\n                index++;\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        // simple test with time\r\n        @DynamicTest(order = 8)\r\n        CheckResult simpleTime() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start(\"./test/prague_w_time.json\");\r\n\r\n            String[] route = {\"Borislavka\", \"Dejvicka\", \"Hradcanska\", \"Malostranska\", \"Staromestska\", \"Mustek\", \"Muzeum\",\r\n                \"Namesti Miru\", \"Jiriho z Podebrad\", \"Flora\", \"44\"};\r\n            String[] sOutput = main.execute(\"/fastest-route \\\"Linka A\\\" \\\"Borislavka\\\" \\\"Linka A\\\" \\\"Flora\\\"\").split(\"\\n\");\r\n\r\n            if (sOutput.length != route.length) {\r\n                return CheckResult.wrong(\"Your program printed an incorrect number of stations in the route. Expected 10 stations and the total time!\");\r\n            }\r\n\r\n            int index = 0;\r\n            for (String station : sOutput) {\r\n                if (!station.toLowerCase().trim().contains(route[index].toLowerCase())) {\r\n                    return CheckResult.wrong(\"The route is incorrect. Wrong stations were displayed\");\r\n                }\r\n                index++;\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        // advanced test with time\r\n        @DynamicTest(order = 9)\r\n        CheckResult advancedTime() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start(\"./test/prague_w_time.json\");\r\n\r\n            String[] route = {\"Vysehrad\", \"I.P.Pavlova\", \"Muzeum\", \"Hlavni nadrazi\", \"Florenc\",\r\n                \"Linka B\", \"Florenc\", \"Namesti Republiky\", \"29\"\r\n            };\r\n\r\n            String[] sOutput = main.execute(\"/fastest-route \\\"Linka C\\\" \\\"Vysehrad\\\" \\\"Linka B\\\" \\\"Namesti Republiky\\\"\")\r\n                .split(\"\\n\");\r\n\r\n            if (sOutput.length != 9) {\r\n                return CheckResult.wrong(\"Your program printed an incorrect number of stations in the route. Expected 8 stations and the total time!\");\r\n            }\r\n\r\n            int index = 0;\r\n            for (String station : sOutput) {\r\n                if (!station.toLowerCase().trim().contains(route[index].toLowerCase())) {\r\n                    return CheckResult.wrong(\"The route is incorrect. Wrong stations were displayed\");\r\n                }\r\n                index++;\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        // checks for \"depot\" at the start and at the end\r\n        void checkDepots(String output) {\r\n            output = output.trim().toLowerCase();\r\n            if (!output.startsWith(\"depot\")) {\r\n                throw new WrongAnswer(\"Your output should start with 'depot'.\");\r\n            } else if (!output.endsWith(\"depot\")) {\r\n                throw new WrongAnswer(\"Your output should end with 'depot'.\");\r\n            }\r\n        }\r\n\r\n        // checks number of stations in output\r\n        void checkOutputLength(String output, int correctLength) {\r\n            int length = output.trim().split(\"\\n\").length;\r\n            if (length != correctLength) {\r\n                throw new WrongAnswer(\"You output contains wrong number of lines.\\n\" +\r\n                    \"Expected: \" + correctLength + \" lines\\n\" +\r\n                    \"Your output: \" + length + \" lines\");\r\n            }\r\n        }\r\n\r\n        // checks stations\r\n        void assertStations(String output, String[] stations) {\r\n\r\n            String[] sOutput = output.trim().split(\"\\n\");\r\n\r\n            for (int i = 0; i < stations.length; i++) {\r\n                if (!sOutput[i + 1].equals(stations[i])) {\r\n                    throw new WrongAnswer(\"Can't find station '\" + stations[i] + \"' in the line number \" + (i + 2));\r\n                }\r\n            }\r\n        }\r\n\r\n        void assertWithTransfer(String output, String[][] stations) {\r\n\r\n            String[] sOutput = output.split(\"\\n\");\r\n\r\n            for (int i = 0; i < stations.length; i++) {\r\n                String currentLine = sOutput[i + 1].toLowerCase().trim();\r\n                String currentStation = stations[i][0];\r\n                String currentTransfer = stations[i][1];\r\n                if (currentTransfer == null) {\r\n                    if (!currentLine.equals(currentStation.toLowerCase())) {\r\n                        throw new WrongAnswer(\"There is an error in your program's reply. Some stations were not found.\");\r\n                    }\r\n                } else if (!currentLine.contains(currentStation.toLowerCase()) ||\r\n                    !currentLine.contains(currentTransfer.toLowerCase())) {\r\n                    throw new WrongAnswer(\"Expected transfer to '\" + currentTransfer + \"' from '\" + currentStation + \"' station.\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n  learner_created: false\r\n- name: test/lausanne.json\r\n  visible: false\r\n  text: |-\r\n    {\r\n      \"m1\": {\r\n        \"1\": {\r\n          \"name\": \"Renes—Gare\",\r\n          \"transfer\": [],\r\n          \"time\": 3\r\n        },\r\n        \"2\": {\r\n          \"name\": \"Epenex\",\r\n          \"transfer\": [],\r\n          \"time\": 2\r\n        },\r\n        \"3\": {\r\n          \"name\": \"Crochy\",\r\n          \"transfer\": [],\r\n          \"time\": 6\r\n        },\r\n        \"4\": {\r\n          \"name\": \"Cerisaie\",\r\n          \"transfer\": [],\r\n          \"time\": 5\r\n        },\r\n        \"5\": {\r\n          \"name\": \"Bassenges\",\r\n          \"transfer\": [],\r\n          \"time\": 4\r\n        },\r\n        \"6\": {\r\n          \"name\": \"EPFL\",\r\n          \"transfer\": [],\r\n          \"time\": 6\r\n        },\r\n        \"7\": {\r\n          \"name\": \"UNL—Sorge\",\r\n          \"transfer\": [],\r\n          \"time\": 8\r\n        },\r\n        \"8\": {\r\n          \"name\": \"Mouline\",\r\n          \"transfer\": [],\r\n          \"time\": 5\r\n        },\r\n        \"9\": {\r\n          \"name\": \"UNL—Chemberonne\",\r\n          \"transfer\": [],\r\n          \"time\": 4\r\n        },\r\n        \"10\": {\r\n          \"name\": \"Bourdonnette\",\r\n          \"transfer\": [],\r\n          \"time\": 5\r\n        },\r\n        \"11\": {\r\n          \"name\": \"Melley\",\r\n          \"transfer\": [],\r\n          \"time\": 7\r\n        },\r\n        \"12\": {\r\n          \"name\": \"Provence\",\r\n          \"transfer\": [],\r\n          \"time\": 6\r\n        },\r\n        \"13\": {\r\n          \"name\": \"Montelly\",\r\n          \"transfer\": [],\r\n          \"time\": 5\r\n        },\r\n        \"14\": {\r\n          \"name\": \"Vigie\",\r\n          \"transfer\": [],\r\n          \"time\": 4\r\n        },\r\n        \"15\": {\r\n          \"name\": \"Lausanne—Flon\",\r\n          \"transfer\": [],\r\n          \"time\": null\r\n        }\r\n      },\r\n      \"m2\": {\r\n        \"1\": {\r\n          \"name\": \"Croisettes\",\r\n          \"transfer\": [],\r\n          \"time\": 6\r\n        },\r\n        \"2\": {\r\n          \"name\": \"Vennes\",\r\n          \"transfer\": [],\r\n          \"time\": 5\r\n        },\r\n        \"3\": {\r\n          \"name\": \"Fourmi\",\r\n          \"transfer\": [],\r\n          \"time\": 4\r\n        },\r\n        \"4\": {\r\n          \"name\": \"Sallaz\",\r\n          \"transfer\": [],\r\n          \"time\": 6\r\n        },\r\n        \"5\": {\r\n          \"name\": \"CHUV\",\r\n          \"transfer\": [],\r\n          \"time\": 5\r\n        },\r\n        \"6\": {\r\n          \"name\": \"Ours\",\r\n          \"transfer\": [],\r\n          \"time\": 3\r\n        },\r\n        \"7\": {\r\n          \"name\": \"Riponne M.Bejart\",\r\n          \"transfer\": [],\r\n          \"time\": 4\r\n        },\r\n        \"8\": {\r\n          \"name\": \"Bessieres\",\r\n          \"transfer\": [],\r\n          \"time\": 6\r\n        },\r\n        \"9\": {\r\n          \"name\": \"Lausanne—Flon\",\r\n          \"transfer\": [],\r\n          \"time\": 5\r\n        },\r\n        \"10\": {\r\n          \"name\": \"Lausanne Gare CFF\",\r\n          \"transfer\": [],\r\n          \"time\": 3\r\n        },\r\n        \"11\": {\r\n          \"name\": \"Grancy\",\r\n          \"transfer\": [],\r\n          \"time\": 4\r\n        },\r\n        \"12\": {\r\n          \"name\": \"Delices\",\r\n          \"transfer\": [],\r\n          \"time\": 6\r\n        },\r\n        \"13\": {\r\n          \"name\": \"Jourdils\",\r\n          \"transfer\": [],\r\n          \"time\": 3\r\n        },\r\n        \"14\": {\r\n          \"name\": \"Ouchy—Olympique\",\r\n          \"transfer\": [],\r\n          \"time\": null\r\n        }\r\n      }\r\n    }\r\n  learner_created: false\r\n- name: test/prague_w_time.json\r\n  visible: false\r\n  text: |-\r\n    {\r\n      \"Linka A\": {\r\n        \"0\": {\r\n          \"name\": \"Nemocnice Motol\",\r\n          \"transfer\": [],\r\n          \"time\": 5\r\n        },\r\n        \"1\": {\r\n          \"name\": \"Petriny\",\r\n          \"transfer\": [],\r\n          \"time\": 5\r\n        },\r\n        \"2\": {\r\n          \"name\": \"Nadrazi Veleslavin\",\r\n          \"transfer\": [],\r\n          \"time\": 3\r\n        },\r\n        \"3\": {\r\n          \"name\": \"Borislavka\",\r\n          \"transfer\": [],\r\n          \"time\": 3\r\n        },\r\n        \"4\": {\r\n          \"name\": \"Dejvicka\",\r\n          \"transfer\": [],\r\n          \"time\": 4\r\n        },\r\n        \"5\": {\r\n          \"name\": \"Hradcanska\",\r\n          \"transfer\": [],\r\n          \"time\": 4\r\n        },\r\n        \"6\": {\r\n          \"name\": \"Malostranska\",\r\n          \"transfer\": [],\r\n          \"time\": 1\r\n        },\r\n        \"7\": {\r\n          \"name\": \"Staromestska\",\r\n          \"transfer\": [],\r\n          \"time\": 7\r\n        },\r\n        \"8\": {\r\n          \"name\": \"Mustek\",\r\n          \"transfer\": [\r\n            {\r\n              \"line\": \"Linka B\",\r\n              \"station\": \"Mustek\"\r\n            }\r\n          ],\r\n          \"time\": 8\r\n        },\r\n        \"9\": {\r\n          \"name\": \"Muzeum\",\r\n          \"transfer\": [\r\n            {\r\n              \"line\": \"Linka C\",\r\n              \"station\": \"Muzeum\"\r\n            }\r\n          ],\r\n          \"time\": 5\r\n        },\r\n        \"10\": {\r\n          \"name\": \"Namesti Miru\",\r\n          \"transfer\": [],\r\n          \"time\": 7\r\n        },\r\n        \"11\": {\r\n          \"name\": \"Jiriho z Podebrad\",\r\n          \"transfer\": [],\r\n          \"time\": 5\r\n        },\r\n        \"12\": {\r\n          \"name\": \"Flora\",\r\n          \"transfer\": [],\r\n          \"time\": 7\r\n        },\r\n        \"13\": {\r\n          \"name\": \"Zelivskeho\",\r\n          \"transfer\": [],\r\n          \"time\": 1\r\n        },\r\n        \"14\": {\r\n          \"name\": \"Strasnicka\",\r\n          \"transfer\": [],\r\n          \"time\": 7\r\n        },\r\n        \"15\": {\r\n          \"name\": \"Skalka\",\r\n          \"transfer\": [],\r\n          \"time\": 2\r\n        },\r\n        \"16\": {\r\n          \"name\": \"Depo Hostivar\",\r\n          \"transfer\": [],\r\n          \"time\": null\r\n        }\r\n      },\r\n      \"Linka B\": {\r\n        \"0\": {\r\n          \"name\": \"Cerny Most\",\r\n          \"transfer\": [],\r\n          \"time\": 3\r\n        },\r\n        \"1\": {\r\n          \"name\": \"Rajska zahrada\",\r\n          \"transfer\": [],\r\n          \"time\": 5\r\n        },\r\n        \"2\": {\r\n          \"name\": \"Hloubetin\",\r\n          \"transfer\": [],\r\n          \"time\": 4\r\n        },\r\n        \"3\": {\r\n          \"name\": \"Kolbenova\",\r\n          \"transfer\": [],\r\n          \"time\": 1\r\n        },\r\n        \"4\": {\r\n          \"name\": \"Vysocanska\",\r\n          \"transfer\": [],\r\n          \"time\": 6\r\n        },\r\n        \"5\": {\r\n          \"name\": \"Ceskomoravska\",\r\n          \"transfer\": [],\r\n          \"time\": 5\r\n        },\r\n        \"6\": {\r\n          \"name\": \"Palmovka\",\r\n          \"transfer\": [],\r\n          \"time\": 7\r\n        },\r\n        \"7\": {\r\n          \"name\": \"Invalidovna\",\r\n          \"transfer\": [],\r\n          \"time\": 5\r\n        },\r\n        \"8\": {\r\n          \"name\": \"Krizikova\",\r\n          \"transfer\": [],\r\n          \"time\": 1\r\n        },\r\n        \"9\": {\r\n          \"name\": \"Florenc\",\r\n          \"transfer\": [\r\n            {\r\n              \"line\": \"Linka C\",\r\n              \"station\": \"Florenc\"\r\n            }\r\n          ],\r\n          \"time\": 5\r\n        },\r\n        \"10\": {\r\n          \"name\": \"Namesti Republiky\",\r\n          \"transfer\": [],\r\n          \"time\": 3\r\n        },\r\n        \"11\": {\r\n          \"name\": \"Mustek\",\r\n          \"transfer\": [\r\n            {\r\n              \"line\": \"Linka A\",\r\n              \"station\": \"Mustek\"\r\n            }\r\n          ],\r\n          \"time\": 7\r\n        },\r\n        \"12\": {\r\n          \"name\": \"Narodni trida\",\r\n          \"transfer\": [],\r\n          \"time\": 3\r\n        },\r\n        \"13\": {\r\n          \"name\": \"Karlovo namesti\",\r\n          \"transfer\": [],\r\n          \"time\": 4\r\n        },\r\n        \"14\": {\r\n          \"name\": \"Andel\",\r\n          \"transfer\": [],\r\n          \"time\": 3\r\n        },\r\n        \"15\": {\r\n          \"name\": \"Smichovske nadrazi\",\r\n          \"transfer\": [],\r\n          \"time\": 3\r\n        },\r\n        \"16\": {\r\n          \"name\": \"Radlicka\",\r\n          \"transfer\": [],\r\n          \"time\": 4\r\n        },\r\n        \"17\": {\r\n          \"name\": \"Jinonice\",\r\n          \"transfer\": [],\r\n          \"time\": 7\r\n        },\r\n        \"18\": {\r\n          \"name\": \"Nove Butovice\",\r\n          \"transfer\": [],\r\n          \"time\": 2\r\n        },\r\n        \"19\": {\r\n          \"name\": \"Hurka\",\r\n          \"transfer\": [],\r\n          \"time\": 7\r\n        },\r\n        \"20\": {\r\n          \"name\": \"Luziny\",\r\n          \"transfer\": [],\r\n          \"time\": 5\r\n        },\r\n        \"21\": {\r\n          \"name\": \"Luka\",\r\n          \"transfer\": [],\r\n          \"time\": 6\r\n        },\r\n        \"22\": {\r\n          \"name\": \"Stodulky\",\r\n          \"transfer\": [],\r\n          \"time\": 7\r\n        },\r\n        \"23\": {\r\n          \"name\": \"Zlicin\",\r\n          \"transfer\": [],\r\n          \"time\": null\r\n        }\r\n      },\r\n      \"Linka C\": {\r\n        \"0\": {\r\n          \"name\": \"Letnany\",\r\n          \"transfer\": [],\r\n          \"time\": 3\r\n        },\r\n        \"1\": {\r\n          \"name\": \"Prosek\",\r\n          \"transfer\": [],\r\n          \"time\": 7\r\n        },\r\n        \"2\": {\r\n          \"name\": \"Strizkov\",\r\n          \"transfer\": [],\r\n          \"time\": 5\r\n        },\r\n        \"3\": {\r\n          \"name\": \"Ladvi\",\r\n          \"transfer\": [],\r\n          \"time\": 4\r\n        },\r\n        \"4\": {\r\n          \"name\": \"Kobylisy\",\r\n          \"transfer\": [],\r\n          \"time\": 5\r\n        },\r\n        \"5\": {\r\n          \"name\": \"Nadrazi Holesovice\",\r\n          \"transfer\": [],\r\n          \"time\": 7\r\n        },\r\n        \"6\": {\r\n          \"name\": \"Vltavska\",\r\n          \"transfer\": [],\r\n          \"time\": 2\r\n        },\r\n        \"7\": {\r\n          \"name\": \"Florenc\",\r\n          \"transfer\": [\r\n            {\r\n              \"line\": \"Linka B\",\r\n              \"station\": \"Florenc\"\r\n            }\r\n          ],\r\n          \"time\": 7\r\n        },\r\n        \"8\": {\r\n          \"name\": \"Hlavni nadrazi\",\r\n          \"transfer\": [],\r\n          \"time\": 2\r\n        },\r\n        \"9\": {\r\n          \"name\": \"Muzeum\",\r\n          \"transfer\": [\r\n            {\r\n              \"line\": \"Linka A\",\r\n              \"station\": \"Muzeum\"\r\n            }\r\n          ],\r\n          \"time\": 5\r\n        },\r\n        \"10\": {\r\n          \"name\": \"I.P.Pavlova\",\r\n          \"transfer\": [],\r\n          \"time\": 5\r\n        },\r\n        \"11\": {\r\n          \"name\": \"Vysehrad\",\r\n          \"transfer\": [],\r\n          \"time\": 4\r\n        },\r\n        \"12\": {\r\n          \"name\": \"Prazskeho povstani\",\r\n          \"transfer\": [],\r\n          \"time\": 7\r\n        },\r\n        \"13\": {\r\n          \"name\": \"Pankrac\",\r\n          \"transfer\": [],\r\n          \"time\": 5\r\n        },\r\n        \"14\": {\r\n          \"name\": \"Budejovicka\",\r\n          \"transfer\": [],\r\n          \"time\": 5\r\n        },\r\n        \"15\": {\r\n          \"name\": \"Kacerov\",\r\n          \"transfer\": [],\r\n          \"time\": 4\r\n        },\r\n        \"16\": {\r\n          \"name\": \"Roztyly\",\r\n          \"transfer\": [],\r\n          \"time\": 7\r\n        },\r\n        \"17\": {\r\n          \"name\": \"Chodov\",\r\n          \"transfer\": [],\r\n          \"time\": 6\r\n        },\r\n        \"18\": {\r\n          \"name\": \"Opatov\",\r\n          \"transfer\": [],\r\n          \"time\": 5\r\n        },\r\n        \"19\": {\r\n          \"name\": \"Haje\",\r\n          \"transfer\": [],\r\n          \"time\": null\r\n        }\r\n      }\r\n    }\r\n  learner_created: false\r\n- name: test/prague.json\r\n  visible: false\r\n  text: |-\r\n    {\r\n      \"Linka A\": {\r\n        \"1\": {\r\n          \"name\": \"Nemocnice Motol\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"2\": {\r\n          \"name\": \"Petriny\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"3\": {\r\n          \"name\": \"Nadrazi Veleslavin\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"4\": {\r\n          \"name\": \"Borislavka\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"5\": {\r\n          \"name\": \"Dejvicka\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"6\": {\r\n          \"name\": \"Hradcanska\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"7\": {\r\n          \"name\": \"Malostranska\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"8\": {\r\n          \"name\": \"Staromestska\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"9\": {\r\n          \"name\": \"Mustek\" ,\r\n          \"transfer\": [\r\n            {\r\n              \"line\": \"Linka B\" ,\r\n              \"station\": \"Mustek\"\r\n            }\r\n          ]\r\n        } ,\r\n        \"10\": {\r\n          \"name\": \"Muzeum\" ,\r\n          \"transfer\": [\r\n            {\r\n              \"line\": \"Linka C\" ,\r\n              \"station\": \"Muzeum\"\r\n            }\r\n          ]\r\n        } ,\r\n        \"11\": {\r\n          \"name\": \"Namesti Miru\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"12\": {\r\n          \"name\": \"Jiriho z Podebrad\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"13\": {\r\n          \"name\": \"Flora\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"14\": {\r\n          \"name\": \"Zelivskeho\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"15\": {\r\n          \"name\": \"Strasnicka\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"16\": {\r\n          \"name\": \"Skalka\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"17\": {\r\n          \"name\": \"Depo Hostivar\" ,\r\n          \"transfer\": []\r\n        }\r\n      } ,\r\n      \"Linka B\": {\r\n        \"1\": {\r\n          \"name\": \"Cerny Most\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"2\": {\r\n          \"name\": \"Rajska zahrada\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"3\": {\r\n          \"name\": \"Hloubetin\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"4\": {\r\n          \"name\": \"Kolbenova\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"5\": {\r\n          \"name\": \"Vysocanska\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"6\": {\r\n          \"name\": \"Ceskomoravska\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"7\": {\r\n          \"name\": \"Palmovka\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"8\": {\r\n          \"name\": \"Invalidovna\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"9\": {\r\n          \"name\": \"Krizikova\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"10\": {\r\n          \"name\": \"Florenc\" ,\r\n          \"transfer\": [\r\n            {\r\n              \"line\": \"Linka C\" ,\r\n              \"station\": \"Florenc\"\r\n            }\r\n          ]\r\n        } ,\r\n        \"11\": {\r\n          \"name\": \"Namesti Republiky\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"12\": {\r\n          \"name\": \"Mustek\" ,\r\n          \"transfer\": [\r\n            {\r\n              \"line\": \"Linka B\" ,\r\n              \"station\": \"Mustek\"\r\n            }\r\n          ]\r\n        } ,\r\n        \"13\": {\r\n          \"name\": \"Narodni trida\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"14\": {\r\n          \"name\": \"Karlovo namesti\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"15\": {\r\n          \"name\": \"Andel\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"16\": {\r\n          \"name\": \"Smichovske nadrazi\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"17\": {\r\n          \"name\": \"Radlicka\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"18\": {\r\n          \"name\": \"Jinonice\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"19\": {\r\n          \"name\": \"Nove Butovice\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"20\": {\r\n          \"name\": \"Hurka\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"21\": {\r\n          \"name\": \"Luziny\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"22\": {\r\n          \"name\": \"Luka\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"23\": {\r\n          \"name\": \"Stodulky\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"24\": {\r\n          \"name\": \"Zlicin\" ,\r\n          \"transfer\": []\r\n        }\r\n      } ,\r\n      \"Linka C\": {\r\n        \"1\": {\r\n          \"name\": \"Letnany\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"2\": {\r\n          \"name\": \"Prosek\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"3\": {\r\n          \"name\": \"Strizkov\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"4\": {\r\n          \"name\": \"Ladvi\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"5\": {\r\n          \"name\": \"Kobylisy\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"6\": {\r\n          \"name\": \"Nadrazi Holesovice\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"7\": {\r\n          \"name\": \"Vltavska\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"8\": {\r\n          \"name\": \"Florenc\" ,\r\n          \"transfer\": [\r\n            {\r\n              \"line\": \"Linka B\" ,\r\n              \"station\": \"Florenc\"\r\n            }\r\n          ]\r\n        } ,\r\n        \"9\": {\r\n          \"name\": \"Hlavni nadrazi\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"10\": {\r\n          \"name\": \"Muzeum\" ,\r\n          \"transfer\": [\r\n            {\r\n              \"line\": \"Linka A\" ,\r\n              \"station\": \"Muzeum\"\r\n            }\r\n          ]\r\n        } ,\r\n        \"11\": {\r\n          \"name\": \"I.P.Pavlova\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"12\": {\r\n          \"name\": \"Vysehrad\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"13\": {\r\n          \"name\": \"Prazskeho povstani\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"14\": {\r\n          \"name\": \"Pankrac\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"15\": {\r\n          \"name\": \"Budejovicka\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"16\": {\r\n          \"name\": \"Kacerov\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"17\": {\r\n          \"name\": \"Roztyly\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"18\": {\r\n          \"name\": \"Chodov\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"19\": {\r\n          \"name\": \"Opatov\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"20\": {\r\n          \"name\": \"Haje\" ,\r\n          \"transfer\": []\r\n        }\r\n      }\r\n    }\r\n  learner_created: false\r\nfeedback_link: https://hyperskill.org/learn/step/10345#comment\r\nstatus: Unchecked\r\nrecord: -1\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../HyperMetro/HyperMetro/The fastest route/task-info.yaml b/../HyperMetro/HyperMetro/The fastest route/task-info.yaml
--- a/../HyperMetro/HyperMetro/The fastest route/task-info.yaml	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../HyperMetro/HyperMetro/The fastest route/task-info.yaml	(date 1648369325544)
@@ -1,16 +1,5 @@
 type: edu
 files:
-- name: src/metro/Main.java
-  visible: true
-  text: |
-    package metro;
-
-    public class Main {
-        public static void main(String[] args) {
-            System.out.println("Hello, world!");
-        }
-    }
-  learner_created: false
 - name: test/Tests.java
   visible: false
   text: |-
@@ -484,6 +473,1355 @@
       }
     }
   learner_created: false
+- name: test/prague.json
+  visible: false
+  text: |-
+    {
+      "Linka A": {
+        "1": {
+          "name": "Nemocnice Motol" ,
+          "transfer": []
+        } ,
+        "2": {
+          "name": "Petriny" ,
+          "transfer": []
+        } ,
+        "3": {
+          "name": "Nadrazi Veleslavin" ,
+          "transfer": []
+        } ,
+        "4": {
+          "name": "Borislavka" ,
+          "transfer": []
+        } ,
+        "5": {
+          "name": "Dejvicka" ,
+          "transfer": []
+        } ,
+        "6": {
+          "name": "Hradcanska" ,
+          "transfer": []
+        } ,
+        "7": {
+          "name": "Malostranska" ,
+          "transfer": []
+        } ,
+        "8": {
+          "name": "Staromestska" ,
+          "transfer": []
+        } ,
+        "9": {
+          "name": "Mustek" ,
+          "transfer": [
+            {
+              "line": "Linka B" ,
+              "station": "Mustek"
+            }
+          ]
+        } ,
+        "10": {
+          "name": "Muzeum" ,
+          "transfer": [
+            {
+              "line": "Linka C" ,
+              "station": "Muzeum"
+            }
+          ]
+        } ,
+        "11": {
+          "name": "Namesti Miru" ,
+          "transfer": []
+        } ,
+        "12": {
+          "name": "Jiriho z Podebrad" ,
+          "transfer": []
+        } ,
+        "13": {
+          "name": "Flora" ,
+          "transfer": []
+        } ,
+        "14": {
+          "name": "Zelivskeho" ,
+          "transfer": []
+        } ,
+        "15": {
+          "name": "Strasnicka" ,
+          "transfer": []
+        } ,
+        "16": {
+          "name": "Skalka" ,
+          "transfer": []
+        } ,
+        "17": {
+          "name": "Depo Hostivar" ,
+          "transfer": []
+        }
+      } ,
+      "Linka B": {
+        "1": {
+          "name": "Cerny Most" ,
+          "transfer": []
+        } ,
+        "2": {
+          "name": "Rajska zahrada" ,
+          "transfer": []
+        } ,
+        "3": {
+          "name": "Hloubetin" ,
+          "transfer": []
+        } ,
+        "4": {
+          "name": "Kolbenova" ,
+          "transfer": []
+        } ,
+        "5": {
+          "name": "Vysocanska" ,
+          "transfer": []
+        } ,
+        "6": {
+          "name": "Ceskomoravska" ,
+          "transfer": []
+        } ,
+        "7": {
+          "name": "Palmovka" ,
+          "transfer": []
+        } ,
+        "8": {
+          "name": "Invalidovna" ,
+          "transfer": []
+        } ,
+        "9": {
+          "name": "Krizikova" ,
+          "transfer": []
+        } ,
+        "10": {
+          "name": "Florenc" ,
+          "transfer": [
+            {
+              "line": "Linka C" ,
+              "station": "Florenc"
+            }
+          ]
+        } ,
+        "11": {
+          "name": "Namesti Republiky" ,
+          "transfer": []
+        } ,
+        "12": {
+          "name": "Mustek" ,
+          "transfer": [
+            {
+              "line": "Linka B" ,
+              "station": "Mustek"
+            }
+          ]
+        } ,
+        "13": {
+          "name": "Narodni trida" ,
+          "transfer": []
+        } ,
+        "14": {
+          "name": "Karlovo namesti" ,
+          "transfer": []
+        } ,
+        "15": {
+          "name": "Andel" ,
+          "transfer": []
+        } ,
+        "16": {
+          "name": "Smichovske nadrazi" ,
+          "transfer": []
+        } ,
+        "17": {
+          "name": "Radlicka" ,
+          "transfer": []
+        } ,
+        "18": {
+          "name": "Jinonice" ,
+          "transfer": []
+        } ,
+        "19": {
+          "name": "Nove Butovice" ,
+          "transfer": []
+        } ,
+        "20": {
+          "name": "Hurka" ,
+          "transfer": []
+        } ,
+        "21": {
+          "name": "Luziny" ,
+          "transfer": []
+        } ,
+        "22": {
+          "name": "Luka" ,
+          "transfer": []
+        } ,
+        "23": {
+          "name": "Stodulky" ,
+          "transfer": []
+        } ,
+        "24": {
+          "name": "Zlicin" ,
+          "transfer": []
+        }
+      } ,
+      "Linka C": {
+        "1": {
+          "name": "Letnany" ,
+          "transfer": []
+        } ,
+        "2": {
+          "name": "Prosek" ,
+          "transfer": []
+        } ,
+        "3": {
+          "name": "Strizkov" ,
+          "transfer": []
+        } ,
+        "4": {
+          "name": "Ladvi" ,
+          "transfer": []
+        } ,
+        "5": {
+          "name": "Kobylisy" ,
+          "transfer": []
+        } ,
+        "6": {
+          "name": "Nadrazi Holesovice" ,
+          "transfer": []
+        } ,
+        "7": {
+          "name": "Vltavska" ,
+          "transfer": []
+        } ,
+        "8": {
+          "name": "Florenc" ,
+          "transfer": [
+            {
+              "line": "Linka B" ,
+              "station": "Florenc"
+            }
+          ]
+        } ,
+        "9": {
+          "name": "Hlavni nadrazi" ,
+          "transfer": []
+        } ,
+        "10": {
+          "name": "Muzeum" ,
+          "transfer": [
+            {
+              "line": "Linka A" ,
+              "station": "Muzeum"
+            }
+          ]
+        } ,
+        "11": {
+          "name": "I.P.Pavlova" ,
+          "transfer": []
+        } ,
+        "12": {
+          "name": "Vysehrad" ,
+          "transfer": []
+        } ,
+        "13": {
+          "name": "Prazskeho povstani" ,
+          "transfer": []
+        } ,
+        "14": {
+          "name": "Pankrac" ,
+          "transfer": []
+        } ,
+        "15": {
+          "name": "Budejovicka" ,
+          "transfer": []
+        } ,
+        "16": {
+          "name": "Kacerov" ,
+          "transfer": []
+        } ,
+        "17": {
+          "name": "Roztyly" ,
+          "transfer": []
+        } ,
+        "18": {
+          "name": "Chodov" ,
+          "transfer": []
+        } ,
+        "19": {
+          "name": "Opatov" ,
+          "transfer": []
+        } ,
+        "20": {
+          "name": "Haje" ,
+          "transfer": []
+        }
+      }
+    }
+  learner_created: false
+- name: src/metro/database/Graph.java
+  visible: true
+  text: |
+    package metro.database;
+
+    import java.util.ArrayList;
+    import java.util.HashMap;
+    import java.util.List;
+    import java.util.Map;
+
+    public class Graph {
+        private Map<Station, List<Edge>> graph;
+
+        private void formatPath(List<Station> path, boolean printDistance) {
+            if (path == null) {
+                System.out.println("No path possible.");
+                return;
+            }
+
+            double distance = 0.0;
+            Station prev = null;
+            for (Station station : path) {
+                if (printDistance && prev != null && prev.getLineName().equals(station.getLineName())) {
+                    Integer time = station.getPrevList().contains(prev) ? prev.getTime() : station.getTime();
+                    distance += time;
+                }
+                if (prev != null && !prev.getLineName().equals(station.getLineName())) {
+                    System.out.println("Transition to line " + station.getLineName());
+                    // as per current specifications, transfer between lines are 5 minutes
+                    if (printDistance) {
+                        distance += 5;
+                    }
+                }
+
+                System.out.println(station.getStationName());
+                prev = station;
+            }
+            if (printDistance) {
+                System.out.println("Total: " + (int) distance + " minutes in the way");
+            }
+        }
+
+        public void findRouteDijkstra(Station fromStation, Station toStation) {
+            populateDijkstraGraph();
+            DijkstrasShortestPath solver = new DijkstrasShortestPath(graph);
+
+            List<Station> path = solver.reconstructPath(fromStation, toStation);
+            formatPath(path, true);
+        }
+
+        private void populateDijkstraGraph() {
+            graph = new HashMap<>();
+            for (Station station : Station.getAllStations().values()) {
+                graph.put(station, new ArrayList<>());
+
+                if (!station.getTransferList().isEmpty()) {
+                    for (Transfer transfer : station.getTransferList()) {
+                        if (station.getStationName().equals(transfer.getStation().getStationName())) {
+                            // as per current specifications, transfer between lines are 5 minutes
+                            addDirectedEdge(station, transfer.getStation(), 5);
+                        } else {
+                            // This case should not be possible as all transfer stations are between same stations on different lines
+                            // Still, this is added to account for the edge case of user calling connect command and then calling route or fastest-route command
+
+                            // The edge will have a weight of station.getTime() as it starts at station
+                            addDirectedEdge(station, transfer.getStation(), station.getTime());
+                        }
+                    }
+                }
+
+                if (!station.getPrevList().isEmpty()) {
+                    for (Station prev : station.getPrevList()) {
+                        // The edge will have a weight of prev.getTime() as it starts at prev
+                        addDirectedEdge(station, prev, prev.getTime());
+                    }
+                }
+
+                if (!station.getNextList().isEmpty()) {
+                    for (Station next : station.getNextList()) {
+                        // The edge will have a weight of station.getTime() as it starts at station
+                        addDirectedEdge(station, next, station.getTime());
+                    }
+                }
+            }
+        }
+
+        public void findRouteBFS(Station fromStation, Station toStation) {
+            populateBFSGraph();
+            BreadthFirstSearch solver = new BreadthFirstSearch(graph);
+
+            List<Station> path = solver.reconstructPath(fromStation, toStation);
+            formatPath(path, false);
+        }
+
+        public void populateBFSGraph() {
+            graph = new HashMap<>();
+            for (Station station : Station.getAllStations().values()) {
+                graph.put(station, new ArrayList<>());
+
+                if (!station.getTransferList().isEmpty()) {
+                    for (Transfer transfer : station.getTransferList()) {
+                        if (station.getStationName().equals(transfer.getStation().getStationName())) {
+                            // transfer between lines is assumed to have 0 cost
+                            addDirectedEdge(station, transfer.getStation(), 0);
+                        } else {
+                            // This case should not be possible as all transfer stations are between same stations on different lines
+                            // Still, this is added to account for the edge case of user calling connect command and then calling route or fastest-route command
+
+                            // The edge will have a weight of 1 as all edges have same weight
+                            addDirectedEdge(station, transfer.getStation(), 1);
+                        }
+                    }
+                }
+
+                if (!station.getPrevList().isEmpty()) {
+                    for (Station prev : station.getPrevList()) {
+                        // The edge will have a weight of 1 as all edges have same weight
+                        addDirectedEdge(station, prev, 1);
+                    }
+                }
+
+                if (!station.getNextList().isEmpty()) {
+                    for (Station next : station.getNextList()) {
+                        // The edge will have a weight of 1 as all edges have same weight
+                        addDirectedEdge(station, next, 1);
+                    }
+                }
+            }
+        }
+
+        // Add a directed weighted edge from station u to station v with weight cost
+        private void addDirectedEdge(Station u, Station v, Integer cost) {
+            graph.get(u).add(new Edge(u, v, cost));
+        }
+    }
+  learner_created: true
+- name: src/metro/commands/OutputCommand.java
+  visible: true
+  text: |
+    package metro.commands;
+
+    import metro.database.Subway;
+
+    public class OutputCommand implements Command {
+        private final String lineName;
+        private final Subway subway;
+
+        public OutputCommand(String lineName, Subway subway) {
+            this.lineName = lineName;
+            this.subway = subway;
+        }
+
+        @Override
+        public void execute() {
+            subway.output(lineName);
+        }
+    }
+  learner_created: true
+- name: src/metro/commands/RouteCommand.java
+  visible: true
+  text: |
+    package metro.commands;
+
+    import metro.database.Subway;
+
+    public class RouteCommand implements Command {
+        private final String line1;
+        private final String station1;
+        private final String line2;
+        private final String station2;
+        private final Subway subway;
+
+        public RouteCommand(String line1, String station1, String line2, String station2, Subway subway) {
+            this.line1 = line1;
+            this.station1 = station1;
+            this.line2 = line2;
+            this.station2 = station2;
+            this.subway = subway;
+        }
+
+        @Override
+        public void execute() {
+            subway.route(line1, station1, line2, station2);
+        }
+    }
+  learner_created: true
+- name: src/metro/commands/AddHeadCommand.java
+  visible: true
+  text: |
+    package metro.commands;
+
+    import metro.database.Subway;
+
+    public class AddHeadCommand implements Command {
+        private final String lineName;
+        private final String stationNameToAdd;
+        private final String nextStationName;
+        private final Integer time;
+        private final Subway subway;
+
+        public AddHeadCommand(String lineName, String stationNameToAppend, String nextStationName, Integer time, Subway subway) {
+            this.lineName = lineName;
+            this.stationNameToAdd = stationNameToAppend;
+            this.nextStationName = nextStationName;
+            this.time = time;
+            this.subway = subway;
+        }
+
+        @Override
+        public void execute() {
+            subway.addHead(lineName, stationNameToAdd, nextStationName, time);
+        }
+    }
+  learner_created: true
+- name: src/metro/commands/FastestRouteCommand.java
+  visible: true
+  text: |
+    package metro.commands;
+
+    import metro.database.Subway;
+
+    public class FastestRouteCommand implements Command {
+        private final String line1;
+        private final String station1;
+        private final String line2;
+        private final String station2;
+        private final Subway subway;
+
+        public FastestRouteCommand(String line1, String station1, String line2, String station2, Subway subway) {
+            this.line1 = line1;
+            this.station1 = station1;
+            this.line2 = line2;
+            this.station2 = station2;
+            this.subway = subway;
+        }
+
+        @Override
+        public void execute() {
+            subway.fastestRoute(line1, station1, line2, station2);
+        }
+    }
+  learner_created: true
+- name: src/metro/database/Station.java
+  visible: true
+  text: |
+    package metro.database;
+
+    import java.util.ArrayList;
+    import java.util.HashMap;
+    import java.util.List;
+    import java.util.Map;
+
+    public class Station {
+        private static final Map<String, Station> allStations = new HashMap<>();
+        private final String stationName;
+        private final String lineName;
+        private final List<Transfer> transferList;
+        private Integer time;
+        private List<Station> prevList;
+        private List<Station> nextList;
+
+        public Station(String stationName, String lineName, Integer time) {
+            this.stationName = stationName;
+            this.lineName = lineName;
+            this.time = time;
+            this.prevList = new ArrayList<>();
+            this.nextList = new ArrayList<>();
+            this.transferList = new ArrayList<>();
+        }
+
+        // key for allStations map will be "stationName^lineName"
+        public static Station getInstance(String stationName, String lineName, Integer time) {
+            String key = stationName + "^" + lineName;
+            Station station = allStations.get(key);
+
+            if (station == null) {
+                station = new Station(stationName, lineName, time);
+                allStations.put(key, station);
+            }
+            return station;
+        }
+
+        // key for allStations map will be "stationName^lineName"
+        public static Station checkInstance(String stationName, String lineName) {
+            String key = stationName + "^" + lineName;
+            return allStations.get(key);
+        }
+
+        public static Map<String, Station> getAllStations() {
+            return allStations;
+        }
+
+        public static void deleteStation(String stationName, String lineName) {
+            String key = stationName + "^" + lineName;
+            allStations.remove(key);
+        }
+
+        public static void deleteStation(Station station) {
+            deleteStation(station.getStationName(), station.getLineName());
+        }
+
+        public void addPrevious(Station station) {
+            prevList.add(station);
+        }
+
+        public void addNext(Station station) {
+            nextList.add(station);
+        }
+
+        public List<Station> getPrevList() {
+            return prevList;
+        }
+
+        public void setPrevList(List<Station> prevList) {
+            this.prevList = prevList;
+        }
+
+        public List<Station> getNextList() {
+            return nextList;
+        }
+
+        public void setNextList(List<Station> nextList) {
+            this.nextList = nextList;
+        }
+
+        @Override
+        public String toString() {
+            StringBuilder sb = new StringBuilder();
+            sb.append(this.stationName);
+            for (Transfer t : transferList) {
+                sb.append(" - ").append(t);
+            }
+            return sb.toString();
+        }
+
+        public String getStationName() {
+            return stationName;
+        }
+
+        public String getLineName() {
+            return lineName;
+        }
+
+        public List<Transfer> getTransferList() {
+            return transferList;
+        }
+
+        public void addTransfer(Transfer transfer) {
+            transferList.add(transfer);
+        }
+
+        public void deleteTransfer(Station station) {
+            transferList.removeIf(transfer -> transfer.getStation() == station);
+        }
+
+        public Integer getTime() {
+            return time;
+        }
+
+        public void setTime(Integer time) {
+            this.time = time;
+        }
+    }
+  learner_created: true
+- name: src/metro/database/Line.java
+  visible: true
+  text: |
+    package metro.database;
+
+    import java.util.ArrayList;
+    import java.util.List;
+
+    public class Line {
+        private final String lineName;
+        private final List<Station> startStationsList;
+        private final List<Station> endStationsList;
+
+        public Line(String lineName) {
+            this.lineName = lineName;
+            startStationsList = new ArrayList<>();
+            endStationsList = new ArrayList<>();
+        }
+
+        public void addStartStation(Station station) {
+            startStationsList.add(station);
+        }
+
+        public void addEndStation(Station station) {
+            endStationsList.add(station);
+        }
+
+        public boolean append(String stationNameToAppend, String prevStationName, Integer time) {
+            Station prevStation = Station.checkInstance(prevStationName, lineName);
+            if (prevStation == null) {
+                return false;
+            }
+
+            Station stationToAppend = Station.getInstance(stationNameToAppend, lineName, null);
+            endStationsList.remove(prevStation);
+            endStationsList.add(stationToAppend);
+            prevStation.addNext(stationToAppend);
+            prevStation.setTime(time);
+            stationToAppend.addPrevious(prevStation);
+            return true;
+        }
+
+        public boolean addHead(String stationNameToAdd, String nextStationName, Integer time) {
+            Station nextStation = Station.checkInstance(nextStationName, lineName);
+            if (nextStation == null) {
+                return false;
+            }
+
+            Station stationToAdd = Station.getInstance(stationNameToAdd, lineName, time);
+            startStationsList.remove(nextStation);
+            startStationsList.add(stationToAdd);
+            nextStation.addPrevious(stationToAdd);
+            stationToAdd.addNext(nextStation);
+            return true;
+        }
+
+        public boolean remove(String stationName) {
+            boolean removed = false;
+            for (Station startStation : startStationsList) {
+                removed = removed || remove(startStation, stationName);
+            }
+            return removed;
+        }
+
+        private boolean remove(Station currentStation, String stationNameToRemove) {
+            if (currentStation.getStationName().equals(stationNameToRemove)) {
+                remove(currentStation);
+                return true;
+            }
+
+            for (Station next : currentStation.getNextList()) {
+                if (remove(next, stationNameToRemove)) {
+                    return true;
+                }
+            }
+            return false;
+        }
+
+        private void remove(Station stationToRemove) {
+            if (stationToRemove.getPrevList() == null) {
+                removeFirst(stationToRemove);
+                return;
+            }
+            if (stationToRemove.getNextList() == null) {
+                removeLast(stationToRemove);
+                return;
+            }
+
+            for (Station next : stationToRemove.getNextList()) {
+                next.setPrevList(stationToRemove.getPrevList());
+            }
+
+            for (Station prev : stationToRemove.getPrevList()) {
+                prev.setNextList(stationToRemove.getNextList());
+            }
+
+            if (stationToRemove.getTransferList() != null) {
+                for (Transfer transfer : stationToRemove.getTransferList()) {
+                    transfer.getStation().deleteTransfer(stationToRemove);
+                }
+            }
+
+            Station.deleteStation(stationToRemove);
+        }
+
+        private void removeFirst(Station stationToRemove) {
+            startStationsList.remove(stationToRemove);
+
+            if (stationToRemove.getNextList() == null) {
+                endStationsList.remove(stationToRemove);
+            } else {
+                startStationsList.addAll(stationToRemove.getNextList());
+                for (Station next : stationToRemove.getNextList()) {
+                    next.setPrevList(new ArrayList<>());
+                }
+            }
+
+            Station.deleteStation(stationToRemove);
+        }
+
+        private void removeLast(Station stationToRemove) {
+            endStationsList.remove(stationToRemove);
+
+            if (stationToRemove.getPrevList() == null) {
+                startStationsList.remove(stationToRemove);
+            } else {
+                endStationsList.addAll(stationToRemove.getPrevList());
+                for (Station prev : stationToRemove.getPrevList()) {
+                    prev.setNextList(new ArrayList<>());
+                }
+            }
+        }
+
+        // TODO: 13-02-2022 does not work for looped lines
+        public void output() {
+            for (Station s : startStationsList) {
+                System.out.println(s);
+                for (Station n : s.getNextList()) {
+                    print(n);
+                }
+                System.out.println("----------------");
+                System.out.println("----------------");
+            }
+        }
+
+        private void print(Station station) {
+            if (startStationsList.contains(station)) {
+                return;
+            }
+            System.out.println(station);
+            for (Station s : station.getNextList()) {
+                print(s);
+            }
+        }
+    }
+  learner_created: true
+- name: src/metro/commands/AppendCommand.java
+  visible: true
+  text: |
+    package metro.commands;
+
+    import metro.database.Subway;
+
+    public class AppendCommand implements Command {
+        private final String lineName;
+        private final String stationNameToAppend;
+        private final String prevStationName;
+        private final Integer time;
+        private final Subway subway;
+
+        public AppendCommand(String lineName, String stationNameToAppend, String prevStationName, Integer time, Subway subway) {
+            this.lineName = lineName;
+            this.stationNameToAppend = stationNameToAppend;
+            this.prevStationName = prevStationName;
+            this.time = time;
+            this.subway = subway;
+        }
+
+        @Override
+        public void execute() {
+            subway.append(lineName, stationNameToAppend, prevStationName, time);
+        }
+    }
+  learner_created: true
+- name: src/metro/database/BreadthFirstSearch.java
+  visible: true
+  text: |+
+    package metro.database;
+
+    import java.util.*;
+
+    public class BreadthFirstSearch {
+        private final Map<Station, List<Edge>> graph;
+
+        public BreadthFirstSearch(Map<Station, List<Edge>> graph) {
+            if (graph == null) {
+                throw new IllegalArgumentException("Graph cannot be null");
+            }
+            this.graph = graph;
+        }
+
+        public List<Station> reconstructPath(Station fromStation, Station toStation) {
+            Map<Station, Station> prev = new HashMap<>();
+            bfs(fromStation, prev);
+            List<Station> path = new ArrayList<>();
+
+            Station at = toStation;
+            path.add(at);
+            while (prev.get(at) != null) {
+                path.add(prev.get(at));
+                at = prev.get(at);
+            }
+
+            Collections.reverse(path);
+            if (path.get(0) == fromStation) {
+                return path;
+            }
+            path.clear();
+            return path;
+        }
+
+        private void bfs(Station fromStation, Map<Station, Station> prev) {
+            Map<Station, Boolean> visited = new HashMap<>();
+            for (Station s : graph.keySet()) {
+                visited.put(s, false);
+            }
+            Queue<Station> queue = new ArrayDeque<>();
+
+            queue.offer(fromStation);
+            visited.replace(fromStation, true);
+
+            while (!queue.isEmpty()) {
+                Station station = queue.poll();
+                List<Edge> edges = graph.get(station);
+
+                // Loop through all edges
+                for (Edge edge : edges) {
+                    if (!visited.get(edge.getToStation())) {
+                        visited.put(edge.getToStation(), true);
+                        prev.put(edge.getToStation(), station);
+                        queue.offer(edge.getToStation());
+                    }
+                }
+            }
+        }
+    }
+
+  learner_created: true
+- name: src/metro/database/Transfer.java
+  visible: true
+  text: |
+    package metro.database;
+
+    public class Transfer {
+        private final Station station;
+
+        public Transfer(Station station) {
+            this.station = station;
+        }
+
+        @Override
+        public String toString() {
+            return String.format("%s (%s)",
+                    station.getStationName(), station.getLineName());
+        }
+
+        public Station getStation() {
+            return station;
+        }
+    }
+  learner_created: true
+- name: src/metro/commands/Controller.java
+  visible: true
+  text: |
+    package metro.commands;
+
+    public class Controller {
+        private Command command;
+
+        public void setCommand(Command command) {
+            this.command = command;
+        }
+
+        public void executeCommand() {
+            command.execute();
+        }
+    }
+  learner_created: true
+- name: src/metro/database/Edge.java
+  visible: true
+  text: |-
+    package metro.database;
+
+    public class Edge {
+        private final Station fromStation;
+        private final Station toStation;
+        private final Integer cost;
+
+        public Edge(Station fromStation, Station toStation, Integer cost) {
+            this.fromStation = fromStation;
+            this.toStation = toStation;
+            this.cost = cost;
+        }
+
+        public Station getToStation() {
+            return toStation;
+        }
+
+        public Integer getCost() {
+            return cost;
+        }
+    }
+  learner_created: true
+- name: src/metro/database/Subway.java
+  visible: true
+  text: |
+    package metro.database;
+
+    import java.util.HashMap;
+    import java.util.Map;
+
+    public class Subway {
+        private final String inputFile;
+        private final Map<String, Line> allLines;
+
+        public Subway(String inputFile) {
+            this.inputFile = inputFile;
+            this.allLines = new HashMap<>();
+        }
+
+        public boolean populateMap() {
+            return ReadSubwayData.readFromFile(inputFile, allLines);
+        }
+
+        public void fastestRoute(String lineName1, String stationName1, String lineName2, String stationName2) {
+            Station fromStation = Station.checkInstance(stationName1, lineName1);
+            Station toStation = Station.checkInstance(stationName2, lineName2);
+            if (fromStation == null || toStation == null) {
+                System.out.println("Invalid command. Wrong station or line names.");
+                return;
+            }
+
+            Graph graph = new Graph();
+            graph.findRouteDijkstra(fromStation, toStation);
+        }
+
+        public void route(String lineName1, String stationName1, String lineName2, String stationName2) {
+            Station fromStation = Station.checkInstance(stationName1, lineName1);
+            Station toStation = Station.checkInstance(stationName2, lineName2);
+            if (fromStation == null || toStation == null) {
+                System.out.println("Invalid command. Wrong station or line names.");
+                return;
+            }
+
+            Graph graph = new Graph();
+            graph.findRouteBFS(fromStation, toStation);
+        }
+
+        public void connect(String lineName1, String stationName1, String lineName2, String stationName2) {
+            Station station1 = Station.checkInstance(stationName1, lineName1);
+            Station station2 = Station.checkInstance(stationName2, lineName2);
+            if (station1 == null || station2 == null) {
+                System.out.println("Invalid command. Wrong station or line names.");
+                return;
+            }
+
+            station1.addTransfer(new Transfer(station2));
+            station2.addTransfer(new Transfer(station1));
+        }
+
+        public void append(String lineName, String stationNameToAppend, String prevStationName, Integer time) {
+            Line line = allLines.get(lineName);
+
+            if (line != null) {
+                boolean append = line.append(stationNameToAppend, prevStationName, time);
+                if (!append) {
+                    System.out.println("Invalid command. Wrong station name.");
+                }
+            } else {
+                System.out.println("Invalid command. Wrong line name.");
+            }
+        }
+
+        public void addHead(String lineName, String stationNameToAdd, String nextStationName, Integer time) {
+            Line line = allLines.get(lineName);
+
+            if (line != null) {
+                boolean added = line.addHead(stationNameToAdd, nextStationName, time);
+                if (!added) {
+                    System.out.println("Invalid command. Wrong station name.");
+                }
+            } else {
+                System.out.println("Invalid command. Wrong line name.");
+            }
+        }
+
+        public void remove(String lineName, String stationName) {
+            Line line = allLines.get(lineName);
+
+            if (line != null) {
+                boolean removed = line.remove(stationName);
+                if (!removed) {
+                    System.out.println("Invalid command. Wrong station name.");
+                }
+            } else {
+                System.out.println("Invalid command. Wrong line name.");
+            }
+        }
+
+        // does not work for looped lines
+        public void output(String lineName) {
+            Line line = allLines.get(lineName);
+
+            if (line != null) {
+                line.output();
+            } else {
+                System.out.println("Invalid command. Wrong line name.");
+            }
+        }
+    }
+  learner_created: true
+- name: src/metro/commands/Command.java
+  visible: true
+  text: |
+    package metro.commands;
+
+    public interface Command {
+        void execute();
+    }
+  learner_created: true
+- name: src/metro/commands/RemoveCommand.java
+  visible: true
+  text: |
+    package metro.commands;
+
+    import metro.database.Subway;
+
+    public class RemoveCommand implements Command {
+        private final String lineName;
+        private final String stationName;
+        private final Subway subway;
+
+        public RemoveCommand(String lineName, String stationName, Subway subway) {
+            this.lineName = lineName;
+            this.stationName = stationName;
+            this.subway = subway;
+        }
+
+        @Override
+        public void execute() {
+            subway.remove(lineName, stationName);
+        }
+    }
+  learner_created: true
+- name: src/metro/database/DijkstrasShortestPath.java
+  visible: true
+  text: |
+    package metro.database;
+
+    import java.util.*;
+
+    public class DijkstrasShortestPath {
+        // Small epsilon value to compare double values
+        private static final double EPS = 1e-6;
+        private final Map<Station, List<Edge>> graph;
+        private final Comparator<Node> comparator = (node1, node2) -> {
+            if (Math.abs(node1.value - node2.value) < EPS) {
+                return 0;
+            }
+            return (node1.value - node2.value) > 0 ? 1 : -1;
+        };
+
+        public DijkstrasShortestPath(Map<Station, List<Edge>> graph) {
+            if (graph == null) {
+                throw new IllegalArgumentException("Graph cannot be null");
+            }
+            this.graph = graph;
+        }
+
+        public List<Station> reconstructPath(Station fromStation, Station toStation) {
+            Map<Station, Station> prev = new HashMap<>();
+            int n = graph.size();
+            Map<Station, Double> dist = new HashMap<>();
+            for (Station s : graph.keySet()) {
+                dist.put(s, Double.POSITIVE_INFINITY);
+            }
+
+            dijkstra(fromStation, dist, prev);
+            List<Station> path = new ArrayList<>();
+            Station at = toStation;
+            path.add(at);
+            while (prev.get(at) != null) {
+                path.add(prev.get(at));
+                at = prev.get(at);
+            }
+
+            Collections.reverse(path);
+            if (path.get(0) == fromStation) {
+                return path;
+            }
+            path.clear();
+            return path;
+        }
+
+        public void dijkstra(Station fromStation, Map<Station, Double> dist, Map<Station, Station> prev) {
+            dist.put(fromStation, 0.0);
+
+            // Keep a priority queue of the next most promising node to visit
+            PriorityQueue<Node> pq = new PriorityQueue<>(comparator);
+            pq.offer(new Node(fromStation, 0));
+
+            Map<Station, Boolean> visited = new HashMap<>();
+            for (Station s : graph.keySet()) {
+                visited.put(s, false);
+            }
+            visited.replace(fromStation, true);
+
+            while (!pq.isEmpty()) {
+                Node node = pq.poll();
+                visited.put(node.station, true);
+
+                // Ignore the outdated pairs where we already found a better path routing through other nodes
+                if (dist.get(node.station) < node.value) {
+                    continue;
+                }
+
+                List<Edge> edges = graph.get(node.station);
+                for (Edge edge : edges) {
+                    if (visited.get(edge.getToStation())) {
+                        continue;
+                    }
+
+                    // Relax edge by updating minimum cost if possible
+                    double newDist = dist.get(node.station) + edge.getCost();
+                    if (newDist < dist.get(edge.getToStation())) {
+                        prev.put(edge.getToStation(), node.station);
+                        dist.put(edge.getToStation(), newDist);
+                        pq.offer(new Node(edge.getToStation(), dist.get(edge.getToStation())));
+                    }
+                }
+            }
+        }
+
+        // Node class to track the nodes to visit
+        static class Node {
+            Station station;
+            double value;
+
+            public Node(Station station, double value) {
+                this.station = station;
+                this.value = value;
+            }
+        }
+    }
+  learner_created: true
+- name: src/metro/database/ReadSubwayData.java
+  visible: true
+  text: |
+    package metro.database;
+
+    import com.google.gson.JsonArray;
+    import com.google.gson.JsonElement;
+    import com.google.gson.JsonObject;
+    import com.google.gson.JsonParser;
+
+    import java.io.File;
+    import java.io.IOException;
+    import java.io.Reader;
+    import java.nio.file.Files;
+    import java.nio.file.Path;
+    import java.util.Map;
+    import java.util.Set;
+
+    public class ReadSubwayData {
+        public static boolean readFromFile(String inputFile, Map<String, Line> allLines) {
+            if (!isFileFormatCorrect(inputFile)) {
+                return false;
+            }
+
+            JsonObject jsonObject;
+            try (Reader reader = Files.newBufferedReader(Path.of(inputFile))) {
+                jsonObject = JsonParser.parseReader(reader).getAsJsonObject();
+            } catch (IOException e) {
+                System.out.println("Error! Such a file doesn't exist!");
+                return false;
+            }
+
+            fillMap(jsonObject, allLines);
+            return true;
+        }
+
+        private static boolean isFileFormatCorrect(String inputFile) {
+            String fileName = new File(inputFile).getName();
+            int dotIndex = fileName.lastIndexOf('.');
+            if (dotIndex == -1) {
+                System.out.println("Error! Incorrect file!");
+                return false;
+            } else if (!fileName.substring(dotIndex + 1).equals("json")) {
+                System.out.println("Error! Incorrect file!");
+                return false;
+            }
+            return true;
+        }
+
+        private static void fillMap(JsonObject jsonObject, Map<String, Line> allLines) {
+            Set<Map.Entry<String, JsonElement>> entrySet = jsonObject.entrySet();
+
+            // create stations first
+            for (Map.Entry<String, JsonElement> entry : entrySet) {
+                String lineName = entry.getKey();
+                JsonArray lineJsonArray = entry.getValue().getAsJsonArray();
+
+                for (int i = 0; i < lineJsonArray.size(); i++) {
+                    JsonObject stationJsonObject = lineJsonArray.get(i).getAsJsonObject();
+                    String stationName = stationJsonObject.get("name").getAsString();
+                    Integer time = null;
+                    if (stationJsonObject.has("time")) {
+                        time = stationJsonObject.get("time").getAsInt();
+                    }
+                    Station station = Station.getInstance(stationName, lineName, time);
+                }
+            }
+
+            // now add transfers, prev, next stations
+            // also create Line objects and add start, end stations
+            for (Map.Entry<String, JsonElement> entry : entrySet) {
+                String lineName = entry.getKey();
+                Line line = new Line(lineName);
+                allLines.put(lineName, line);
+                JsonArray lineJsonArray = entry.getValue().getAsJsonArray();
+
+                for (int i = 0; i < lineJsonArray.size(); i++) {
+                    JsonObject stationJsonObject = lineJsonArray.get(i).getAsJsonObject();
+                    String stationName = stationJsonObject.get("name").getAsString();
+                    Station station = Station.checkInstance(stationName, lineName);
+
+                    JsonArray transferJsonArray = stationJsonObject.get("transfer").getAsJsonArray();
+                    if (!transferJsonArray.isEmpty()) {
+                        for (int j = 0; j < transferJsonArray.size(); j++) {
+                            JsonObject transfer = transferJsonArray.get(j).getAsJsonObject();
+                            Station transferStation = Station.checkInstance(transfer.get("station").getAsString(), transfer.get("line").getAsString());
+                            station.addTransfer(new Transfer(transferStation));
+                        }
+                    }
+
+                    JsonArray prevJsonArray = stationJsonObject.get("prev").getAsJsonArray();
+                    if (!prevJsonArray.isEmpty()) {
+                        for (int k = 0; k < prevJsonArray.size(); k++) {
+                            String prevStationName = prevJsonArray.get(k).getAsString();
+                            Station prevStation = Station.checkInstance(prevStationName, lineName);
+                            station.addPrevious(prevStation);
+                        }
+                    } else {
+                        line.addStartStation(station);
+                    }
+
+                    JsonArray nextJsonArray = stationJsonObject.get("next").getAsJsonArray();
+                    if (!nextJsonArray.isEmpty()) {
+                        for (int k = 0; k < nextJsonArray.size(); k++) {
+                            String nextStationName = nextJsonArray.get(k).getAsString();
+                            Station nextStation = Station.checkInstance(nextStationName, lineName);
+                            station.addNext(nextStation);
+                        }
+                    } else {
+                        line.addEndStation(station);
+                    }
+                }
+            }
+        }
+    }
+  learner_created: true
+- name: src/metro/commands/ConnectCommand.java
+  visible: true
+  text: |
+    package metro.commands;
+
+    import metro.database.Subway;
+
+    public class ConnectCommand implements Command {
+        private final String line1;
+        private final String station1;
+        private final String line2;
+        private final String station2;
+        private final Subway subway;
+
+        public ConnectCommand(String line1, String station1, String line2, String station2, Subway subway) {
+            this.line1 = line1;
+            this.station1 = station1;
+            this.line2 = line2;
+            this.station2 = station2;
+            this.subway = subway;
+        }
+
+        @Override
+        public void execute() {
+            subway.connect(line1, station1, line2, station2);
+        }
+    }
+  learner_created: true
 - name: test/prague_w_time.json
   visible: false
   text: |-
@@ -831,292 +2169,222 @@
       }
     }
   learner_created: false
-- name: test/prague.json
-  visible: false
+- name: src/metro/Main.java
+  visible: true
+  text: |
+    //package metro;
+    //
+    //import metro.commands.*;
+    //import metro.database.Subway;
+    //
+    //import java.util.Scanner;
+    //
+    //public class Main {
+    //    public static void main(String[] args) {
+    //        String filePath = args[0];
+    //        Subway subway = new Subway(filePath);
+    //        boolean read = subway.populateMap();
+    //        if (!read) {
+    //            return;
+    //        }
+    //
+    //        Scanner scanner = new Scanner(System.in);
+    //        Controller controller = new Controller();
+    //        Command command;
+    //
+    //        while (true) {
+    //            String input = scanner.nextLine();
+    //            if (input.equals("/exit")) {
+    //                break;
+    //            }
+    //            String[] arr = input.split(" ", 2);
+    //            if (arr.length == 1) {
+    //                System.out.println("Invalid command. Input should have action and arguments.");
+    //                continue;
+    //            }
+    //
+    //            InputParser parser = new InputParser(arr[0], arr[1]);
+    //            int time;
+    //
+    //            switch (parser.action) {
+    //                case "/append":
+    //                    // user input string should be "/append lineName stationNameToAppend prevStationName time"
+    //
+    //                    if (parser.arg1 == null || parser.arg2 == null) {
+    //                        System.out.println("Invalid command. Line name or station name to append are null.");
+    //                        continue;
+    //                    }
+    //                    if (parser.arg3 == null || parser.arg4 == null) {
+    //                        System.out.println("Invalid command. Previous station name or time is null");
+    //                        continue;
+    //                    }
+    //                    try {
+    //                        time = Integer.parseInt(parser.arg4);
+    //                    } catch (NumberFormatException e) {
+    //                        System.out.println("Invalid command. Time field should be integer");
+    //                        continue;
+    //                    }
+    //
+    //                    command = new AppendCommand(parser.arg1, parser.arg2, parser.arg3, time, subway);
+    //                    break;
+    //
+    //                case "/add-head":
+    //                    // user input string should be "/add-head lineName stationNameToAdd nextStationName time"
+    //
+    //                    if (parser.arg1 == null || parser.arg2 == null) {
+    //                        System.out.println("Invalid command. Line name or station name to add are null.");
+    //                        continue;
+    //                    }
+    //                    if (parser.arg3 == null || parser.arg4 == null) {
+    //                        System.out.println("Invalid command. Next station name or time is null");
+    //                        continue;
+    //                    }
+    //                    try {
+    //                        time = Integer.parseInt(parser.arg4);
+    //                    } catch (NumberFormatException e) {
+    //                        System.out.println("Invalid command. Time field should be integer");
+    //                        continue;
+    //                    }
+    //
+    //                    command = new AddHeadCommand(parser.arg1, parser.arg2, parser.arg3, time, subway);
+    //                    break;
+    //
+    //                case "/remove":
+    //                    // user input string should be "/remove lineName stationName"
+    //
+    //                    if (parser.arg1 == null || parser.arg2 == null) {
+    //                        System.out.println("Invalid command. Line or station are null.");
+    //                        continue;
+    //                    }
+    //
+    //                    command = new RemoveCommand(parser.arg1, parser.arg2, subway);
+    //                    break;
+    //
+    //                case "/output":
+    //                    // user input string should be "/output lineName"
+    //
+    //                    // does not work for looped lines
+    //
+    //                    if (parser.arg1 == null) {
+    //                        System.out.println("Invalid command. Line name is null.");
+    //                        continue;
+    //                    }
+    //
+    //                    command = new OutputCommand(parser.arg1, subway);
+    //                    break;
+    //
+    //                case "/connect":
+    //                    // user input string should be "/connect lineName1 stationName1 lineName2 stationName2"
+    //
+    //                    if (parser.arg1 == null || parser.arg2 == null) {
+    //                        System.out.println("Invalid command. Line or station are null.");
+    //                        continue;
+    //                    }
+    //                    if (parser.arg3 == null || parser.arg4 == null) {
+    //                        System.out.println("Invalid command. Second line or station are null.");
+    //                        continue;
+    //                    }
+    //
+    //                    command = new ConnectCommand(parser.arg1, parser.arg2, parser.arg3, parser.arg4, subway);
+    //                    break;
+    //
+    //                case "/route":
+    //                    // user input string should be "/route lineName1 stationName1 lineName2 stationName2"
+    //
+    //                    if (parser.arg1 == null || parser.arg2 == null) {
+    //                        System.out.println("Invalid command. Line or station are null.");
+    //                        continue;
+    //                    }
+    //                    if (parser.arg3 == null || parser.arg4 == null) {
+    //                        System.out.println("Invalid command. Second line or station are null.");
+    //                        continue;
+    //                    }
+    //                    command = new RouteCommand(parser.arg1, parser.arg2, parser.arg3, parser.arg4, subway);
+    //                    break;
+    //
+    //                case "/fastest-route":
+    //                    // user input string should be "/fastest-route lineName1 stationName1 lineName2 stationName2"
+    //
+    //                    if (parser.arg1 == null || parser.arg2 == null) {
+    //                        System.out.println("Invalid command. Line or station are null.");
+    //                        continue;
+    //                    }
+    //                    if (parser.arg3 == null || parser.arg4 == null) {
+    //                        System.out.println("Invalid command. Second line or station are null.");
+    //                        continue;
+    //                    }
+    //
+    //                    command = new FastestRouteCommand(parser.arg1, parser.arg2, parser.arg3, parser.arg4, subway);
+    //                    break;
+    //
+    //                default:
+    //                    System.out.println("Invalid command. Command type is not valid.");
+    //                    continue;
+    //            }
+    //
+    //            controller.setCommand(command);
+    //            controller.executeCommand();
+    //        }
+    //    }
+    //}
+  learner_created: true
+- name: src/metro/InputParser.java
+  visible: true
   text: |-
-    {
-      "Linka A": {
-        "1": {
-          "name": "Nemocnice Motol" ,
-          "transfer": []
-        } ,
-        "2": {
-          "name": "Petriny" ,
-          "transfer": []
-        } ,
-        "3": {
-          "name": "Nadrazi Veleslavin" ,
-          "transfer": []
-        } ,
-        "4": {
-          "name": "Borislavka" ,
-          "transfer": []
-        } ,
-        "5": {
-          "name": "Dejvicka" ,
-          "transfer": []
-        } ,
-        "6": {
-          "name": "Hradcanska" ,
-          "transfer": []
-        } ,
-        "7": {
-          "name": "Malostranska" ,
-          "transfer": []
-        } ,
-        "8": {
-          "name": "Staromestska" ,
-          "transfer": []
-        } ,
-        "9": {
-          "name": "Mustek" ,
-          "transfer": [
-            {
-              "line": "Linka B" ,
-              "station": "Mustek"
-            }
-          ]
-        } ,
-        "10": {
-          "name": "Muzeum" ,
-          "transfer": [
-            {
-              "line": "Linka C" ,
-              "station": "Muzeum"
+    package metro.reserv;
+
+    import java.util.regex.Matcher;
+    import java.util.regex.Pattern;
+
+    public class InputParser {
+        static final String singleWord = "[\\w\\.&-]+";
+        static final String quotesSingleWord = String.format("\"%s\"", singleWord);
+        static final String quotesManyWords = String.format("\"[%s\\s]+%s\"", singleWord, singleWord);
+        static final String name = String.format("(%s|%s|%s)", singleWord, quotesSingleWord, quotesManyWords);
+        static Pattern namePattern = Pattern.compile(name);
+        static Pattern quotePattern = Pattern.compile("\"");
+        public String action;
+        public String arg1;
+        public String arg2;
+        public String arg3;
+        public String arg4;
+
+        public InputParser(String first, String second) {
+            parseInput(first, second);
+        }
+
+        public void parseInput(String first, String second) {
+            action = first;
+            Matcher matcher = namePattern.matcher(second);
+            if (matcher.find()) {
+                arg1 = matcher.group();
+                arg1 = quotePattern.matcher(arg1).replaceAll("");
             }
-          ]
-        } ,
-        "11": {
-          "name": "Namesti Miru" ,
-          "transfer": []
-        } ,
-        "12": {
-          "name": "Jiriho z Podebrad" ,
-          "transfer": []
-        } ,
-        "13": {
-          "name": "Flora" ,
-          "transfer": []
-        } ,
-        "14": {
-          "name": "Zelivskeho" ,
-          "transfer": []
-        } ,
-        "15": {
-          "name": "Strasnicka" ,
-          "transfer": []
-        } ,
-        "16": {
-          "name": "Skalka" ,
-          "transfer": []
-        } ,
-        "17": {
-          "name": "Depo Hostivar" ,
-          "transfer": []
-        }
-      } ,
-      "Linka B": {
-        "1": {
-          "name": "Cerny Most" ,
-          "transfer": []
-        } ,
-        "2": {
-          "name": "Rajska zahrada" ,
-          "transfer": []
-        } ,
-        "3": {
-          "name": "Hloubetin" ,
-          "transfer": []
-        } ,
-        "4": {
-          "name": "Kolbenova" ,
-          "transfer": []
-        } ,
-        "5": {
-          "name": "Vysocanska" ,
-          "transfer": []
-        } ,
-        "6": {
-          "name": "Ceskomoravska" ,
-          "transfer": []
-        } ,
-        "7": {
-          "name": "Palmovka" ,
-          "transfer": []
-        } ,
-        "8": {
-          "name": "Invalidovna" ,
-          "transfer": []
-        } ,
-        "9": {
-          "name": "Krizikova" ,
-          "transfer": []
-        } ,
-        "10": {
-          "name": "Florenc" ,
-          "transfer": [
-            {
-              "line": "Linka C" ,
-              "station": "Florenc"
+            if (matcher.find()) {
+                arg2 = matcher.group();
+                arg2 = quotePattern.matcher(arg2).replaceAll("");
+            }
+            if (matcher.find()) {
+                arg3 = matcher.group();
+                arg3 = quotePattern.matcher(arg3).replaceAll("");
             }
-          ]
-        } ,
-        "11": {
-          "name": "Namesti Republiky" ,
-          "transfer": []
-        } ,
-        "12": {
-          "name": "Mustek" ,
-          "transfer": [
-            {
-              "line": "Linka B" ,
-              "station": "Mustek"
+            if (matcher.find()) {
+                arg4 = matcher.group();
+                arg4 = quotePattern.matcher(arg4).replaceAll("");
             }
-          ]
-        } ,
-        "13": {
-          "name": "Narodni trida" ,
-          "transfer": []
-        } ,
-        "14": {
-          "name": "Karlovo namesti" ,
-          "transfer": []
-        } ,
-        "15": {
-          "name": "Andel" ,
-          "transfer": []
-        } ,
-        "16": {
-          "name": "Smichovske nadrazi" ,
-          "transfer": []
-        } ,
-        "17": {
-          "name": "Radlicka" ,
-          "transfer": []
-        } ,
-        "18": {
-          "name": "Jinonice" ,
-          "transfer": []
-        } ,
-        "19": {
-          "name": "Nove Butovice" ,
-          "transfer": []
-        } ,
-        "20": {
-          "name": "Hurka" ,
-          "transfer": []
-        } ,
-        "21": {
-          "name": "Luziny" ,
-          "transfer": []
-        } ,
-        "22": {
-          "name": "Luka" ,
-          "transfer": []
-        } ,
-        "23": {
-          "name": "Stodulky" ,
-          "transfer": []
-        } ,
-        "24": {
-          "name": "Zlicin" ,
-          "transfer": []
         }
-      } ,
-      "Linka C": {
-        "1": {
-          "name": "Letnany" ,
-          "transfer": []
-        } ,
-        "2": {
-          "name": "Prosek" ,
-          "transfer": []
-        } ,
-        "3": {
-          "name": "Strizkov" ,
-          "transfer": []
-        } ,
-        "4": {
-          "name": "Ladvi" ,
-          "transfer": []
-        } ,
-        "5": {
-          "name": "Kobylisy" ,
-          "transfer": []
-        } ,
-        "6": {
-          "name": "Nadrazi Holesovice" ,
-          "transfer": []
-        } ,
-        "7": {
-          "name": "Vltavska" ,
-          "transfer": []
-        } ,
-        "8": {
-          "name": "Florenc" ,
-          "transfer": [
-            {
-              "line": "Linka B" ,
-              "station": "Florenc"
-            }
-          ]
-        } ,
-        "9": {
-          "name": "Hlavni nadrazi" ,
-          "transfer": []
-        } ,
-        "10": {
-          "name": "Muzeum" ,
-          "transfer": [
-            {
-              "line": "Linka A" ,
-              "station": "Muzeum"
-            }
-          ]
-        } ,
-        "11": {
-          "name": "I.P.Pavlova" ,
-          "transfer": []
-        } ,
-        "12": {
-          "name": "Vysehrad" ,
-          "transfer": []
-        } ,
-        "13": {
-          "name": "Prazskeho povstani" ,
-          "transfer": []
-        } ,
-        "14": {
-          "name": "Pankrac" ,
-          "transfer": []
-        } ,
-        "15": {
-          "name": "Budejovicka" ,
-          "transfer": []
-        } ,
-        "16": {
-          "name": "Kacerov" ,
-          "transfer": []
-        } ,
-        "17": {
-          "name": "Roztyly" ,
-          "transfer": []
-        } ,
-        "18": {
-          "name": "Chodov" ,
-          "transfer": []
-        } ,
-        "19": {
-          "name": "Opatov" ,
-          "transfer": []
-        } ,
-        "20": {
-          "name": "Haje" ,
-          "transfer": []
-        }
-      }
-    }
-  learner_created: false
+    }
+  learner_created: true
 feedback_link: https://hyperskill.org/learn/step/10345#comment
-status: Unchecked
+status: Failed
+feedback:
+  message: "Exception in test #1\n\njava.lang.IllegalStateException: Not a JSON Array:\
+    \ {&quot;1&quot;:{&quot;name&quot;:&quot;Renes—Gare&quot;,&quot;transfer&quot;:[],&quot;time&quot;:3},&quot;2&quot;:{&quot;name&quot;:&quot;Epenex&quot;,&quot;transfer&quot;:[],&quot;time&quot;:2},&quot;3&quot;:{&quot;name&quot;:&quot;Crochy&quot;,&quot;transfer&quot;:[],&quot;time&quot;:6},&quot;4&quot;:{&quot;name&quot;:&quot;Cerisaie&quot;,&quot;transfer&quot;:[],&quot;time&quot;:5},&quot;5&quot;:{&quot;name&quot;:&quot;Bassenges&quot;,&quot;transfer&quot;:[],&quot;time&quot;:4},&quot;6&quot;:{&quot;name&quot;:&quot;EPFL&quot;,&quot;transfer&quot;:[],&quot;time&quot;:6},&quot;7&quot;:{&quot;name&quot;:&quot;UNL—\
+    Sorge&quot;,&quot;transfer&quot;:[],&quot;time&quot;:8},&quot;8&quot;:{&quot;name&quot;:&quot;Mouline&quot;,&quot;transfer&quot;:[],&quot;time&quot;:5},&quot;9&quot;:{&quot;name&quot;:&quot;UNL—\
+    Chemberonne&quot;,&quot;transfer&quot;:[],&quot;time&quot;:4},&quot;10&quot;:{&quot;name&quot;:&quot;Bourdonnette&quot;,&quot;transfer&quot;:[],&quot;time&quot;:5},&quot;11&quot;:{&quot;name&quot;:&quot;Melley&quot;,&quot;transfer&quot;:[],&quot;time&quot;:7},&quot;12&quot;:{&quot;name&quot;:&quot;Provence&quot;,&quot;transfer&quot;:[],&quot;time&quot;:6},&quot;13&quot;:{&quot;name&quot;:&quot;Montelly&quot;,&quot;transfer&quot;:[],&quot;time&quot;:5},&quot;14&quot;:{&quot;name&quot;:&quot;Vigie&quot;,&quot;transfer&quot;:[],&quot;time&quot;:4},&quot;15&quot;:{&quot;name&quot;:&quot;Lausanne—\
+    Flon&quot;,&quot;transfer&quot;:[],&quot;time&quot;:null}}\r\n\tat com.google.gson.JsonElement.getAsJsonArray(JsonElement.java:107)\r\
+    \n\tat metro.database.ReadSubwayData.fillMap(ReadSubwayData.java:53)\r\n\tat metro.database.ReadSubwayData.readFromFile(ReadSubwayData.java:30)\r\
+    \n\tat metro.database.Subway.populateMap(Subway.java:16)\r\n\tat metro.Main.main(Main.java:12)\n\
+    \nArguments: ./test/lausanne.json"
+  time: Sun, 27 Mar 2022 08:21:44 UTC
 record: -1
Index: .idea/libraries/Gradle__ch_qos_logback_logback_classic_1_2_6.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__ch_qos_logback_logback_classic_1_2_6.xml b/.idea/libraries/Gradle__ch_qos_logback_logback_classic_1_2_6.xml
new file mode 100644
--- /dev/null	(date 1648630872376)
+++ b/.idea/libraries/Gradle__ch_qos_logback_logback_classic_1_2_6.xml	(date 1648630872376)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: ch.qos.logback:logback-classic:1.2.6">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/ch.qos.logback/logback-classic/1.2.6/b09efa852337fa0dd9859614389eec58dc287116/logback-classic-1.2.6.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/ch.qos.logback/logback-classic/1.2.6/c4aea6a11cb3d22019ea55c9a53ca465afebb344/logback-classic-1.2.6-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__com_fasterxml_jackson_core_jackson_annotations_2_12_5.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__com_fasterxml_jackson_core_jackson_annotations_2_12_5.xml b/.idea/libraries/Gradle__com_fasterxml_jackson_core_jackson_annotations_2_12_5.xml
new file mode 100644
--- /dev/null	(date 1648630872391)
+++ b/.idea/libraries/Gradle__com_fasterxml_jackson_core_jackson_annotations_2_12_5.xml	(date 1648630872391)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: com.fasterxml.jackson.core:jackson-annotations:2.12.5">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-annotations/2.12.5/52d929d5bb21d0186fe24c09624cc3ee4bafc3b3/jackson-annotations-2.12.5.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-annotations/2.12.5/594b99ba0f5e72701599103f446d4a47cd7675b1/jackson-annotations-2.12.5-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../HyperMetro/HyperMetro/lesson-info.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>type: framework\r\ncontent:\r\n- One-line metro\r\n- Several directions\r\n- A real metro\r\n- The shortest route\r\n- The fastest route\r\n- Branching\r\ncurrent_task: 1\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../HyperMetro/HyperMetro/lesson-info.yaml b/../HyperMetro/HyperMetro/lesson-info.yaml
--- a/../HyperMetro/HyperMetro/lesson-info.yaml	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../HyperMetro/HyperMetro/lesson-info.yaml	(date 1648366593024)
@@ -6,4 +6,4 @@
 - The shortest route
 - The fastest route
 - Branching
-current_task: 1
+current_task: 4
Index: .idea/libraries/Gradle__ch_qos_logback_logback_core_1_2_6.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__ch_qos_logback_logback_core_1_2_6.xml b/.idea/libraries/Gradle__ch_qos_logback_logback_core_1_2_6.xml
new file mode 100644
--- /dev/null	(date 1648630872384)
+++ b/.idea/libraries/Gradle__ch_qos_logback_logback_core_1_2_6.xml	(date 1648630872384)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: ch.qos.logback:logback-core:1.2.6">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/ch.qos.logback/logback-core/1.2.6/25be1abb32e870ff042e698a799b56587e0dca9a/logback-core-1.2.6.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/ch.qos.logback/logback-core/1.2.6/2c59d37fdc293ee9329ebb0bb22bc709eafa1f56/logback-core-1.2.6-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../HyperMetro/course-remote-info.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>hyperskill_project:\r\n  id: 120\r\n  ide_files: https://stepik.org/media/attachments/lesson/388955/additional_files.json\r\n  is_template_based: false\r\n  use_ide: true\r\nupdate_date: Thu, 17 Mar 2022 13:55:59 UTC\r\nstages:\r\n- id: 648\r\n  step: 10341\r\n  is_completed: true\r\n- id: 649\r\n  step: 10342\r\n  is_completed: false\r\n- id: 650\r\n  step: 10343\r\n  is_completed: false\r\n- id: 651\r\n  step: 10344\r\n  is_completed: false\r\n- id: 652\r\n  step: 10345\r\n  is_completed: false\r\n- id: 653\r\n  step: 10346\r\n  is_completed: false\r\ntopics:\r\n  0:\r\n  - title: Write, compile, and run\r\n    theory_id: 3739\r\n  - title: JVM, JRE, and JDK\r\n    theory_id: 3499\r\n  - title: Units of information\r\n    theory_id: 6865\r\n  - title: IDE\r\n    theory_id: 10996\r\n  - title: Immutability\r\n    theory_id: 7929\r\n  - title: Introduction to operating systems\r\n    theory_id: 9704\r\n  - title: Computer algorithms\r\n    theory_id: 16547\r\n  - title: The big O notation\r\n    theory_id: 16699\r\n  - title: Data structures\r\n    theory_id: 16927\r\n  - title: Computer programming\r\n    theory_id: 8739\r\n  - title: Introduction to Java\r\n    theory_id: 3500\r\n  - title: Basic literals\r\n    theory_id: 3522\r\n  - title: Overview of the basic program\r\n    theory_id: 3521\r\n  - title: Printing data\r\n    theory_id: 3749\r\n  - title: Types and variables\r\n    theory_id: 3518\r\n  - title: Comments\r\n    theory_id: 3520\r\n  - title: Scanning the input\r\n    theory_id: 9055\r\n  - title: Coding style conventions\r\n    theory_id: 12411\r\n  - title: Naming variables\r\n    theory_id: 3513\r\n  - title: Arithmetic operations\r\n    theory_id: 3519\r\n  - title: Integer types and operations\r\n    theory_id: 3565\r\n  - title: Boolean and logical operations\r\n    theory_id: 3516\r\n  - title: Relational operators\r\n    theory_id: 3512\r\n  - title: Conditional statement\r\n    theory_id: 3503\r\n  - title: Ternary operator\r\n    theory_id: 3506\r\n  - title: Increment and decrement\r\n    theory_id: 5008\r\n  - title: The while and do-while loops\r\n    theory_id: 3498\r\n  - title: The for-loop\r\n    theory_id: 3505\r\n  - title: Branching statements\r\n    theory_id: 3507\r\n  - title: Switch statement\r\n    theory_id: 3504\r\n  - title: Characters\r\n    theory_id: 3514\r\n  - title: Sizes and ranges\r\n    theory_id: 3532\r\n  - title: Type casting\r\n    theory_id: 3510\r\n  - title: Calling a method\r\n    theory_id: 10973\r\n  - title: Declaring a method\r\n    theory_id: 10982\r\n  - title: The main method\r\n    theory_id: 3489\r\n  - title: Functional decomposition\r\n    theory_id: 10570\r\n  - title: String\r\n    theory_id: 3523\r\n  - title: Primitive and reference types\r\n    theory_id: 5035\r\n  - title: Array\r\n    theory_id: 3511\r\n  - title: Arrays as parameters\r\n    theory_id: 3594\r\n  - title: Overloading\r\n    theory_id: 3525\r\n  - title: Iterating over arrays\r\n    theory_id: 3602\r\n  - title: Errors in programs\r\n    theory_id: 3536\r\n  - title: What is an exception\r\n    theory_id: 3497\r\n  - title: NPE\r\n    theory_id: 1945\r\n  - title: Introduction to OOP\r\n    theory_id: 3614\r\n  - title: Package\r\n    theory_id: 3621\r\n  - title: Hierarchy of exceptions\r\n    theory_id: 3570\r\n  - title: Exception handling\r\n    theory_id: 3552\r\n  - title: Throwing exceptions\r\n    theory_id: 3553\r\n  - title: Command line overview\r\n    theory_id: 8977\r\n  - title: Parameters and options\r\n    theory_id: 9746\r\n  - title: Files\r\n    theory_id: 3635\r\n  - title: Reading files\r\n    theory_id: 3636\r\n  - title: Command-line arguments\r\n    theory_id: 3566\r\n  - title: Pseudocode\r\n    theory_id: 15090\r\n  - title: Fixed-size array\r\n    theory_id: 7255\r\n  - title: Dynamic array\r\n    theory_id: 5357\r\n  - title: Processing strings\r\n    theory_id: 3551\r\n  - title: Array exceptions\r\n    theory_id: 1940\r\n  - title: IntelliJ IDEA\r\n    theory_id: 3801\r\n  - title: IntelliJ Run Configurations\r\n    theory_id: 10630\r\n  - title: Singly linked list\r\n    theory_id: 5336\r\n  - title: Doubly linked list\r\n    theory_id: 5335\r\n  - title: Introduction to generic programming\r\n    theory_id: 3492\r\n  - title: Generics and Object\r\n    theory_id: 3493\r\n  - title: Running programs on your computer\r\n    theory_id: 3746\r\n  - title: What are collections\r\n    theory_id: 3770\r\n  - title: The Collections Framework overview\r\n    theory_id: 3624\r\n  - title: ArrayList\r\n    theory_id: 3567\r\n  - title: The List interface\r\n    theory_id: 3581\r\n  - title: Defining classes\r\n    theory_id: 3618\r\n  - title: Instance methods\r\n    theory_id: 3495\r\n  - title: Constructor\r\n    theory_id: 3535\r\n  - title: Access modifiers\r\n    theory_id: 3589\r\n  - title: Getters and setters\r\n    theory_id: 3599\r\n  - title: Inheritance\r\n    theory_id: 3583\r\n  - title: Protected modifier\r\n    theory_id: 6692\r\n  - title: Referencing subclass objects\r\n    theory_id: 3585\r\n  - title: The Object class\r\n    theory_id: 3596\r\n  - title: Objects\r\n    theory_id: 4727\r\n  - title: Interface\r\n    theory_id: 3615\r\n  - title: Multiple constructors\r\n    theory_id: 3538\r\n  - title: The keyword super\r\n    theory_id: 3588\r\n  - title: Boxing and unboxing\r\n    theory_id: 3595\r\n  - title: Comparable\r\n    theory_id: 14456\r\n  1:\r\n  - title: Binary numbers\r\n    theory_id: 5544\r\n  - title: Binary arithmetic\r\n    theory_id: 5630\r\n  - title: Formatted output\r\n    theory_id: 7046\r\n  - title: Writing files\r\n    theory_id: 3652\r\n  - title: What are streams\r\n    theory_id: 5533\r\n  - title: Input streams\r\n    theory_id: 9723\r\n  - title: Output streams\r\n    theory_id: 8837\r\n  - title: Serialization basics\r\n    theory_id: 8147\r\n  - title: Regexps basics\r\n    theory_id: 7580\r\n  - title: Regexps in Java\r\n    theory_id: 3670\r\n  - title: Sets, ranges, alternations\r\n    theory_id: 3674\r\n  - title: Quantifiers\r\n    theory_id: 3687\r\n  - title: Shorthands\r\n    theory_id: 3680\r\n  - title: Regexes in programs\r\n    theory_id: 3696\r\n  - title: Patterns and Matcher\r\n    theory_id: 3712\r\n  - title: Match results\r\n    theory_id: 3716\r\n  - title: Reflection basics\r\n    theory_id: 3609\r\n  - title: Retrieving Class instances\r\n    theory_id: 3554\r\n  - title: Dealing with modifiers\r\n    theory_id: 8104\r\n  - title: Manipulating fields and methods\r\n    theory_id: 8108\r\n  2:\r\n  - title: Generic methods\r\n    theory_id: 3606\r\n  3:\r\n  - title: Queue\r\n    theory_id: 5350\r\n  - title: Recursion basics\r\n    theory_id: 5984\r\n  - title: Decrease and conquer\r\n    theory_id: 14669\r\n  - title: Graph\r\n    theory_id: 15967\r\n  - title: Nodes, cycles and paths\r\n    theory_id: 15968\r\n  - title: Representation of graphs\r\n    theory_id: 15969\r\n  - title: Breadth-first search\r\n    theory_id: 7068\r\n  - title: Tree\r\n    theory_id: 5121\r\n  4:\r\n  - title: Priority queue\r\n    theory_id: 7384\r\n  - title: Weighted graph\r\n    theory_id: 5645\r\n  - title: Shortest path problem\r\n    theory_id: 15223\r\n  - title: Dijkstra's algorithm\r\n    theory_id: 5772\r\n  5:\r\n  - title: Connectivity in graphs\r\n    theory_id: 7956\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../HyperMetro/course-remote-info.yaml b/../HyperMetro/course-remote-info.yaml
--- a/../HyperMetro/course-remote-info.yaml	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../HyperMetro/course-remote-info.yaml	(date 1648366589804)
@@ -3,20 +3,20 @@
   ide_files: https://stepik.org/media/attachments/lesson/388955/additional_files.json
   is_template_based: false
   use_ide: true
-update_date: Thu, 17 Mar 2022 13:55:59 UTC
+update_date: Sun, 27 Mar 2022 06:21:45 UTC
 stages:
 - id: 648
   step: 10341
   is_completed: true
 - id: 649
   step: 10342
-  is_completed: false
+  is_completed: true
 - id: 650
   step: 10343
-  is_completed: false
+  is_completed: true
 - id: 651
   step: 10344
-  is_completed: false
+  is_completed: true
 - id: 652
   step: 10345
   is_completed: false
Index: .idea/modules/Web Quiz Engine/task/Web_Quiz_Engine.Web_Quiz_Engine-task.test.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules/Web Quiz Engine/task/Web_Quiz_Engine.Web_Quiz_Engine-task.test.iml b/.idea/modules/Web Quiz Engine/task/Web_Quiz_Engine.Web_Quiz_Engine-task.test.iml
new file mode 100644
--- /dev/null	(date 1649333971282)
+++ b/.idea/modules/Web Quiz Engine/task/Web_Quiz_Engine.Web_Quiz_Engine-task.test.iml	(date 1649333971282)
@@ -0,0 +1,128 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module external.linked.project.id=":Web_Quiz_Engine-task:test" external.linked.project.path="$MODULE_DIR$/../../../../Web Quiz Engine/task" external.root.project.path="$MODULE_DIR$/../../../.." external.system.id="GRADLE" external.system.module.group="Web Quiz Engine" external.system.module.type="sourceSet" external.system.module.version="unspecified" type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager">
+    <output-test url="file://$MODULE_DIR$/../../../../Web Quiz Engine/task/out/test/classes" />
+    <exclude-output />
+    <content url="file://$MODULE_DIR$/../../../../Web Quiz Engine/task/src/test" />
+    <content url="file://$MODULE_DIR$/../../../../Web Quiz Engine/task/test">
+      <sourceFolder url="file://$MODULE_DIR$/../../../../Web Quiz Engine/task/test" isTestSource="true" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="module" module-name="Web_Quiz_Engine.Web_Quiz_Engine-task.main" />
+    <orderEntry type="module" module-name="Web_Quiz_Engine.util.main" />
+    <orderEntry type="module" module-name="Web_Quiz_Engine.util.test" production-on-test="" />
+    <orderEntry type="library" name="Gradle: org.springframework.boot:spring-boot-starter-actuator:2.5.6" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework.boot:spring-boot-starter-web:2.5.6" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework.boot:spring-boot-starter-validation:2.5.6" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework.boot:spring-boot-starter-security:2.5.6" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework.boot:spring-boot-starter-test:2.5.6" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework.boot:spring-boot-starter-data-jpa:2.5.6" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework.boot:spring-boot-starter:2.5.6" level="project" />
+    <orderEntry type="library" name="Gradle: com.github.hyperskill:hs-test:release-SNAPSHOT" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework.boot:spring-boot-actuator-autoconfigure:2.5.6" level="project" />
+    <orderEntry type="library" name="Gradle: io.micrometer:micrometer-core:1.7.5" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework.boot:spring-boot-starter-json:2.5.6" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework.boot:spring-boot-starter-tomcat:2.5.6" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework:spring-webmvc:5.3.12" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework:spring-web:5.3.12" level="project" />
+    <orderEntry type="library" name="Gradle: org.apache.tomcat.embed:tomcat-embed-el:9.0.54" level="project" />
+    <orderEntry type="library" name="Gradle: org.hibernate.validator:hibernate-validator:6.2.0.Final" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework.security:spring-security-web:5.5.3" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework.security:spring-security-config:5.5.3" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework:spring-aop:5.3.12" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework.boot:spring-boot-test-autoconfigure:2.5.6" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework.boot:spring-boot-test:2.5.6" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework:spring-test:5.3.12" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework:spring-core:5.3.12" level="project" />
+    <orderEntry type="library" name="Gradle: com.jayway.jsonpath:json-path:2.5.0" level="project" />
+    <orderEntry type="library" name="Gradle: jakarta.xml.bind:jakarta.xml.bind-api:2.3.3" level="project" />
+    <orderEntry type="library" name="Gradle: org.assertj:assertj-core:3.19.0" level="project" />
+    <orderEntry type="library" name="Gradle: org.hamcrest:hamcrest:2.2" level="project" />
+    <orderEntry type="library" name="Gradle: org.junit.jupiter:junit-jupiter:5.7.2" level="project" />
+    <orderEntry type="library" name="Gradle: org.mockito:mockito-junit-jupiter:3.9.0" level="project" />
+    <orderEntry type="library" name="Gradle: org.mockito:mockito-core:3.9.0" level="project" />
+    <orderEntry type="library" name="Gradle: org.skyscreamer:jsonassert:1.5.0" level="project" />
+    <orderEntry type="library" name="Gradle: org.xmlunit:xmlunit-core:2.8.3" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework.boot:spring-boot-starter-aop:2.5.6" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework.boot:spring-boot-starter-jdbc:2.5.6" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework.data:spring-data-jpa:2.5.6" level="project" />
+    <orderEntry type="library" name="Gradle: jakarta.transaction:jakarta.transaction-api:1.3.3" level="project" />
+    <orderEntry type="library" name="Gradle: jakarta.persistence:jakarta.persistence-api:2.2.3" level="project" />
+    <orderEntry type="library" name="Gradle: org.hibernate:hibernate-core:5.4.32.Final" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework:spring-aspects:5.3.12" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework.boot:spring-boot-autoconfigure:2.5.6" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework.boot:spring-boot:2.5.6" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework.boot:spring-boot-starter-logging:2.5.6" level="project" />
+    <orderEntry type="library" name="Gradle: jakarta.annotation:jakarta.annotation-api:1.3.5" level="project" />
+    <orderEntry type="library" name="Gradle: org.yaml:snakeyaml:1.28" level="project" />
+    <orderEntry type="library" name="Gradle: org.assertj:assertj-swing-junit:3.9.2" level="project" />
+    <orderEntry type="library" name="Gradle: junit:junit:4.13.2" level="project" />
+    <orderEntry type="library" name="Gradle: org.apache.httpcomponents:httpclient:4.5.13" level="project" />
+    <orderEntry type="library" name="Gradle: com.google.code.gson:gson:2.8.8" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework.boot:spring-boot-actuator:2.5.6" level="project" />
+    <orderEntry type="library" name="Gradle: org.hdrhistogram:HdrHistogram:2.1.12" level="project" />
+    <orderEntry type="library" name="Gradle: com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.12.5" level="project" />
+    <orderEntry type="library" name="Gradle: com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.12.5" level="project" />
+    <orderEntry type="library" name="Gradle: com.fasterxml.jackson.module:jackson-module-parameter-names:2.12.5" level="project" />
+    <orderEntry type="library" name="Gradle: com.fasterxml.jackson.core:jackson-databind:2.12.5" level="project" />
+    <orderEntry type="library" name="Gradle: org.apache.tomcat.embed:tomcat-embed-websocket:9.0.54" level="project" />
+    <orderEntry type="library" name="Gradle: org.apache.tomcat.embed:tomcat-embed-core:9.0.54" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework:spring-context:5.3.12" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework:spring-beans:5.3.12" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework:spring-expression:5.3.12" level="project" />
+    <orderEntry type="library" name="Gradle: jakarta.validation:jakarta.validation-api:2.0.2" level="project" />
+    <orderEntry type="library" name="Gradle: org.jboss.logging:jboss-logging:3.4.2.Final" level="project" />
+    <orderEntry type="library" name="Gradle: com.fasterxml:classmate:1.5.1" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework.security:spring-security-core:5.5.3" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework:spring-jcl:5.3.12" level="project" />
+    <orderEntry type="library" name="Gradle: org.slf4j:slf4j-api:1.7.32" level="project" />
+    <orderEntry type="library" name="Gradle: net.minidev:json-smart:2.4.7" level="project" />
+    <orderEntry type="library" name="Gradle: jakarta.activation:jakarta.activation-api:1.2.2" level="project" />
+    <orderEntry type="library" name="Gradle: org.junit.jupiter:junit-jupiter-params:5.7.2" level="project" />
+    <orderEntry type="library" name="Gradle: org.junit.jupiter:junit-jupiter-api:5.7.2" level="project" />
+    <orderEntry type="library" name="Gradle: net.bytebuddy:byte-buddy:1.10.22" level="project" />
+    <orderEntry type="library" name="Gradle: net.bytebuddy:byte-buddy-agent:1.10.22" level="project" />
+    <orderEntry type="library" name="Gradle: org.objenesis:objenesis:3.2" level="project" />
+    <orderEntry type="library" name="Gradle: com.vaadin.external.google:android-json:0.0.20131108.vaadin1" level="project" />
+    <orderEntry type="library" name="Gradle: org.aspectj:aspectjweaver:1.9.7" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework:spring-jdbc:5.3.12" level="project" />
+    <orderEntry type="library" name="Gradle: com.zaxxer:HikariCP:4.0.3" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework:spring-orm:5.3.12" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework.data:spring-data-commons:2.5.6" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework:spring-tx:5.3.12" level="project" />
+    <orderEntry type="library" name="Gradle: org.glassfish.jaxb:jaxb-runtime:2.3.5" level="project" />
+    <orderEntry type="library" name="Gradle: org.hibernate.common:hibernate-commons-annotations:5.1.2.Final" level="project" />
+    <orderEntry type="library" name="Gradle: org.javassist:javassist:3.27.0-GA" level="project" />
+    <orderEntry type="library" name="Gradle: antlr:antlr:2.7.7" level="project" />
+    <orderEntry type="library" name="Gradle: org.jboss:jandex:2.2.3.Final" level="project" />
+    <orderEntry type="library" name="Gradle: org.dom4j:dom4j:2.1.3" level="project" />
+    <orderEntry type="library" name="Gradle: ch.qos.logback:logback-classic:1.2.6" level="project" />
+    <orderEntry type="library" name="Gradle: org.apache.logging.log4j:log4j-to-slf4j:2.14.1" level="project" />
+    <orderEntry type="library" name="Gradle: org.slf4j:jul-to-slf4j:1.7.32" level="project" />
+    <orderEntry type="library" name="Gradle: org.assertj:assertj-swing:3.9.2" level="project" />
+    <orderEntry type="library" name="Gradle: org.easytesting:fest-reflect:1.4.1" level="project" />
+    <orderEntry type="library" name="Gradle: org.hamcrest:hamcrest-core:2.2" level="project" />
+    <orderEntry type="library" name="Gradle: org.apache.httpcomponents:httpcore:4.4.14" level="project" />
+    <orderEntry type="library" name="Gradle: commons-codec:commons-codec:1.15" level="project" />
+    <orderEntry type="library" name="Gradle: com.fasterxml.jackson.core:jackson-core:2.12.5" level="project" />
+    <orderEntry type="library" name="Gradle: com.fasterxml.jackson.core:jackson-annotations:2.12.5" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework.security:spring-security-crypto:5.5.3" level="project" />
+    <orderEntry type="library" name="Gradle: net.minidev:accessors-smart:2.4.7" level="project" />
+    <orderEntry type="library" name="Gradle: org.apiguardian:apiguardian-api:1.1.0" level="project" />
+    <orderEntry type="library" name="Gradle: org.junit.platform:junit-platform-commons:1.7.2" level="project" />
+    <orderEntry type="library" name="Gradle: org.opentest4j:opentest4j:1.2.0" level="project" />
+    <orderEntry type="library" name="Gradle: org.glassfish.jaxb:txw2:2.3.5" level="project" />
+    <orderEntry type="library" name="Gradle: com.sun.istack:istack-commons-runtime:3.0.12" level="project" />
+    <orderEntry type="library" name="Gradle: ch.qos.logback:logback-core:1.2.6" level="project" />
+    <orderEntry type="library" name="Gradle: org.apache.logging.log4j:log4j-api:2.14.1" level="project" />
+    <orderEntry type="library" name="Gradle: org.ow2.asm:asm:9.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Gradle: com.h2database:h2:1.4.200" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Gradle: org.latencyutils:LatencyUtils:2.0.3" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Gradle: org.junit.jupiter:junit-jupiter-engine:5.7.2" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Gradle: org.junit.platform:junit-platform-engine:1.7.2" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Gradle: com.sun.activation:jakarta.activation:1.2.2" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Gradle: org.easytesting:fest-util:1.2.5" level="project" />
+  </component>
+  <component name="TestModuleProperties" production-module="Web_Quiz_Engine.Web_Quiz_Engine-task.main" />
+</module>
\ No newline at end of file
Index: ../HyperMetro/HyperMetro/Several directions/task-info.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>type: edu\r\nfiles:\r\n- name: src/metro/Main.java\r\n  visible: true\r\n  text: |\r\n    package metro;\r\n\r\n    public class Main {\r\n        public static void main(String[] args) {\r\n            System.out.println(\"Hello, world!\");\r\n        }\r\n    }\r\n  learner_created: false\r\n- name: test/Tests.java\r\n  visible: false\r\n  text: |-\r\n    import org.hyperskill.hstest.dynamic.DynamicTest;\r\n    import org.hyperskill.hstest.exception.outcomes.WrongAnswer;\r\n    import org.hyperskill.hstest.stage.StageTest;\r\n    import org.hyperskill.hstest.testcase.CheckResult;\r\n    import org.hyperskill.hstest.testing.TestedProgram;\r\n\r\n    public class Tests extends StageTest<String> {\r\n        // test from the previous stage with one line\r\n        @DynamicTest(order = 1)\r\n        CheckResult test1() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start(\"./test/baltimore.json\");\r\n\r\n            String output = main.execute(\"/output \\\"SubwayLink\\\"\").trim();\r\n            checkDepots(output);\r\n            checkOutputLength(output, 14);\r\n\r\n            assertStations(output, new String[]{\"Owings Mills\", \"Old Court\", \"Milford Mill\", \"Reiserstown Plaza\",\r\n                \"Rogers Avenue\", \"West Cold Spring\", \"Mondawmin\", \"Penn North\", \"Uptown\", \"State Center\",\r\n                \"Lexington Market\", \"Charles Center\", \"Shot Tower/Market Place\", \"Johns Hopkins Hospital\"});\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        // test of example\r\n        @DynamicTest(order = 2)\r\n        CheckResult test2() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start(\"./test/lausanne.json\");\r\n\r\n            String output = main.execute(\"/output \\\"m1\\\"\").trim();\r\n            checkDepots(output);\r\n\r\n            checkOutputLength(output, 15);\r\n\r\n            assertStations(output, new String[]{\"Renes—Gare\", \"Epenex\", \"Crochy\", \"Cerisaie\",\r\n                \"Bassenges\", \"EPFL\", \"UNL—Sorge\", \"Mouline\", \"UNL—Chemberonne\", \"Bourdonnette\", \"Melley\",\r\n                \"Provence\", \"Montelly\", \"Vigie\", \"Lausanne—Flon\"});\r\n\r\n            output = main.execute(\"/output \\\"m2\\\"\");\r\n            checkDepots(output);\r\n            checkOutputLength(output, 14);\r\n\r\n            assertStations(output, new String[]{\"Croisettes\", \"Vennes\", \"Fourmi\", \"Sallaz\", \"CHUV\", \"Ours\",\r\n                \"Riponne M.Bejart\", \"Bessieres\", \"Lausanne—Flon\", \"Lausanne Gare CFF\", \"Grancy\", \"Delices\", \"Jourdils\",\r\n                \"Ouchy—Olympique\"});\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        // example test pt.2 (with addition)\r\n        @DynamicTest(order = 3)\r\n        CheckResult test2_1() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start(\"./test/lausanne.json\");\r\n\r\n            // added a station to the end of the line\r\n            main.execute(\"/append \\\"m1\\\" \\\"Test station 1\\\"\");\r\n            String output = main.execute(\"/output \\\"m1\\\"\");\r\n\r\n            checkDepots(output);\r\n            checkOutputLength(output, 16);\r\n            assertStations(output, new String[]{\"Renes—Gare\", \"Epenex\", \"Crochy\", \"Cerisaie\",\r\n                \"Bassenges\", \"EPFL\", \"UNL—Sorge\", \"Mouline\", \"UNL—Chemberonne\", \"Bourdonnette\", \"Melley\",\r\n                \"Provence\", \"Montelly\", \"Vigie\", \"Lausanne—Flon\", \"Test station 1\"});\r\n\r\n            // added another one\r\n            main.execute(\"/append \\\"m1\\\" \\\"Test station 2\\\"\");\r\n            output = main.execute(\"/output \\\"m1\\\"\");\r\n\r\n            checkDepots(output);\r\n            checkOutputLength(output, 17);\r\n            assertStations(output, new String[]{\"Renes—Gare\", \"Epenex\", \"Crochy\", \"Cerisaie\",\r\n                \"Bassenges\", \"EPFL\", \"UNL—Sorge\", \"Mouline\", \"UNL—Chemberonne\", \"Bourdonnette\", \"Melley\",\r\n                \"Provence\", \"Montelly\", \"Vigie\", \"Lausanne—Flon\", \"Test station 1\", \"Test station 2\"});\r\n\r\n            // added one station to the beginning of the line\r\n            main.execute(\"/add-head \\\"m1\\\" \\\"Head\\\"\");\r\n            output = main.execute(\"/output \\\"m1\\\"\");\r\n\r\n            checkDepots(output);\r\n            checkOutputLength(output, 18);\r\n            assertStations(output, new String[]{\"Head\", \"Renes—Gare\", \"Epenex\", \"Crochy\", \"Cerisaie\",\r\n                \"Bassenges\", \"EPFL\", \"UNL—Sorge\", \"Mouline\", \"UNL—Chemberonne\", \"Bourdonnette\", \"Melley\",\r\n                \"Provence\", \"Montelly\", \"Vigie\", \"Lausanne—Flon\", \"Test station 1\", \"Test station 2\"});\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        // not existing file check\r\n        @DynamicTest(order = 4)\r\n        CheckResult test4() {\r\n            TestedProgram main = new TestedProgram();\r\n            String output = main.start(\"tHiS_fIlE_DoEs_nOt_ExIsT.txt\").toLowerCase();\r\n\r\n            if (output.trim().length() == 0) {\r\n                return CheckResult.wrong(\"The program did not print anything when the file that doesn't exist was passed.\");\r\n            }\r\n            if (output.startsWith(\"depot\") || output.endsWith(\"depot\") || !output.contains(\"error\")) {\r\n                return CheckResult.wrong(\"It looks like the program did not print an error message when the file that doesn't exist was passed.\\n\" +\r\n                    \"Your output should contain 'error'.\");\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        // additional test case\r\n        @DynamicTest(order = 5)\r\n        CheckResult test5() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start(\"./test/samara.json\");\r\n\r\n            main.execute(\"/append \\\"line 1\\\" \\\"Krylya Sovetov\\\"\");\r\n            String output = main.execute(\"/output \\\"line 1\\\"\");\r\n\r\n            checkDepots(output);\r\n\r\n            checkOutputLength(output, 11);\r\n\r\n            assertStations(output, new String[]{\"Alabinskaya\", \"Rossiyskaya\", \"Moskovskaya\",\r\n                \"Gagarinskaya\", \"Sportivnaya\", \"Sovetskaya\", \"Pobeda\", \"Bezymyanka\", \"Kirovskaya\", \"Yungorodok\",\r\n                \"Krylya Sovetov\"});\r\n\r\n            main.execute(\"/add-head \\\"line 1\\\" Samarskaya\");\r\n            output = main.execute(\"/output \\\"line 1\\\"\");\r\n\r\n            checkDepots(output);\r\n            checkOutputLength(output, 12);\r\n\r\n            assertStations(output, new String[]{\"Samarskaya\", \"Alabinskaya\", \"Rossiyskaya\", \"Moskovskaya\",\r\n                \"Gagarinskaya\", \"Sportivnaya\", \"Sovetskaya\", \"Pobeda\", \"Bezymyanka\", \"Kirovskaya\", \"Yungorodok\",\r\n                \"Krylya Sovetov\"});\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        // checks for \"depot\" at the start and at the end\r\n        void checkDepots(String output) {\r\n            output = output.trim().toLowerCase();\r\n            if (!output.startsWith(\"depot\")) {\r\n                throw new WrongAnswer(\"Your output should start with 'depot'.\");\r\n            } else if (!output.endsWith(\"depot\")) {\r\n                throw new WrongAnswer(\"Your output should end with 'depot'.\");\r\n            }\r\n        }\r\n\r\n        // checks number of stations in output\r\n        void checkOutputLength(String output, int correctLength) {\r\n            int length = output.trim().split(\"\\n\").length;\r\n            if (length != correctLength) {\r\n                throw new WrongAnswer(\"You output contains wrong number of lines.\\n\" +\r\n                    \"Expected: \" + correctLength + \" lines\\n\" +\r\n                    \"Your output: \" + length + \" lines\");\r\n            }\r\n        }\r\n\r\n        // checks stations\r\n        void assertStations(String output, String[] stations) {\r\n\r\n            String[] sOutput = output.trim().split(\"\\n\");\r\n\r\n            for (int i = 0; i < stations.length; i++) {\r\n\r\n                String currentLine = sOutput[i].trim();\r\n                if (currentLine.split(\"-\").length != 3) {\r\n                    throw new WrongAnswer(\"There is should be 3 stations in one line.\\n\" +\r\n                        \"Treat 'depot' as a station name\");\r\n                }\r\n\r\n                // Checking the first line\r\n                if (i == 0) {\r\n                    for (int j = 0; j < 2; j++) {\r\n                        if (!currentLine.contains(stations[i + j])) {\r\n                            throw new WrongAnswer(\"Can't find station '\" + stations[i + j] + \"' in the line number \" + (i + 1));\r\n                        }\r\n                    }\r\n                    // Checking the last line\r\n                } else if (i == stations.length - 1) {\r\n                    for (int j = 0; j < 2; j++) {\r\n                        if (!currentLine.contains(stations[i + j - 1])) {\r\n                            throw new WrongAnswer(\"Can't find station '\" + stations[i + j - 1] + \"' in the line number \" + (i + 1));\r\n                        }\r\n                    }\r\n                    // Checking the rest lines\r\n                } else {\r\n                    for (int j = 0; j < 3; j++) {\r\n                        if (!currentLine.contains(stations[i + j - 1])) {\r\n                            throw new WrongAnswer(\"Can't find station '\" + stations[i + j - 1] + \"' in the line number \" + (i + 1));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n  learner_created: false\r\n- name: src/metro/util/ParserCommandLine.java\r\n  visible: true\r\n  text: |\r\n    package metro.util;\r\n\r\n    public class ParserCommandLine {\r\n        private static String path;\r\n\r\n        public static String getPath() {\r\n            return path;\r\n        }\r\n\r\n        public static void parse(String[] args) {\r\n            path = args[0].isEmpty() ? \"ERROR\" : args[0];\r\n        }\r\n    }\r\n  learner_created: true\r\n- name: src/metro/util/FileWithStationsNames.java\r\n  visible: true\r\n  text: |\r\n    package metro.util;\r\n\r\n    import java.io.File;\r\n\r\n    public class FileWithStationsNames {\r\n        private static File file = new File(ParserCommandLine.getPath());\r\n\r\n        public static File getFile() {\r\n            return file;\r\n        }\r\n    }\r\n  learner_created: true\r\n- name: src/metro/util/PrintResult.java\r\n  visible: true\r\n  text: |\r\n    package metro.util;\r\n\r\n    import java.util.LinkedList;\r\n\r\n    public class PrintResult {\r\n        public static void print(LinkedList<String> stations) {\r\n            stations.addFirst(\"depot\");\r\n            stations.addLast(\"depot\");\r\n            while (stations.size() > 2) {\r\n                System.out.print(stations.removeFirst());\r\n                stations.stream().limit(2).forEach(e -> System.out.print(\" - \" + e));\r\n                System.out.println();\r\n            }\r\n        }\r\n    }\r\n  learner_created: true\r\n- name: src/metro/Application.java\r\n  visible: true\r\n  text: |\r\n    package metro;\r\n\r\n    import metro.util.FileWithStationsNames;\r\n    import metro.util.ParserCommandLine;\r\n    import metro.util.PrintResult;\r\n\r\n    import java.io.FileNotFoundException;\r\n    import java.util.LinkedList;\r\n    import java.util.List;\r\n    import java.util.Scanner;\r\n\r\n    public class Application {\r\n\r\n        private static LinkedList<String> stations = new LinkedList<>();\r\n\r\n        public static void run(String[] args) {\r\n            ParserCommandLine.parse(args);\r\n            try (Scanner scanner = new Scanner(FileWithStationsNames.getFile())) {\r\n                while (scanner.hasNextLine()) {\r\n                    stations.add(scanner.nextLine());\r\n                }\r\n            } catch (FileNotFoundException e) {\r\n                System.out.println(\"Error! Such a file doesn't exist!\");\r\n            }\r\n            PrintResult.print(stations);\r\n\r\n    //        List<String> tmp = List.of(\"Bishops road\",\r\n    //                \"Edgver road\",\r\n    //                \"Baker street\",\r\n    //                \"Portland road\",\r\n    //                \"Gower street\",\r\n    //                \"Kings cross\",\r\n    //                \"Farringdon street\");\r\n    //        LinkedList<String> tmpLL = new LinkedList<>(tmp);\r\n    //        PrintResult.print(tmpLL);\r\n        }\r\n    }\r\n  learner_created: true\r\n- name: test/lausanne.json\r\n  visible: false\r\n  text: |-\r\n    {\r\n      \"m1\": {\r\n        \"1\": \"Renes—Gare\",\r\n        \"2\": \"Epenex\",\r\n        \"3\": \"Crochy\",\r\n        \"4\": \"Cerisaie\",\r\n        \"5\": \"Bassenges\",\r\n        \"6\": \"EPFL\",\r\n        \"7\": \"UNL—Sorge\",\r\n        \"8\": \"Mouline\",\r\n        \"9\": \"UNL—Chemberonne\",\r\n        \"10\": \"Bourdonnette\",\r\n        \"11\": \"Melley\",\r\n        \"12\": \"Provence\",\r\n        \"13\": \"Montelly\",\r\n        \"14\": \"Vigie\",\r\n        \"15\": \"Lausanne—Flon\"\r\n      },\r\n      \"m2\": {\r\n        \"1\": \"Croisettes\",\r\n        \"2\": \"Vennes\",\r\n        \"3\": \"Fourmi\",\r\n        \"4\": \"Sallaz\",\r\n        \"5\": \"CHUV\",\r\n        \"6\": \"Ours\",\r\n        \"7\": \"Riponne M.Bejart\",\r\n        \"8\": \"Bessieres\",\r\n        \"9\": \"Lausanne—Flon\",\r\n        \"10\": \"Lausanne Gare CFF\",\r\n        \"11\": \"Grancy\",\r\n        \"12\": \"Delices\",\r\n        \"13\": \"Jourdils\",\r\n        \"14\": \"Ouchy—Olympique\"\r\n      }\r\n    }\r\n  learner_created: false\r\n- name: test/samara.json\r\n  visible: false\r\n  text: |-\r\n    {\r\n      \"line 1\": {\r\n        \"1\": \"Alabinskaya\",\r\n        \"2\": \"Rossiyskaya\",\r\n        \"3\": \"Moskovskaya\",\r\n        \"4\": \"Gagarinskaya\",\r\n        \"5\": \"Sportivnaya\",\r\n        \"6\": \"Sovetskaya\",\r\n        \"7\": \"Pobeda\",\r\n        \"8\": \"Bezymyanka\",\r\n        \"9\": \"Kirovskaya\",\r\n        \"10\": \"Yungorodok\"\r\n      }\r\n    }\r\n  learner_created: false\r\n- name: test/baltimore.json\r\n  visible: false\r\n  text: |-\r\n    {\r\n      \"SubwayLink\": {\r\n        \"1\": \"Owings Mills\",\r\n        \"2\": \"Old Court\",\r\n        \"3\": \"Milford Mill\",\r\n        \"4\": \"Reiserstown Plaza\",\r\n        \"5\": \"Rogers Avenue\",\r\n        \"6\": \"West Cold Spring\",\r\n        \"7\": \"Mondawmin\",\r\n        \"8\": \"Penn North\",\r\n        \"9\": \"Uptown\",\r\n        \"10\": \"State Center\",\r\n        \"11\": \"Lexington Market\",\r\n        \"12\": \"Charles Center\",\r\n        \"13\": \"Shot Tower/Market Place\",\r\n        \"14\": \"Johns Hopkins Hospital\"\r\n      }\r\n    }\r\n  learner_created: false\r\n- name: src/metro/Station.java\r\n  visible: true\r\n  learner_created: true\r\n- name: src/metro/Metro.java\r\n  visible: true\r\n  learner_created: true\r\n- name: src/metro/util/GsonParser.java\r\n  visible: true\r\n  learner_created: true\r\n- name: src/metro/util/commands/CommandAppend.java\r\n  visible: true\r\n  learner_created: true\r\n- name: src/metro/util/commands/CommandRemove.java\r\n  visible: true\r\n  learner_created: true\r\n- name: src/metro/util/commands/CommandAddHead.java\r\n  visible: true\r\n  learner_created: true\r\n- name: src/metro/util/commands/Command.java\r\n  visible: true\r\n  learner_created: true\r\n- name: src/metro/util/commands/CommandOutput.java\r\n  visible: true\r\n  learner_created: true\r\n- name: src/metro/util/ParserInputCommand.java\r\n  visible: true\r\n  learner_created: true\r\nfeedback_link: https://hyperskill.org/learn/step/10342#comment\r\nstatus: Failed\r\nfeedback:\r\n  message: |-\r\n    Error in test #1\r\n\r\n    The program Main has unexpectedly terminated.\r\n    It finished execution too early, should continue running.\r\n\r\n    Please find below the output of your program during this failed test.\r\n\r\n    ---\r\n\r\n    Arguments: ./test/baltimore.json\r\n\r\n    depot - { -   &quot;SubwayLink&quot;: {\r\n    { -   &quot;SubwayLink&quot;: { -     &quot;1&quot;: &quot;Owings Mills&quot;,\r\n      &quot;SubwayLink&quot;: { -     &quot;1&quot;: &quot;Owings Mills&quot;, -     &quot;2&quot;: &quot;Old Court&quot;,\r\n        &quot;1&quot;: &quot;Owings Mills&quot;, -     &quot;2&quot;: &quot;Old Court&quot;, -     &quot;3&quot;: &quot;Milford Mill&quot;,\r\n        &quot;2&quot;: &quot;Old Court&quot;, -     &quot;3&quot;: &quot;Milford Mill&quot;, -     &quot;4&quot;: &quot;Reiserstown Plaza&quot;,\r\n        &quot;3&quot;: &quot;Milford Mill&quot;, -     &quot;4&quot;: &quot;Reiserstown Plaza&quot;, -     &quot;5&quot;: &quot;Rogers Avenue&quot;,\r\n        &quot;4&quot;: &quot;Reiserstown Plaza&quot;, -     &quot;5&quot;: &quot;Rogers Avenue&quot;, -     &quot;6&quot;: &quot;West Cold Spring&quot;,\r\n        &quot;5&quot;: &quot;Rogers Avenue&quot;, -     &quot;6&quot;: &quot;West Cold Spring&quot;, -     &quot;7&quot;: &quot;Mondawmin&quot;,\r\n        &quot;6&quot;: &quot;West Cold Spring&quot;, -     &quot;7&quot;: &quot;Mondawmin&quot;, -     &quot;8&quot;: &quot;Penn North&quot;,\r\n        &quot;7&quot;: &quot;Mondawmin&quot;, -     &quot;8&quot;: &quot;Penn North&quot;, -     &quot;9&quot;: &quot;Uptown&quot;,\r\n        &quot;8&quot;: &quot;Penn North&quot;, -     &quot;9&quot;: &quot;Uptown&quot;, -     &quot;10&quot;: &quot;State Center&quot;,\r\n        &quot;9&quot;: &quot;Uptown&quot;, -     &quot;10&quot;: &quot;State Center&quot;, -     &quot;11&quot;: &quot;Lexington Market&quot;,\r\n        &quot;10&quot;: &quot;State Center&quot;, -     &quot;11&quot;: &quot;Lexington Market&quot;, -     &quot;12&quot;: &quot;Charles Center&quot;,\r\n        &quot;11&quot;: &quot;Lexington Market&quot;, -     &quot;12&quot;: &quot;Charles Center&quot;, -     &quot;13&quot;: &quot;Shot Tower/Market Place&quot;,\r\n        &quot;12&quot;: &quot;Charles Center&quot;, -     &quot;13&quot;: &quot;Shot Tower/Market Place&quot;, -     &quot;14&quot;: &quot;Johns Hopkins Hospital&quot;\r\n        &quot;13&quot;: &quot;Shot Tower/Market Place&quot;, -     &quot;14&quot;: &quot;Johns Hopkins Hospital&quot; -   }\r\n        &quot;14&quot;: &quot;Johns Hopkins Hospital&quot; -   } - }\r\n      } - } - depot\r\n  time: Thu, 17 Mar 2022 09:55:54 UTC\r\nrecord: -1\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../HyperMetro/HyperMetro/Several directions/task-info.yaml b/../HyperMetro/HyperMetro/Several directions/task-info.yaml
--- a/../HyperMetro/HyperMetro/Several directions/task-info.yaml	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../HyperMetro/HyperMetro/Several directions/task-info.yaml	(date 1648365136166)
@@ -1,16 +1,5 @@
 type: edu
 files:
-- name: src/metro/Main.java
-  visible: true
-  text: |
-    package metro;
-
-    public class Main {
-        public static void main(String[] args) {
-            System.out.println("Hello, world!");
-        }
-    }
-  learner_created: false
 - name: test/Tests.java
   visible: false
   text: |-
@@ -209,98 +198,6 @@
         }
     }
   learner_created: false
-- name: src/metro/util/ParserCommandLine.java
-  visible: true
-  text: |
-    package metro.util;
-
-    public class ParserCommandLine {
-        private static String path;
-
-        public static String getPath() {
-            return path;
-        }
-
-        public static void parse(String[] args) {
-            path = args[0].isEmpty() ? "ERROR" : args[0];
-        }
-    }
-  learner_created: true
-- name: src/metro/util/FileWithStationsNames.java
-  visible: true
-  text: |
-    package metro.util;
-
-    import java.io.File;
-
-    public class FileWithStationsNames {
-        private static File file = new File(ParserCommandLine.getPath());
-
-        public static File getFile() {
-            return file;
-        }
-    }
-  learner_created: true
-- name: src/metro/util/PrintResult.java
-  visible: true
-  text: |
-    package metro.util;
-
-    import java.util.LinkedList;
-
-    public class PrintResult {
-        public static void print(LinkedList<String> stations) {
-            stations.addFirst("depot");
-            stations.addLast("depot");
-            while (stations.size() > 2) {
-                System.out.print(stations.removeFirst());
-                stations.stream().limit(2).forEach(e -> System.out.print(" - " + e));
-                System.out.println();
-            }
-        }
-    }
-  learner_created: true
-- name: src/metro/Application.java
-  visible: true
-  text: |
-    package metro;
-
-    import metro.util.FileWithStationsNames;
-    import metro.util.ParserCommandLine;
-    import metro.util.PrintResult;
-
-    import java.io.FileNotFoundException;
-    import java.util.LinkedList;
-    import java.util.List;
-    import java.util.Scanner;
-
-    public class Application {
-
-        private static LinkedList<String> stations = new LinkedList<>();
-
-        public static void run(String[] args) {
-            ParserCommandLine.parse(args);
-            try (Scanner scanner = new Scanner(FileWithStationsNames.getFile())) {
-                while (scanner.hasNextLine()) {
-                    stations.add(scanner.nextLine());
-                }
-            } catch (FileNotFoundException e) {
-                System.out.println("Error! Such a file doesn't exist!");
-            }
-            PrintResult.print(stations);
-
-    //        List<String> tmp = List.of("Bishops road",
-    //                "Edgver road",
-    //                "Baker street",
-    //                "Portland road",
-    //                "Gower street",
-    //                "Kings cross",
-    //                "Farringdon street");
-    //        LinkedList<String> tmpLL = new LinkedList<>(tmp);
-    //        PrintResult.print(tmpLL);
-        }
-    }
-  learner_created: true
 - name: test/lausanne.json
   visible: false
   text: |-
@@ -380,65 +277,18 @@
       }
     }
   learner_created: false
-- name: src/metro/Station.java
-  visible: true
-  learner_created: true
-- name: src/metro/Metro.java
+- name: src/metro/Main.java
   visible: true
   learner_created: true
-- name: src/metro/util/GsonParser.java
+- name: src/metro/ParseUtil.java
   visible: true
   learner_created: true
-- name: src/metro/util/commands/CommandAppend.java
-  visible: true
-  learner_created: true
-- name: src/metro/util/commands/CommandRemove.java
-  visible: true
-  learner_created: true
-- name: src/metro/util/commands/CommandAddHead.java
-  visible: true
-  learner_created: true
-- name: src/metro/util/commands/Command.java
-  visible: true
-  learner_created: true
-- name: src/metro/util/commands/CommandOutput.java
-  visible: true
-  learner_created: true
-- name: src/metro/util/ParserInputCommand.java
+- name: src/metro/Metro.java
   visible: true
   learner_created: true
 feedback_link: https://hyperskill.org/learn/step/10342#comment
-status: Failed
+status: Solved
 feedback:
-  message: |-
-    Error in test #1
-
-    The program Main has unexpectedly terminated.
-    It finished execution too early, should continue running.
-
-    Please find below the output of your program during this failed test.
-
-    ---
-
-    Arguments: ./test/baltimore.json
-
-    depot - { -   &quot;SubwayLink&quot;: {
-    { -   &quot;SubwayLink&quot;: { -     &quot;1&quot;: &quot;Owings Mills&quot;,
-      &quot;SubwayLink&quot;: { -     &quot;1&quot;: &quot;Owings Mills&quot;, -     &quot;2&quot;: &quot;Old Court&quot;,
-        &quot;1&quot;: &quot;Owings Mills&quot;, -     &quot;2&quot;: &quot;Old Court&quot;, -     &quot;3&quot;: &quot;Milford Mill&quot;,
-        &quot;2&quot;: &quot;Old Court&quot;, -     &quot;3&quot;: &quot;Milford Mill&quot;, -     &quot;4&quot;: &quot;Reiserstown Plaza&quot;,
-        &quot;3&quot;: &quot;Milford Mill&quot;, -     &quot;4&quot;: &quot;Reiserstown Plaza&quot;, -     &quot;5&quot;: &quot;Rogers Avenue&quot;,
-        &quot;4&quot;: &quot;Reiserstown Plaza&quot;, -     &quot;5&quot;: &quot;Rogers Avenue&quot;, -     &quot;6&quot;: &quot;West Cold Spring&quot;,
-        &quot;5&quot;: &quot;Rogers Avenue&quot;, -     &quot;6&quot;: &quot;West Cold Spring&quot;, -     &quot;7&quot;: &quot;Mondawmin&quot;,
-        &quot;6&quot;: &quot;West Cold Spring&quot;, -     &quot;7&quot;: &quot;Mondawmin&quot;, -     &quot;8&quot;: &quot;Penn North&quot;,
-        &quot;7&quot;: &quot;Mondawmin&quot;, -     &quot;8&quot;: &quot;Penn North&quot;, -     &quot;9&quot;: &quot;Uptown&quot;,
-        &quot;8&quot;: &quot;Penn North&quot;, -     &quot;9&quot;: &quot;Uptown&quot;, -     &quot;10&quot;: &quot;State Center&quot;,
-        &quot;9&quot;: &quot;Uptown&quot;, -     &quot;10&quot;: &quot;State Center&quot;, -     &quot;11&quot;: &quot;Lexington Market&quot;,
-        &quot;10&quot;: &quot;State Center&quot;, -     &quot;11&quot;: &quot;Lexington Market&quot;, -     &quot;12&quot;: &quot;Charles Center&quot;,
-        &quot;11&quot;: &quot;Lexington Market&quot;, -     &quot;12&quot;: &quot;Charles Center&quot;, -     &quot;13&quot;: &quot;Shot Tower/Market Place&quot;,
-        &quot;12&quot;: &quot;Charles Center&quot;, -     &quot;13&quot;: &quot;Shot Tower/Market Place&quot;, -     &quot;14&quot;: &quot;Johns Hopkins Hospital&quot;
-        &quot;13&quot;: &quot;Shot Tower/Market Place&quot;, -     &quot;14&quot;: &quot;Johns Hopkins Hospital&quot; -   }
-        &quot;14&quot;: &quot;Johns Hopkins Hospital&quot; -   } - }
-      } - } - depot
-  time: Thu, 17 Mar 2022 09:55:54 UTC
-record: -1
+  message: Congratulations!
+  time: Sun, 27 Mar 2022 07:11:04 UTC
+record: 2
Index: .idea/modules/util/Web_Quiz_Engine.util.main.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules/util/Web_Quiz_Engine.util.main.iml b/.idea/modules/util/Web_Quiz_Engine.util.main.iml
new file mode 100644
--- /dev/null	(date 1648630872342)
+++ b/.idea/modules/util/Web_Quiz_Engine.util.main.iml	(date 1648630872342)
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module external.linked.project.id=":util:main" external.linked.project.path="$MODULE_DIR$/../../../util" external.root.project.path="$MODULE_DIR$/../../.." external.system.id="GRADLE" external.system.module.group="Web Quiz Engine" external.system.module.type="sourceSet" external.system.module.version="unspecified" type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_11">
+    <output url="file://$MODULE_DIR$/../../../util/out/production/classes" />
+    <exclude-output />
+    <content url="file://$MODULE_DIR$/../../../util/src" />
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" name="Gradle: com.github.hyperskill:hs-test:release-SNAPSHOT" level="project" />
+    <orderEntry type="library" name="Gradle: org.assertj:assertj-swing-junit:3.9.2" level="project" />
+    <orderEntry type="library" name="Gradle: junit:junit:4.12" level="project" />
+    <orderEntry type="library" name="Gradle: org.apache.httpcomponents:httpclient:4.5.9" level="project" />
+    <orderEntry type="library" name="Gradle: com.google.code.gson:gson:2.8.5" level="project" />
+    <orderEntry type="library" name="Gradle: org.assertj:assertj-swing:3.9.2" level="project" />
+    <orderEntry type="library" name="Gradle: org.easytesting:fest-reflect:1.4.1" level="project" />
+    <orderEntry type="library" name="Gradle: org.hamcrest:hamcrest-core:1.3" level="project" />
+    <orderEntry type="library" name="Gradle: org.apache.httpcomponents:httpcore:4.4.11" level="project" />
+    <orderEntry type="library" name="Gradle: commons-logging:commons-logging:1.2" level="project" />
+    <orderEntry type="library" name="Gradle: commons-codec:commons-codec:1.11" level="project" />
+    <orderEntry type="library" name="Gradle: org.assertj:assertj-core:3.11.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Gradle: org.easytesting:fest-util:1.2.5" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
--- /dev/null	(date 1648637881032)
+++ b/.idea/modules.xml	(date 1648637881032)
@@ -0,0 +1,32 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/Web_Quiz_Engine.iml" filepath="$PROJECT_DIR$/.idea/modules/Web_Quiz_Engine.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/Web Quiz Engine/task/Web_Quiz_Engine.Web_Quiz_Engine-task.iml" filepath="$PROJECT_DIR$/.idea/modules/Web Quiz Engine/task/Web_Quiz_Engine.Web_Quiz_Engine-task.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/Web Quiz Engine/task/build/classes/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-classes-java.iml" filepath="$PROJECT_DIR$/.idea/modules/Web Quiz Engine/task/build/classes/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-classes-java.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/Web Quiz Engine/task/build/classes/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-classes-java.main.iml" filepath="$PROJECT_DIR$/.idea/modules/Web Quiz Engine/task/build/classes/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-classes-java.main.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/Web Quiz Engine/task/build/classes/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-classes-java.test.iml" filepath="$PROJECT_DIR$/.idea/modules/Web Quiz Engine/task/build/classes/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-classes-java.test.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/Web Quiz Engine/task/build/generated/sources/annotationProcessor/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-generated-sources-annotationProcessor-java.iml" filepath="$PROJECT_DIR$/.idea/modules/Web Quiz Engine/task/build/generated/sources/annotationProcessor/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-generated-sources-annotationProcessor-java.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/Web Quiz Engine/task/build/generated/sources/annotationProcessor/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-generated-sources-annotationProcessor-java.main.iml" filepath="$PROJECT_DIR$/.idea/modules/Web Quiz Engine/task/build/generated/sources/annotationProcessor/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-generated-sources-annotationProcessor-java.main.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/Web Quiz Engine/task/build/generated/sources/annotationProcessor/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-generated-sources-annotationProcessor-java.test.iml" filepath="$PROJECT_DIR$/.idea/modules/Web Quiz Engine/task/build/generated/sources/annotationProcessor/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-generated-sources-annotationProcessor-java.test.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/Web Quiz Engine/task/build/generated/sources/headers/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-generated-sources-headers-java.iml" filepath="$PROJECT_DIR$/.idea/modules/Web Quiz Engine/task/build/generated/sources/headers/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-generated-sources-headers-java.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/Web Quiz Engine/task/build/generated/sources/headers/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-generated-sources-headers-java.main.iml" filepath="$PROJECT_DIR$/.idea/modules/Web Quiz Engine/task/build/generated/sources/headers/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-generated-sources-headers-java.main.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/Web Quiz Engine/task/build/generated/sources/headers/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-generated-sources-headers-java.test.iml" filepath="$PROJECT_DIR$/.idea/modules/Web Quiz Engine/task/build/generated/sources/headers/java/Web_Quiz_Engine.Web_Quiz_Engine-task-build-generated-sources-headers-java.test.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/Web Quiz Engine/task/build/reports/tests/Web_Quiz_Engine.Web_Quiz_Engine-task-build-reports-tests.iml" filepath="$PROJECT_DIR$/.idea/modules/Web Quiz Engine/task/build/reports/tests/Web_Quiz_Engine.Web_Quiz_Engine-task-build-reports-tests.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/Web Quiz Engine/task/build/reports/tests/Web_Quiz_Engine.Web_Quiz_Engine-task-build-reports-tests.main.iml" filepath="$PROJECT_DIR$/.idea/modules/Web Quiz Engine/task/build/reports/tests/Web_Quiz_Engine.Web_Quiz_Engine-task-build-reports-tests.main.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/Web Quiz Engine/task/build/reports/tests/Web_Quiz_Engine.Web_Quiz_Engine-task-build-reports-tests.test.iml" filepath="$PROJECT_DIR$/.idea/modules/Web Quiz Engine/task/build/reports/tests/Web_Quiz_Engine.Web_Quiz_Engine-task-build-reports-tests.test.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/Web Quiz Engine/task/build/test-results/Web_Quiz_Engine.Web_Quiz_Engine-task-build-test-results.iml" filepath="$PROJECT_DIR$/.idea/modules/Web Quiz Engine/task/build/test-results/Web_Quiz_Engine.Web_Quiz_Engine-task-build-test-results.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/Web Quiz Engine/task/build/test-results/Web_Quiz_Engine.Web_Quiz_Engine-task-build-test-results.main.iml" filepath="$PROJECT_DIR$/.idea/modules/Web Quiz Engine/task/build/test-results/Web_Quiz_Engine.Web_Quiz_Engine-task-build-test-results.main.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/Web Quiz Engine/task/build/test-results/Web_Quiz_Engine.Web_Quiz_Engine-task-build-test-results.test.iml" filepath="$PROJECT_DIR$/.idea/modules/Web Quiz Engine/task/build/test-results/Web_Quiz_Engine.Web_Quiz_Engine-task-build-test-results.test.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/Web Quiz Engine/task/build/tmp/Web_Quiz_Engine.Web_Quiz_Engine-task-build-tmp.iml" filepath="$PROJECT_DIR$/.idea/modules/Web Quiz Engine/task/build/tmp/Web_Quiz_Engine.Web_Quiz_Engine-task-build-tmp.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/Web Quiz Engine/task/build/tmp/Web_Quiz_Engine.Web_Quiz_Engine-task-build-tmp.main.iml" filepath="$PROJECT_DIR$/.idea/modules/Web Quiz Engine/task/build/tmp/Web_Quiz_Engine.Web_Quiz_Engine-task-build-tmp.main.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/Web Quiz Engine/task/build/tmp/Web_Quiz_Engine.Web_Quiz_Engine-task-build-tmp.test.iml" filepath="$PROJECT_DIR$/.idea/modules/Web Quiz Engine/task/build/tmp/Web_Quiz_Engine.Web_Quiz_Engine-task-build-tmp.test.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/Web Quiz Engine/task/Web_Quiz_Engine.Web_Quiz_Engine-task.main.iml" filepath="$PROJECT_DIR$/.idea/modules/Web Quiz Engine/task/Web_Quiz_Engine.Web_Quiz_Engine-task.main.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/Web Quiz Engine/task/Web_Quiz_Engine.Web_Quiz_Engine-task.test.iml" filepath="$PROJECT_DIR$/.idea/modules/Web Quiz Engine/task/Web_Quiz_Engine.Web_Quiz_Engine-task.test.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/util/Web_Quiz_Engine.util.iml" filepath="$PROJECT_DIR$/.idea/modules/util/Web_Quiz_Engine.util.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/util/Web_Quiz_Engine.util.main.iml" filepath="$PROJECT_DIR$/.idea/modules/util/Web_Quiz_Engine.util.main.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/util/Web_Quiz_Engine.util.test.iml" filepath="$PROJECT_DIR$/.idea/modules/util/Web_Quiz_Engine.util.test.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: ../HyperMetro/HyperMetro/A real metro/task-info.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>type: edu\r\nfiles:\r\n- name: src/metro/Main.java\r\n  visible: true\r\n  text: |\r\n    package metro;\r\n\r\n    public class Main {\r\n        public static void main(String[] args) {\r\n            System.out.println(\"Hello, world!\");\r\n        }\r\n    }\r\n  learner_created: false\r\n- name: test/Tests.java\r\n  visible: false\r\n  text: |-\r\n    import org.hyperskill.hstest.dynamic.DynamicTest;\r\n    import org.hyperskill.hstest.exception.outcomes.WrongAnswer;\r\n    import org.hyperskill.hstest.stage.StageTest;\r\n    import org.hyperskill.hstest.testcase.CheckResult;\r\n    import org.hyperskill.hstest.testing.TestedProgram;\r\n\r\n    public class Tests extends StageTest<String> {\r\n        // test from the previous stage with one line\r\n        @DynamicTest(order = 1)\r\n        CheckResult test1() {\r\n\r\n            TestedProgram main = new TestedProgram();\r\n            main.start(\"./test/baltimore.json\");\r\n            String output = main.execute(\"/output \\\"SubwayLink\\\"\").trim();\r\n\r\n            checkDepots(output);\r\n            checkOutputLength(output, 16);\r\n            assertStations(output, new String[]{\"Owings Mills\", \"Old Court\", \"Milford Mill\", \"Reiserstown Plaza\",\r\n                \"Rogers Avenue\", \"West Cold Spring\", \"Mondawmin\", \"Penn North\", \"Uptown\", \"State Center\",\r\n                \"Lexington Market\", \"Charles Center\", \"Shot Tower/Market Place\", \"Johns Hopkins Hospital\"});\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        // test of example\r\n        @DynamicTest(order = 2)\r\n        CheckResult test2() {\r\n\r\n            TestedProgram main = new TestedProgram();\r\n            main.start(\"./test/lausanne.json\");\r\n            String output = main.execute(\"/output \\\"m1\\\"\").trim();\r\n\r\n            checkDepots(output);\r\n            checkOutputLength(output, 17);\r\n            assertStations(output, new String[]{\"Renes—Gare\", \"Epenex\", \"Crochy\", \"Cerisaie\",\r\n                \"Bassenges\", \"EPFL\", \"UNL—Sorge\", \"Mouline\", \"UNL—Chemberonne\", \"Bourdonnette\", \"Melley\",\r\n                \"Provence\", \"Montelly\", \"Vigie\", \"Lausanne—Flon\"});\r\n\r\n            output = main.execute(\"/output \\\"m2\\\"\");\r\n            checkDepots(output);\r\n            checkOutputLength(output, 16);\r\n            assertStations(output, new String[]{\"Croisettes\", \"Vennes\", \"Fourmi\", \"Sallaz\", \"CHUV\", \"Ours\",\r\n                \"Riponne M.Bejart\", \"Bessieres\", \"Lausanne—Flon\", \"Lausanne Gare CFF\", \"Grancy\", \"Delices\", \"Jourdils\",\r\n                \"Ouchy—Olympique\"});\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        // example test pt.2 (with addition)\r\n        @DynamicTest(order = 3)\r\n        CheckResult test2_1() {\r\n\r\n            TestedProgram main = new TestedProgram();\r\n            main.start(\"./test/lausanne.json\");\r\n\r\n            // added a station to the end of the line\r\n            main.execute(\"/append \\\"m1\\\" \\\"Test station 1\\\"\");\r\n            String output = main.execute(\"/output \\\"m1\\\"\");\r\n\r\n            checkDepots(output);\r\n            checkOutputLength(output, 18);\r\n            assertStations(output, new String[]{\"Renes—Gare\", \"Epenex\", \"Crochy\", \"Cerisaie\",\r\n                \"Bassenges\", \"EPFL\", \"UNL—Sorge\", \"Mouline\", \"UNL—Chemberonne\", \"Bourdonnette\", \"Melley\",\r\n                \"Provence\", \"Montelly\", \"Vigie\", \"Lausanne—Flon\", \"Test station 1\"});\r\n\r\n            // added another one\r\n            main.execute(\"/append \\\"m1\\\" \\\"Test station 2\\\"\");\r\n            output = main.execute(\"/output \\\"m1\\\"\");\r\n\r\n            checkDepots(output);\r\n            checkOutputLength(output, 19);\r\n            assertStations(output, new String[]{\"Renes—Gare\", \"Epenex\", \"Crochy\", \"Cerisaie\",\r\n                \"Bassenges\", \"EPFL\", \"UNL—Sorge\", \"Mouline\", \"UNL—Chemberonne\", \"Bourdonnette\", \"Melley\",\r\n                \"Provence\", \"Montelly\", \"Vigie\", \"Lausanne—Flon\", \"Test station 1\", \"Test station 2\"});\r\n\r\n            // added one station to the beginning of the line\r\n            main.execute(\"/add-head \\\"m1\\\" \\\"Head\\\"\");\r\n            output = main.execute(\"/output \\\"m1\\\"\");\r\n\r\n            checkDepots(output);\r\n            checkOutputLength(output, 20);\r\n            assertStations(output, new String[]{\"Head\", \"Renes—Gare\", \"Epenex\", \"Crochy\", \"Cerisaie\",\r\n                \"Bassenges\", \"EPFL\", \"UNL—Sorge\", \"Mouline\", \"UNL—Chemberonne\", \"Bourdonnette\", \"Melley\",\r\n                \"Provence\", \"Montelly\", \"Vigie\", \"Lausanne—Flon\", \"Test station 1\", \"Test station 2\"});\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        // not existing file check\r\n        @DynamicTest(order = 4)\r\n        CheckResult test4() {\r\n            TestedProgram main = new TestedProgram();\r\n            String output = main.start(\"tHiS_fIlE_DoEs_nOt_ExIsT.txt\");\r\n            if (output.trim().length() == 0) {\r\n                return CheckResult.wrong(\"The program did not print anything when the file was not exist. \");\r\n            }\r\n            if (output.toLowerCase().startsWith(\"depot\") || output.toLowerCase().endsWith(\"depot\")) {\r\n                return CheckResult.wrong(\"It looks like the program did not print an error message when the file was not exist.\");\r\n            }\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        // test of a case from the example\r\n        @DynamicTest(order = 5)\r\n        CheckResult test5() {\r\n\r\n            TestedProgram main = new TestedProgram();\r\n            main.start(\"./test/prague.json\");\r\n\r\n            String[][] stations = new String[][]{\r\n                {\"Nemocnice Motol\", null}, {\"Petriny\", null}, {\"Nadrazi Veleslavin\", null}, {\"Borislavka\", null},\r\n                {\"Dejvicka\", null}, {\"Hradcanska\", null}, {\"Malostranska\", null}, {\"Staromestska\", null},\r\n                {\"Mustek\", \"Linka B\"}, {\"Muzeum\", \"Linka C\"}, {\"Namesti Miru\", null}, {\"Jiriho z Podebrad\", null},\r\n                {\"Flora\", null}, {\"Zelivskeho\", null}, {\"Strasnicka\", null}, {\"Skalka\", null}, {\"Depo Hostivar\", null}\r\n            };\r\n\r\n            String output = main.execute(\"/output \\\"Linka A\\\"\");\r\n            checkDepots(output);\r\n            checkOutputLength(output, 19);\r\n            assertWithTransfer(output, stations);\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 6)\r\n        CheckResult test6() {\r\n\r\n            TestedProgram main = new TestedProgram();\r\n            main.start(\"./test/prague.json\");\r\n\r\n            String[][] stations = new String[][]{{\"Nemocnice Motol\", null}, {\"Petriny\", \"Linka C\"},\r\n                {\"Nadrazi Veleslavin\", null}, {\"Borislavka\", null}, {\"Dejvicka\", null}, {\"Hradcanska\", null},\r\n                {\"Malostranska\", null}, {\"Staromestska\", null}, {\"Mustek\", \"Linka B\"}, {\"Muzeum\", \"Linka C\"},\r\n                {\"Namesti Miru\", null}, {\"Jiriho z Podebrad\", null}, {\"Flora\", null}, {\"Zelivskeho\", null},\r\n                {\"Strasnicka\", null}, {\"Skalka\", null}, {\"Depo Hostivar\", null}};\r\n\r\n            main.execute(\"/connect \\\"Linka C\\\" \\\"I.P.Pavlova\\\" \\\"Linka A\\\" \\\"Petriny\\\"\");\r\n\r\n            String output = main.execute(\"/output \\\"Linka A\\\"\");\r\n            checkDepots(output);\r\n            checkOutputLength(output, 19);\r\n            assertWithTransfer(output, stations);\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        // checks for \"depot\" at the start and at the end\r\n        void checkDepots(String output) {\r\n            output = output.trim().toLowerCase();\r\n            if (!output.startsWith(\"depot\")) {\r\n                throw new WrongAnswer(\"Your output should start with 'depot'.\");\r\n            } else if (!output.endsWith(\"depot\")) {\r\n                throw new WrongAnswer(\"Your output should end with 'depot'.\");\r\n            }\r\n        }\r\n\r\n        // checks number of stations in output\r\n        void checkOutputLength(String output, int correctLength) {\r\n            int length = output.trim().split(\"\\n\").length;\r\n            if (length != correctLength) {\r\n                throw new WrongAnswer(\"You output contains wrong number of lines.\\n\" +\r\n                    \"Expected: \" + correctLength + \" lines\\n\" +\r\n                    \"Your output: \" + length + \" lines\");\r\n            }\r\n        }\r\n\r\n        // checks stations\r\n        void assertStations(String output, String[] stations) {\r\n\r\n            String[] sOutput = output.trim().split(\"\\n\");\r\n\r\n            for (int i = 0; i < stations.length; i++) {\r\n                if (!sOutput[i + 1].equals(stations[i])) {\r\n                    throw new WrongAnswer(\"Can't find station '\" + stations[i] + \"' in the line number \" + (i + 2));\r\n                }\r\n            }\r\n        }\r\n\r\n        void assertWithTransfer(String output, String[][] stations) {\r\n\r\n            String[] sOutput = output.split(\"\\n\");\r\n\r\n            for (int i = 0; i < stations.length; i++) {\r\n                String currentLine = sOutput[i + 1].toLowerCase().trim();\r\n                String currentStation = stations[i][0];\r\n                String currentTransfer = stations[i][1];\r\n                if (currentTransfer == null) {\r\n                    if (!currentLine.equals(currentStation.toLowerCase())) {\r\n                        throw new WrongAnswer(\"There is an error in your program's reply. Some stations were not found.\");\r\n                    }\r\n                } else if (!currentLine.contains(currentStation.toLowerCase()) ||\r\n                    !currentLine.contains(currentTransfer.toLowerCase())) {\r\n                    throw new WrongAnswer(\"Expected transfer to '\" + currentTransfer + \"' from '\" + currentStation + \"' station.\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n  learner_created: false\r\n- name: test/baltimore.json\r\n  visible: false\r\n  text: |-\r\n    {\r\n      \"SubwayLink\": {\r\n        \"1\": {\r\n          \"name\": \"Owings Mills\",\r\n          \"transfer\": []\r\n        },\r\n        \"2\": {\r\n          \"name\": \"Old Court\",\r\n          \"transfer\": []\r\n        },\r\n        \"3\": {\r\n          \"name\": \"Milford Mill\",\r\n          \"transfer\": []\r\n        },\r\n        \"4\": {\r\n          \"name\": \"Reiserstown Plaza\",\r\n          \"transfer\": []\r\n        },\r\n        \"5\": {\r\n          \"name\": \"Rogers Avenue\",\r\n          \"transfer\": []\r\n        },\r\n        \"6\": {\r\n          \"name\": \"West Cold Spring\",\r\n          \"transfer\": []\r\n        },\r\n        \"7\": {\r\n          \"name\": \"Mondawmin\",\r\n          \"transfer\": []\r\n        },\r\n        \"8\": {\r\n          \"name\": \"Penn North\",\r\n          \"transfer\": []\r\n        },\r\n        \"9\": {\r\n          \"name\": \"Uptown\",\r\n          \"transfer\": []\r\n        },\r\n        \"10\": {\r\n          \"name\": \"State Center\",\r\n          \"transfer\": []\r\n        },\r\n        \"11\": {\r\n          \"name\": \"Lexington Market\",\r\n          \"transfer\": []\r\n        },\r\n        \"12\": {\r\n          \"name\": \"Charles Center\",\r\n          \"transfer\": []\r\n        },\r\n        \"13\": {\r\n          \"name\": \"Shot Tower/Market Place\",\r\n          \"transfer\": []\r\n        },\r\n        \"14\": {\r\n          \"name\": \"Johns Hopkins Hospital\",\r\n          \"transfer\": []\r\n        }\r\n      }\r\n    }\r\n  learner_created: false\r\n- name: test/lausanne.json\r\n  visible: false\r\n  text: |-\r\n    {\r\n      \"m1\": {\r\n        \"1\": {\r\n          \"name\": \"Renes—Gare\",\r\n          \"transfer\": []\r\n        },\r\n        \"2\": {\r\n          \"name\": \"Epenex\",\r\n          \"transfer\": []\r\n        },\r\n        \"3\": {\r\n          \"name\": \"Crochy\",\r\n          \"transfer\": []\r\n        },\r\n        \"4\": {\r\n          \"name\": \"Cerisaie\",\r\n          \"transfer\": []\r\n        },\r\n        \"5\": {\r\n          \"name\": \"Bassenges\",\r\n          \"transfer\": []\r\n        },\r\n        \"6\": {\r\n          \"name\": \"EPFL\",\r\n          \"transfer\": []\r\n        },\r\n        \"7\": {\r\n          \"name\": \"UNL—Sorge\",\r\n          \"transfer\": []\r\n        },\r\n        \"8\": {\r\n          \"name\": \"Mouline\",\r\n          \"transfer\": []\r\n        },\r\n        \"9\": {\r\n          \"name\": \"UNL—Chemberonne\",\r\n          \"transfer\": []\r\n        },\r\n        \"10\": {\r\n          \"name\": \"Bourdonnette\",\r\n          \"transfer\": []\r\n        },\r\n        \"11\": {\r\n          \"name\": \"Melley\",\r\n          \"transfer\": []\r\n        },\r\n        \"12\": {\r\n          \"name\": \"Provence\",\r\n          \"transfer\": []\r\n        },\r\n        \"13\": {\r\n          \"name\": \"Montelly\",\r\n          \"transfer\": []\r\n        },\r\n        \"14\": {\r\n          \"name\": \"Vigie\",\r\n          \"transfer\": []\r\n        },\r\n        \"15\": {\r\n          \"name\": \"Lausanne—Flon\",\r\n          \"transfer\": []\r\n        }\r\n      },\r\n      \"m2\": {\r\n        \"1\": {\r\n          \"name\": \"Croisettes\",\r\n          \"transfer\": []\r\n        },\r\n        \"2\": {\r\n          \"name\": \"Vennes\",\r\n          \"transfer\": []\r\n        },\r\n        \"3\": {\r\n          \"name\": \"Fourmi\",\r\n          \"transfer\": []\r\n        },\r\n        \"4\": {\r\n          \"name\": \"Sallaz\",\r\n          \"transfer\": []\r\n        },\r\n        \"5\": {\r\n          \"name\": \"CHUV\",\r\n          \"transfer\": []\r\n        },\r\n        \"6\": {\r\n          \"name\": \"Ours\",\r\n          \"transfer\": []\r\n        },\r\n        \"7\": {\r\n          \"name\": \"Riponne M.Bejart\",\r\n          \"transfer\": []\r\n        },\r\n        \"8\": {\r\n          \"name\": \"Bessieres\",\r\n          \"transfer\": []\r\n        },\r\n        \"9\": {\r\n          \"name\": \"Lausanne—Flon\",\r\n          \"transfer\": []\r\n        },\r\n        \"10\": {\r\n          \"name\": \"Lausanne Gare CFF\",\r\n          \"transfer\": []\r\n        },\r\n        \"11\": {\r\n          \"name\": \"Grancy\",\r\n          \"transfer\": []\r\n        },\r\n        \"12\": {\r\n          \"name\": \"Delices\",\r\n          \"transfer\": []\r\n        },\r\n        \"13\": {\r\n          \"name\": \"Jourdils\",\r\n          \"transfer\": []\r\n        },\r\n        \"14\": {\r\n          \"name\": \"Ouchy—Olympique\",\r\n          \"transfer\": []\r\n        }\r\n      }\r\n    }\r\n  learner_created: false\r\n- name: test/prague.json\r\n  visible: false\r\n  text: |-\r\n    {\r\n      \"Linka A\": {\r\n        \"1\": {\r\n          \"name\": \"Nemocnice Motol\",\r\n          \"transfer\": []\r\n        },\r\n        \"2\": {\r\n          \"name\": \"Petriny\",\r\n          \"transfer\": []\r\n        },\r\n        \"3\": {\r\n          \"name\": \"Nadrazi Veleslavin\",\r\n          \"transfer\": []\r\n        },\r\n        \"4\": {\r\n          \"name\": \"Borislavka\",\r\n          \"transfer\": []\r\n        },\r\n        \"5\": {\r\n          \"name\": \"Dejvicka\",\r\n          \"transfer\": []\r\n        },\r\n        \"6\": {\r\n          \"name\": \"Hradcanska\",\r\n          \"transfer\": []\r\n        },\r\n        \"7\": {\r\n          \"name\": \"Malostranska\",\r\n          \"transfer\": []\r\n        },\r\n        \"8\": {\r\n          \"name\": \"Staromestska\",\r\n          \"transfer\": []\r\n        },\r\n        \"9\": {\r\n          \"name\": \"Mustek\",\r\n          \"transfer\": [\r\n            {\r\n              \"line\": \"Linka B\",\r\n              \"station\": \"Mustek\"\r\n            }\r\n          ]\r\n        },\r\n        \"10\": {\r\n          \"name\": \"Muzeum\",\r\n          \"transfer\": [\r\n            {\r\n              \"line\": \"Linka C\",\r\n              \"station\": \"Muzeum\"\r\n            }\r\n          ]\r\n        },\r\n        \"11\": {\r\n          \"name\": \"Namesti Miru\",\r\n          \"transfer\": []\r\n        },\r\n        \"12\": {\r\n          \"name\": \"Jiriho z Podebrad\",\r\n          \"transfer\": []\r\n        },\r\n        \"13\": {\r\n          \"name\": \"Flora\",\r\n          \"transfer\": []\r\n        },\r\n        \"14\": {\r\n          \"name\": \"Zelivskeho\",\r\n          \"transfer\": []\r\n        },\r\n        \"15\": {\r\n          \"name\": \"Strasnicka\",\r\n          \"transfer\": []\r\n        },\r\n        \"16\": {\r\n          \"name\": \"Skalka\",\r\n          \"transfer\": []\r\n        },\r\n        \"17\": {\r\n          \"name\": \"Depo Hostivar\",\r\n          \"transfer\": []\r\n        }\r\n      },\r\n      \"Linka B\": {\r\n        \"1\": {\r\n          \"name\": \"Cerny Most\",\r\n          \"transfer\": []\r\n        },\r\n        \"2\": {\r\n          \"name\": \"Rajska zahrada\",\r\n          \"transfer\": []\r\n        },\r\n        \"3\": {\r\n          \"name\": \"Hloubetin\",\r\n          \"transfer\": []\r\n        },\r\n        \"4\": {\r\n          \"name\": \"Kolbenova\",\r\n          \"transfer\": []\r\n        },\r\n        \"5\": {\r\n          \"name\": \"Vysocanska\",\r\n          \"transfer\": []\r\n        },\r\n        \"6\": {\r\n          \"name\": \"Ceskomoravska\",\r\n          \"transfer\": []\r\n        },\r\n        \"7\": {\r\n          \"name\": \"Palmovka\",\r\n          \"transfer\": []\r\n        },\r\n        \"8\": {\r\n          \"name\": \"Invalidovna\",\r\n          \"transfer\": []\r\n        },\r\n        \"9\": {\r\n          \"name\": \"Krizikova\",\r\n          \"transfer\": []\r\n        },\r\n        \"10\": {\r\n          \"name\": \"Florenc\",\r\n          \"transfer\": [\r\n            {\r\n              \"line\": \"Linka C\",\r\n              \"station\": \"Florenc\"\r\n            }\r\n          ]\r\n        },\r\n        \"11\": {\r\n          \"name\": \"Namesti Republiky\",\r\n          \"transfer\": []\r\n        },\r\n        \"12\": {\r\n          \"name\": \"Mustek\",\r\n          \"transfer\": [\r\n            {\r\n              \"line\": \"Linka B\",\r\n              \"station\": \"Mustek\"\r\n            }\r\n          ]\r\n        },\r\n        \"13\": {\r\n          \"name\": \"Narodni trida\",\r\n          \"transfer\": []\r\n        },\r\n        \"14\": {\r\n          \"name\": \"Karlovo namesti\",\r\n          \"transfer\": []\r\n        },\r\n        \"15\": {\r\n          \"name\": \"Andel\",\r\n          \"transfer\": []\r\n        },\r\n        \"16\": {\r\n          \"name\": \"Smichovske nadrazi\",\r\n          \"transfer\": []\r\n        },\r\n        \"17\": {\r\n          \"name\": \"Radlicka\",\r\n          \"transfer\": []\r\n        },\r\n        \"18\": {\r\n          \"name\": \"Jinonice\",\r\n          \"transfer\": []\r\n        },\r\n        \"19\": {\r\n          \"name\": \"Nove Butovice\",\r\n          \"transfer\": []\r\n        },\r\n        \"20\": {\r\n          \"name\": \"Hurka\",\r\n          \"transfer\": []\r\n        },\r\n        \"21\": {\r\n          \"name\": \"Luziny\",\r\n          \"transfer\": []\r\n        },\r\n        \"22\": {\r\n          \"name\": \"Luka\",\r\n          \"transfer\": []\r\n        },\r\n        \"23\": {\r\n          \"name\": \"Stodulky\",\r\n          \"transfer\": []\r\n        },\r\n        \"24\": {\r\n          \"name\": \"Zlicin\",\r\n          \"transfer\": []\r\n        }\r\n      },\r\n      \"Linka C\": {\r\n        \"1\": {\r\n          \"name\": \"Letnany\",\r\n          \"transfer\": []\r\n        },\r\n        \"2\": {\r\n          \"name\": \"Prosek\",\r\n          \"transfer\": []\r\n        },\r\n        \"3\": {\r\n          \"name\": \"Strizkov\",\r\n          \"transfer\": []\r\n        },\r\n        \"4\": {\r\n          \"name\": \"Ladvi\",\r\n          \"transfer\": []\r\n        },\r\n        \"5\": {\r\n          \"name\": \"Kobylisy\",\r\n          \"transfer\": []\r\n        },\r\n        \"6\": {\r\n          \"name\": \"Nadrazi Holesovice\",\r\n          \"transfer\": []\r\n        },\r\n        \"7\": {\r\n          \"name\": \"Vltavska\",\r\n          \"transfer\": []\r\n        },\r\n        \"8\": {\r\n          \"name\": \"Florenc\",\r\n          \"transfer\": [\r\n            {\r\n              \"line\": \"Linka B\",\r\n              \"station\": \"Florenc\"\r\n            }\r\n          ]\r\n        },\r\n        \"9\": {\r\n          \"name\": \"Hlavni nadrazi\",\r\n          \"transfer\": []\r\n        },\r\n        \"10\": {\r\n          \"name\": \"Muzeum\",\r\n          \"transfer\": [\r\n            {\r\n              \"line\": \"Linka A\",\r\n              \"station\": \"Muzeum\"\r\n            }\r\n          ]\r\n        },\r\n        \"11\": {\r\n          \"name\": \"I.P.Pavlova\",\r\n          \"transfer\": []\r\n        },\r\n        \"12\": {\r\n          \"name\": \"Vysehrad\",\r\n          \"transfer\": []\r\n        },\r\n        \"13\": {\r\n          \"name\": \"Prazskeho povstani\",\r\n          \"transfer\": []\r\n        },\r\n        \"14\": {\r\n          \"name\": \"Pankrac\",\r\n          \"transfer\": []\r\n        },\r\n        \"15\": {\r\n          \"name\": \"Budejovicka\",\r\n          \"transfer\": []\r\n        },\r\n        \"16\": {\r\n          \"name\": \"Kacerov\",\r\n          \"transfer\": []\r\n        },\r\n        \"17\": {\r\n          \"name\": \"Roztyly\",\r\n          \"transfer\": []\r\n        },\r\n        \"18\": {\r\n          \"name\": \"Chodov\",\r\n          \"transfer\": []\r\n        },\r\n        \"19\": {\r\n          \"name\": \"Opatov\",\r\n          \"transfer\": []\r\n        },\r\n        \"20\": {\r\n          \"name\": \"Haje\",\r\n          \"transfer\": []\r\n        }\r\n      }\r\n    }\r\n  learner_created: false\r\nfeedback_link: https://hyperskill.org/learn/step/10343#comment\r\nstatus: Unchecked\r\nrecord: -1\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../HyperMetro/HyperMetro/A real metro/task-info.yaml b/../HyperMetro/HyperMetro/A real metro/task-info.yaml
--- a/../HyperMetro/HyperMetro/A real metro/task-info.yaml	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../HyperMetro/HyperMetro/A real metro/task-info.yaml	(date 1648366259410)
@@ -1,16 +1,5 @@
 type: edu
 files:
-- name: src/metro/Main.java
-  visible: true
-  text: |
-    package metro;
-
-    public class Main {
-        public static void main(String[] args) {
-            System.out.println("Hello, world!");
-        }
-    }
-  learner_created: false
 - name: test/Tests.java
   visible: false
   text: |-
@@ -688,6 +677,78 @@
       }
     }
   learner_created: false
+- name: src/metro/commands/RouteCommand.java
+  visible: true
+  learner_created: true
+- name: src/metro/commands/AddHeadCommand.java
+  visible: true
+  learner_created: true
+- name: src/metro/commands/RemoveCommand.java
+  visible: true
+  learner_created: true
+- name: src/metro/commands/FastestRouteCommand.java
+  visible: true
+  learner_created: true
+- name: src/metro/commands/AppendCommand.java
+  visible: true
+  learner_created: true
+- name: src/metro/commands/ConnectCommand.java
+  visible: true
+  learner_created: true
+- name: src/metro/commands/Command.java
+  visible: true
+  learner_created: true
+- name: src/metro/commands/Controller.java
+  visible: true
+  learner_created: true
+- name: src/metro/commands/OutputCommand.java
+  visible: true
+  learner_created: true
+- name: src/metro/database/Line.java
+  visible: true
+  learner_created: true
+- name: src/metro/database/Station.java
+  visible: true
+  learner_created: true
+- name: src/metro/database/Subway.java
+  visible: true
+  learner_created: true
+- name: src/metro/database/DijkstrasShortestPath.java
+  visible: true
+  learner_created: true
+- name: src/metro/database/Graph.java
+  visible: true
+  learner_created: true
+- name: src/metro/database/ReadSubwayData.java
+  visible: true
+  learner_created: true
+- name: src/metro/database/Transfer.java
+  visible: true
+  learner_created: true
+- name: src/metro/database/BreadthFirstSearch.java
+  visible: true
+  learner_created: true
+- name: src/metro/database/Edge.java
+  visible: true
+  learner_created: true
+- name: src/metro/reserv/Main.java
+  visible: true
+  learner_created: true
+- name: src/metro/reserv/InputParser.java
+  visible: true
+  learner_created: true
+- name: src/metro/Main.java
+  visible: true
+  learner_created: true
+- name: src/metro/ParseUtil.java
+  visible: true
+  learner_created: true
+- name: src/metro/Metro.java
+  visible: true
+  learner_created: true
 feedback_link: https://hyperskill.org/learn/step/10343#comment
-status: Unchecked
-record: -1
+status: Solved
+feedback:
+  message: Congratulations!
+  time: Sun, 27 Mar 2022 07:30:11 UTC
+record: 3
Index: ../HyperMetro/HyperMetro/The shortest route/task-info.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>type: edu\r\nfiles:\r\n- name: src/metro/Main.java\r\n  visible: true\r\n  text: |\r\n    package metro;\r\n\r\n    public class Main {\r\n        public static void main(String[] args) {\r\n            System.out.println(\"Hello, world!\");\r\n        }\r\n    }\r\n  learner_created: false\r\n- name: test/Tests.java\r\n  visible: false\r\n  text: |-\r\n    import org.hyperskill.hstest.dynamic.DynamicTest;\r\n    import org.hyperskill.hstest.exception.outcomes.WrongAnswer;\r\n    import org.hyperskill.hstest.stage.StageTest;\r\n    import org.hyperskill.hstest.testcase.CheckResult;\r\n    import org.hyperskill.hstest.testing.TestedProgram;\r\n\r\n    import java.util.Arrays;\r\n\r\n    public class Tests extends StageTest<String> {\r\n        // test from the previous stage with one line\r\n        @DynamicTest(order = 1)\r\n        CheckResult oneLineTest() {\r\n\r\n            TestedProgram main = new TestedProgram();\r\n            main.start(\"./test/baltimore.json\");\r\n            String output = main.execute(\"/output \\\"SubwayLink\\\"\").trim();\r\n\r\n            String[] stations = new String[]{\"Owings Mills\", \"Old Court\", \"Milford Mill\", \"Reiserstown Plaza\",\r\n                \"Rogers Avenue\", \"West Cold Spring\", \"Mondawmin\", \"Penn North\", \"Uptown\", \"State Center\",\r\n                \"Lexington Market\", \"Charles Center\", \"Shot Tower/Market Place\", \"Johns Hopkins Hospital\"};\r\n\r\n            checkDepots(output);\r\n            checkOutputLength(output, stations.length + 2);\r\n            assertStations(output, stations);\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        // test of example\r\n        @DynamicTest(order = 2)\r\n        CheckResult multipleLineOutputTest() {\r\n\r\n            TestedProgram main = new TestedProgram();\r\n            main.start(\"./test/lausanne.json\");\r\n            String output = main.execute(\"/output \\\"m1\\\"\").trim();\r\n\r\n            String[] stations = new String[]{\"Renes—Gare\", \"Epenex\", \"Crochy\", \"Cerisaie\",\r\n                \"Bassenges\", \"EPFL\", \"UNL—Sorge\", \"Mouline\", \"UNL—Chemberonne\", \"Bourdonnette\", \"Melley\",\r\n                \"Provence\", \"Montelly\", \"Vigie\", \"Lausanne—Flon\"};\r\n\r\n            checkDepots(output);\r\n            checkOutputLength(output, stations.length + 2);\r\n            assertStations(output, stations);\r\n\r\n            output = main.execute(\"/output \\\"m2\\\"\");\r\n\r\n            stations = new String[]{\"Croisettes\", \"Vennes\", \"Fourmi\", \"Sallaz\", \"CHUV\", \"Ours\",\r\n                \"Riponne M.Bejart\", \"Bessieres\", \"Lausanne—Flon\", \"Lausanne Gare CFF\", \"Grancy\", \"Delices\", \"Jourdils\",\r\n                \"Ouchy—Olympique\"};\r\n\r\n            checkDepots(output);\r\n            checkOutputLength(output, stations.length + 2);\r\n            assertStations(output, stations);\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        // example test pt.2 (with addition)\r\n        @DynamicTest(order = 3)\r\n        CheckResult additionTest() {\r\n\r\n            TestedProgram main = new TestedProgram();\r\n            main.start(\"./test/lausanne.json\");\r\n\r\n            // added a station to the end of the line\r\n            main.execute(\"/append \\\"m1\\\" \\\"Test station 1\\\"\");\r\n            String output = main.execute(\"/output \\\"m1\\\"\");\r\n\r\n            String[] stations = new String[]{\"Renes—Gare\", \"Epenex\", \"Crochy\", \"Cerisaie\",\r\n                \"Bassenges\", \"EPFL\", \"UNL—Sorge\", \"Mouline\", \"UNL—Chemberonne\", \"Bourdonnette\", \"Melley\",\r\n                \"Provence\", \"Montelly\", \"Vigie\", \"Lausanne—Flon\", \"Test station 1\"};\r\n\r\n            checkDepots(output);\r\n            checkOutputLength(output, stations.length + 2);\r\n            assertStations(output, stations);\r\n\r\n            // added another one\r\n            main.execute(\"/append \\\"m1\\\" \\\"Test station 2\\\"\");\r\n            output = main.execute(\"/output \\\"m1\\\"\");\r\n\r\n            stations = new String[]{\"Renes—Gare\", \"Epenex\", \"Crochy\", \"Cerisaie\",\r\n                \"Bassenges\", \"EPFL\", \"UNL—Sorge\", \"Mouline\", \"UNL—Chemberonne\", \"Bourdonnette\", \"Melley\",\r\n                \"Provence\", \"Montelly\", \"Vigie\", \"Lausanne—Flon\", \"Test station 1\", \"Test station 2\"};\r\n\r\n            checkDepots(output);\r\n            checkOutputLength(output, stations.length + 2);\r\n            assertStations(output, stations);\r\n\r\n            // added one station to the beginning of the line\r\n            main.execute(\"/add-head \\\"m1\\\" \\\"Head\\\"\");\r\n            output = main.execute(\"/output \\\"m1\\\"\");\r\n\r\n            stations = new String[]{\"Head\", \"Renes—Gare\", \"Epenex\", \"Crochy\", \"Cerisaie\",\r\n                \"Bassenges\", \"EPFL\", \"UNL—Sorge\", \"Mouline\", \"UNL—Chemberonne\", \"Bourdonnette\", \"Melley\",\r\n                \"Provence\", \"Montelly\", \"Vigie\", \"Lausanne—Flon\", \"Test station 1\", \"Test station 2\"};\r\n\r\n            checkDepots(output);\r\n            checkOutputLength(output, stations.length + 2);\r\n            assertStations(output, stations);\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        // not existing file check\r\n        @DynamicTest(order = 4)\r\n        CheckResult nonexistingFileTest() {\r\n            TestedProgram main = new TestedProgram();\r\n            String output = main.start(\"tHiS_fIlE_DoEs_nOt_ExIsT.txt\");\r\n            if (output.trim().length() == 0) {\r\n                return CheckResult.wrong(\"The program did not print anything when the file was not exist. \");\r\n            }\r\n            if (output.toLowerCase().startsWith(\"depot\") || output.toLowerCase().endsWith(\"depot\")) {\r\n                return CheckResult.wrong(\"It looks like the program did not print an error message when the file was not exist.\");\r\n            }\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        // test of a case from the example\r\n        @DynamicTest(order = 5)\r\n        CheckResult outputLineWithTransfer() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start(\"./test/prague.json\");\r\n\r\n            String[][] stations = new String[][]{\r\n                {\"Nemocnice Motol\", null},\r\n                {\"Petriny\", null},\r\n                {\"Nadrazi Veleslavin\", null},\r\n                {\"Borislavka\", null},\r\n                {\"Dejvicka\", null},\r\n                {\"Hradcanska\", null},\r\n                {\"Malostranska\", null},\r\n                {\"Staromestska\", null},\r\n                {\"Mustek\", \"Linka B\"},\r\n                {\"Muzeum\", \"Linka C\"},\r\n                {\"Namesti Miru\", null},\r\n                {\"Jiriho z Podebrad\", null},\r\n                {\"Flora\", null},\r\n                {\"Zelivskeho\", null},\r\n                {\"Strasnicka\", null},\r\n                {\"Skalka\", null},\r\n                {\"Depo Hostivar\", null}\r\n            };\r\n\r\n            String output = main.execute(\"/output \\\"Linka A\\\"\");\r\n            checkDepots(output);\r\n\r\n            checkOutputLength(output, stations.length + 2);\r\n            assertWithTransfer(output, stations);\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 6)\r\n        CheckResult connectLinesTest() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start(\"./test/prague.json\");\r\n\r\n            String[][] stations = new String[][]{\r\n                {\"Nemocnice Motol\", null},\r\n                {\"Petriny\", \"Linka C\"},\r\n                {\"Nadrazi Veleslavin\", null},\r\n                {\"Borislavka\", null},\r\n                {\"Dejvicka\", null},\r\n                {\"Hradcanska\", null},\r\n                {\"Malostranska\", null},\r\n                {\"Staromestska\", null},\r\n                {\"Mustek\", \"Linka B\"},\r\n                {\"Muzeum\", \"Linka C\"},\r\n                {\"Namesti Miru\", null},\r\n                {\"Jiriho z Podebrad\", null},\r\n                {\"Flora\", null},\r\n                {\"Zelivskeho\", null},\r\n                {\"Strasnicka\", null},\r\n                {\"Skalka\", null},\r\n                {\"Depo Hostivar\", null}\r\n            };\r\n\r\n            main.execute(\"/connect \\\"Linka C\\\" \\\"I.P.Pavlova\\\" \\\"Linka A\\\" \\\"Petriny\\\"\");\r\n            String output = main.execute(\"/output \\\"Linka A\\\"\");\r\n\r\n            checkDepots(output);\r\n            checkOutputLength(output, stations.length + 2);\r\n            assertWithTransfer(output, stations);\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 7)\r\n        CheckResult simpleRouteTest() {\r\n            TestedProgram main = new TestedProgram();\r\n            main.start(\"./test/prague.json\");\r\n\r\n            String[] correctRoute = {\"Petriny\", \"Nadrazi Veleslavin\", \"Borislavka\", \"Dejvicka\", \"Hradcanska\", \"Malostranska\",\r\n                \"Staromestska\", \"Mustek\", \"Muzeum\", \"Namesti Miru\", \"Jiriho z Podebrad\", \"Flora\"};\r\n\r\n            String[] sOutput = main.execute(\"/route \\\"Linka A\\\" \\\"Petriny\\\" \\\"Linka A\\\" \\\"Flora\\\"\").toLowerCase().split(\"\\n\");\r\n\r\n            if (sOutput.length != correctRoute.length) {\r\n                return CheckResult.wrong(\"Your program printed an incorrect number of stations in the route.\\n\" +\r\n                    \"Expected: \" + correctRoute.length + \" stations.\" +\r\n                    \"\\nYour output: \" + sOutput.length + \" stations.\");\r\n            }\r\n\r\n            for (int i = 0; i < correctRoute.length; i++) {\r\n                if (i == 0 && !correctRoute[i].toLowerCase().equals(sOutput[i].toLowerCase())) {\r\n                    return CheckResult.wrong(\"The first station in the output should be '\" + correctRoute[i] + \"'.\");\r\n                } else if (i != 0) {\r\n                    if (!correctRoute[i].toLowerCase().equals(sOutput[i].toLowerCase())) {\r\n                        return CheckResult.wrong(\"After '\" + correctRoute[i - 1] + \"' should be '\" + correctRoute[i] + \"'.\");\r\n                    }\r\n                }\r\n            }\r\n\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        @DynamicTest(order = 8)\r\n        CheckResult advancedRouteTest() {\r\n\r\n            TestedProgram main = new TestedProgram();\r\n            main.start(\"./test/prague.json\");\r\n\r\n            String[] stations = {\"Vysehrad\", \"I.P.Pavlova\", \"Muzeum\",\r\n                \"Transition to line Linka A\", \"Muzeum\", \"Mustek\",\r\n                \"Transition to line Linka B\", \"Mustek\", \"Namesti Republiky\"};\r\n            String[] sOutput = main.execute(\"/route \\\"Linka C\\\" \\\"Vysehrad\\\" \\\"Linka B\\\" \\\"Namesti Republiky\\\"\").split(\"\\n\");\r\n\r\n            if (sOutput.length != stations.length) {\r\n                return CheckResult.wrong(\"Your program printed an incorrect number of stations in the route.\\n\" +\r\n                    \"Expected: \" + (stations.length - 4) + \" stations and 2 transitions. Output should be \" + stations.length + \" lines.\" +\r\n                    \"\\nYour output: \" + sOutput.length + \" lines\");\r\n            }\r\n\r\n            for (int i = 0; i < stations.length; i++) {\r\n                if (i == 0 && !stations[i].toLowerCase().equals(sOutput[i].toLowerCase())) {\r\n                    return CheckResult.wrong(\"The first station in the output should be \" + stations[i]);\r\n                } else if (i != 0) {\r\n                    if (!stations[i].toLowerCase().equals(sOutput[i].toLowerCase())) {\r\n                        return CheckResult.wrong(\"After '\" + stations[i - 1] + \"' should be '\" + stations[i] + \"'.\");\r\n                    }\r\n                }\r\n            }\r\n            return CheckResult.correct();\r\n        }\r\n\r\n        // checks for \"depot\" at the start and at the end\r\n        void checkDepots(String output) {\r\n            output = output.trim().toLowerCase();\r\n            if (!output.startsWith(\"depot\")) {\r\n                throw new WrongAnswer(\"Your output should start with 'depot'.\");\r\n            } else if (!output.endsWith(\"depot\")) {\r\n                throw new WrongAnswer(\"Your output should end with 'depot'.\");\r\n            }\r\n        }\r\n\r\n        // checks number of stations in output\r\n        void checkOutputLength(String output, int correctLength) {\r\n            int length = output.trim().split(\"\\n\").length;\r\n            if (length != correctLength) {\r\n                throw new WrongAnswer(\"You output contains wrong number of lines.\\n\" +\r\n                    \"Expected: \" + correctLength + \" lines\\n\" +\r\n                    \"Your output: \" + length + \" lines\");\r\n            }\r\n        }\r\n\r\n        // checks stations\r\n        void assertStations(String output, String[] stations) {\r\n\r\n            String[] sOutput = output.trim().split(\"\\n\");\r\n\r\n            for (int i = 0; i < stations.length; i++) {\r\n                if (!sOutput[i + 1].equals(stations[i])) {\r\n                    throw new WrongAnswer(\"Can't find station '\" + stations[i] + \"' in the line number \" + (i + 2));\r\n                }\r\n            }\r\n        }\r\n\r\n        void assertWithTransfer(String output, String[][] stations) {\r\n\r\n            String[] sOutput = output.split(\"\\n\");\r\n\r\n            for (int i = 0; i < stations.length; i++) {\r\n                String currentLine = sOutput[i + 1].toLowerCase().trim();\r\n                String currentStation = stations[i][0];\r\n                String currentTransfer = stations[i][1];\r\n                if (currentTransfer == null) {\r\n                    if (!currentLine.equals(currentStation.toLowerCase())) {\r\n                        throw new WrongAnswer(\"There is an error in your program's reply. Some stations were not found.\");\r\n                    }\r\n                } else if (!currentLine.contains(currentStation.toLowerCase()) ||\r\n                    !currentLine.contains(currentTransfer.toLowerCase())) {\r\n                    throw new WrongAnswer(\"Expected transfer to '\" + currentTransfer + \"' from '\" + currentStation + \"' station.\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n  learner_created: false\r\n- name: test/prague.json\r\n  visible: false\r\n  text: |-\r\n    {\r\n      \"Linka A\": {\r\n        \"1\": {\r\n          \"name\": \"Nemocnice Motol\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"2\": {\r\n          \"name\": \"Petriny\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"3\": {\r\n          \"name\": \"Nadrazi Veleslavin\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"4\": {\r\n          \"name\": \"Borislavka\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"5\": {\r\n          \"name\": \"Dejvicka\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"6\": {\r\n          \"name\": \"Hradcanska\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"7\": {\r\n          \"name\": \"Malostranska\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"8\": {\r\n          \"name\": \"Staromestska\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"9\": {\r\n          \"name\": \"Mustek\" ,\r\n          \"transfer\": [\r\n            {\r\n              \"line\": \"Linka B\" ,\r\n              \"station\": \"Mustek\"\r\n            }\r\n          ]\r\n        } ,\r\n        \"10\": {\r\n          \"name\": \"Muzeum\" ,\r\n          \"transfer\": [\r\n            {\r\n              \"line\": \"Linka C\" ,\r\n              \"station\": \"Muzeum\"\r\n            }\r\n          ]\r\n        } ,\r\n        \"11\": {\r\n          \"name\": \"Namesti Miru\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"12\": {\r\n          \"name\": \"Jiriho z Podebrad\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"13\": {\r\n          \"name\": \"Flora\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"14\": {\r\n          \"name\": \"Zelivskeho\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"15\": {\r\n          \"name\": \"Strasnicka\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"16\": {\r\n          \"name\": \"Skalka\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"17\": {\r\n          \"name\": \"Depo Hostivar\" ,\r\n          \"transfer\": []\r\n        }\r\n      } ,\r\n      \"Linka B\": {\r\n        \"1\": {\r\n          \"name\": \"Cerny Most\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"2\": {\r\n          \"name\": \"Rajska zahrada\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"3\": {\r\n          \"name\": \"Hloubetin\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"4\": {\r\n          \"name\": \"Kolbenova\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"5\": {\r\n          \"name\": \"Vysocanska\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"6\": {\r\n          \"name\": \"Ceskomoravska\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"7\": {\r\n          \"name\": \"Palmovka\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"8\": {\r\n          \"name\": \"Invalidovna\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"9\": {\r\n          \"name\": \"Krizikova\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"10\": {\r\n          \"name\": \"Florenc\" ,\r\n          \"transfer\": [\r\n            {\r\n              \"line\": \"Linka C\" ,\r\n              \"station\": \"Florenc\"\r\n            }\r\n          ]\r\n        } ,\r\n        \"11\": {\r\n          \"name\": \"Namesti Republiky\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"12\": {\r\n          \"name\": \"Mustek\" ,\r\n          \"transfer\": [\r\n            {\r\n              \"line\": \"Linka A\" ,\r\n              \"station\": \"Mustek\"\r\n            }\r\n          ]\r\n        } ,\r\n        \"13\": {\r\n          \"name\": \"Narodni trida\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"14\": {\r\n          \"name\": \"Karlovo namesti\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"15\": {\r\n          \"name\": \"Andel\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"16\": {\r\n          \"name\": \"Smichovske nadrazi\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"17\": {\r\n          \"name\": \"Radlicka\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"18\": {\r\n          \"name\": \"Jinonice\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"19\": {\r\n          \"name\": \"Nove Butovice\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"20\": {\r\n          \"name\": \"Hurka\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"21\": {\r\n          \"name\": \"Luziny\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"22\": {\r\n          \"name\": \"Luka\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"23\": {\r\n          \"name\": \"Stodulky\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"24\": {\r\n          \"name\": \"Zlicin\" ,\r\n          \"transfer\": []\r\n        }\r\n      } ,\r\n      \"Linka C\": {\r\n        \"1\": {\r\n          \"name\": \"Letnany\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"2\": {\r\n          \"name\": \"Prosek\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"3\": {\r\n          \"name\": \"Strizkov\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"4\": {\r\n          \"name\": \"Ladvi\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"5\": {\r\n          \"name\": \"Kobylisy\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"6\": {\r\n          \"name\": \"Nadrazi Holesovice\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"7\": {\r\n          \"name\": \"Vltavska\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"8\": {\r\n          \"name\": \"Florenc\" ,\r\n          \"transfer\": [\r\n            {\r\n              \"line\": \"Linka B\" ,\r\n              \"station\": \"Florenc\"\r\n            }\r\n          ]\r\n        } ,\r\n        \"9\": {\r\n          \"name\": \"Hlavni nadrazi\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"10\": {\r\n          \"name\": \"Muzeum\" ,\r\n          \"transfer\": [\r\n            {\r\n              \"line\": \"Linka A\" ,\r\n              \"station\": \"Muzeum\"\r\n            }\r\n          ]\r\n        } ,\r\n        \"11\": {\r\n          \"name\": \"I.P.Pavlova\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"12\": {\r\n          \"name\": \"Vysehrad\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"13\": {\r\n          \"name\": \"Prazskeho povstani\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"14\": {\r\n          \"name\": \"Pankrac\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"15\": {\r\n          \"name\": \"Budejovicka\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"16\": {\r\n          \"name\": \"Kacerov\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"17\": {\r\n          \"name\": \"Roztyly\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"18\": {\r\n          \"name\": \"Chodov\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"19\": {\r\n          \"name\": \"Opatov\" ,\r\n          \"transfer\": []\r\n        } ,\r\n        \"20\": {\r\n          \"name\": \"Haje\" ,\r\n          \"transfer\": []\r\n        }\r\n      }\r\n    }\r\n  learner_created: false\r\n- name: test/lausanne.json\r\n  visible: false\r\n  text: |-\r\n    {\r\n      \"m1\": {\r\n        \"1\": {\r\n          \"name\": \"Renes—Gare\",\r\n          \"transfer\": []\r\n        },\r\n        \"2\": {\r\n          \"name\": \"Epenex\",\r\n          \"transfer\": []\r\n        },\r\n        \"3\": {\r\n          \"name\": \"Crochy\",\r\n          \"transfer\": []\r\n        },\r\n        \"4\": {\r\n          \"name\": \"Cerisaie\",\r\n          \"transfer\": []\r\n        },\r\n        \"5\": {\r\n          \"name\": \"Bassenges\",\r\n          \"transfer\": []\r\n        },\r\n        \"6\": {\r\n          \"name\": \"EPFL\",\r\n          \"transfer\": []\r\n        },\r\n        \"7\": {\r\n          \"name\": \"UNL—Sorge\",\r\n          \"transfer\": []\r\n        },\r\n        \"8\": {\r\n          \"name\": \"Mouline\",\r\n          \"transfer\": []\r\n        },\r\n        \"9\": {\r\n          \"name\": \"UNL—Chemberonne\",\r\n          \"transfer\": []\r\n        },\r\n        \"10\": {\r\n          \"name\": \"Bourdonnette\",\r\n          \"transfer\": []\r\n        },\r\n        \"11\": {\r\n          \"name\": \"Melley\",\r\n          \"transfer\": []\r\n        },\r\n        \"12\": {\r\n          \"name\": \"Provence\",\r\n          \"transfer\": []\r\n        },\r\n        \"13\": {\r\n          \"name\": \"Montelly\",\r\n          \"transfer\": []\r\n        },\r\n        \"14\": {\r\n          \"name\": \"Vigie\",\r\n          \"transfer\": []\r\n        },\r\n        \"15\": {\r\n          \"name\": \"Lausanne—Flon\",\r\n          \"transfer\": []\r\n        }\r\n      },\r\n      \"m2\": {\r\n        \"1\": {\r\n          \"name\": \"Croisettes\",\r\n          \"transfer\": []\r\n        },\r\n        \"2\": {\r\n          \"name\": \"Vennes\",\r\n          \"transfer\": []\r\n        },\r\n        \"3\": {\r\n          \"name\": \"Fourmi\",\r\n          \"transfer\": []\r\n        },\r\n        \"4\": {\r\n          \"name\": \"Sallaz\",\r\n          \"transfer\": []\r\n        },\r\n        \"5\": {\r\n          \"name\": \"CHUV\",\r\n          \"transfer\": []\r\n        },\r\n        \"6\": {\r\n          \"name\": \"Ours\",\r\n          \"transfer\": []\r\n        },\r\n        \"7\": {\r\n          \"name\": \"Riponne M.Bejart\",\r\n          \"transfer\": []\r\n        },\r\n        \"8\": {\r\n          \"name\": \"Bessieres\",\r\n          \"transfer\": []\r\n        },\r\n        \"9\": {\r\n          \"name\": \"Lausanne—Flon\",\r\n          \"transfer\": []\r\n        },\r\n        \"10\": {\r\n          \"name\": \"Lausanne Gare CFF\",\r\n          \"transfer\": []\r\n        },\r\n        \"11\": {\r\n          \"name\": \"Grancy\",\r\n          \"transfer\": []\r\n        },\r\n        \"12\": {\r\n          \"name\": \"Delices\",\r\n          \"transfer\": []\r\n        },\r\n        \"13\": {\r\n          \"name\": \"Jourdils\",\r\n          \"transfer\": []\r\n        },\r\n        \"14\": {\r\n          \"name\": \"Ouchy—Olympique\",\r\n          \"transfer\": []\r\n        }\r\n      }\r\n    }\r\n  learner_created: false\r\n- name: test/baltimore.json\r\n  visible: false\r\n  text: |-\r\n    {\r\n      \"SubwayLink\": {\r\n        \"1\": {\r\n          \"name\": \"Owings Mills\",\r\n          \"transfer\": [],\r\n          \"time\": 2\r\n        },\r\n        \"2\": {\r\n          \"name\": \"Old Court\",\r\n          \"transfer\": [],\r\n          \"time\": 4\r\n        },\r\n        \"3\": {\r\n          \"name\": \"Milford Mill\",\r\n          \"transfer\": [],\r\n          \"time\": 6\r\n        },\r\n        \"4\": {\r\n          \"name\": \"Reiserstown Plaza\",\r\n          \"transfer\": [],\r\n          \"time\": 3\r\n        },\r\n        \"5\": {\r\n          \"name\": \"Rogers Avenue\",\r\n          \"transfer\": [],\r\n          \"time\": 2\r\n        },\r\n        \"6\": {\r\n          \"name\": \"West Cold Spring\",\r\n          \"transfer\": [],\r\n          \"time\": 6\r\n        },\r\n        \"7\": {\r\n          \"name\": \"Mondawmin\",\r\n          \"transfer\": [],\r\n          \"time\": 4\r\n        },\r\n        \"8\": {\r\n          \"name\": \"Penn North\",\r\n          \"transfer\": [],\r\n          \"time\": 5\r\n        },\r\n        \"9\": {\r\n          \"name\": \"Uptown\",\r\n          \"transfer\": [],\r\n          \"time\": 7\r\n        },\r\n        \"10\": {\r\n          \"name\": \"State Center\",\r\n          \"transfer\": [],\r\n          \"time\": 3\r\n        },\r\n        \"11\": {\r\n          \"name\": \"Lexington Market\",\r\n          \"transfer\": [],\r\n          \"time\": 5\r\n        },\r\n        \"12\": {\r\n          \"name\": \"Charles Center\",\r\n          \"transfer\": [],\r\n          \"time\": 6\r\n        },\r\n        \"13\": {\r\n          \"name\": \"Shot Tower/Market Place\",\r\n          \"transfer\": [],\r\n          \"time\": 4\r\n        },\r\n        \"14\": {\r\n          \"name\": \"Johns Hopkins Hospital\",\r\n          \"transfer\": [], \"time\": null\r\n        }\r\n      }\r\n    }\r\n  learner_created: false\r\nfeedback_link: https://hyperskill.org/learn/step/10344#comment\r\nstatus: Unchecked\r\nrecord: -1\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../HyperMetro/HyperMetro/The shortest route/task-info.yaml b/../HyperMetro/HyperMetro/The shortest route/task-info.yaml
--- a/../HyperMetro/HyperMetro/The shortest route/task-info.yaml	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../HyperMetro/HyperMetro/The shortest route/task-info.yaml	(date 1648366593039)
@@ -800,6 +800,1284 @@
       }
     }
   learner_created: false
+- name: src/metro/database/Graph.java
+  visible: true
+  text: |
+    package metro.database;
+
+    import java.util.ArrayList;
+    import java.util.HashMap;
+    import java.util.List;
+    import java.util.Map;
+
+    public class Graph {
+        private Map<Station, List<Edge>> graph;
+
+        private void formatPath(List<Station> path, boolean printDistance) {
+            if (path == null) {
+                System.out.println("No path possible.");
+                return;
+            }
+
+            double distance = 0.0;
+            Station prev = null;
+            for (Station station : path) {
+                if (printDistance && prev != null && prev.getLineName().equals(station.getLineName())) {
+                    Integer time = station.getPrevList().contains(prev) ? prev.getTime() : station.getTime();
+                    distance += time;
+                }
+                if (prev != null && !prev.getLineName().equals(station.getLineName())) {
+                    System.out.println("Transition to line " + station.getLineName());
+                    // as per current specifications, transfer between lines are 5 minutes
+                    if (printDistance) {
+                        distance += 5;
+                    }
+                }
+
+                System.out.println(station.getStationName());
+                prev = station;
+            }
+            if (printDistance) {
+                System.out.println("Total: " + (int) distance + " minutes in the way");
+            }
+        }
+
+        public void findRouteDijkstra(Station fromStation, Station toStation) {
+            populateDijkstraGraph();
+            DijkstrasShortestPath solver = new DijkstrasShortestPath(graph);
+
+            List<Station> path = solver.reconstructPath(fromStation, toStation);
+            formatPath(path, true);
+        }
+
+        private void populateDijkstraGraph() {
+            graph = new HashMap<>();
+            for (Station station : Station.getAllStations().values()) {
+                graph.put(station, new ArrayList<>());
+
+                if (!station.getTransferList().isEmpty()) {
+                    for (Transfer transfer : station.getTransferList()) {
+                        if (station.getStationName().equals(transfer.getStation().getStationName())) {
+                            // as per current specifications, transfer between lines are 5 minutes
+                            addDirectedEdge(station, transfer.getStation(), 5);
+                        } else {
+                            // This case should not be possible as all transfer stations are between same stations on different lines
+                            // Still, this is added to account for the edge case of user calling connect command and then calling route or fastest-route command
+
+                            // The edge will have a weight of station.getTime() as it starts at station
+                            addDirectedEdge(station, transfer.getStation(), station.getTime());
+                        }
+                    }
+                }
+
+                if (!station.getPrevList().isEmpty()) {
+                    for (Station prev : station.getPrevList()) {
+                        // The edge will have a weight of prev.getTime() as it starts at prev
+                        addDirectedEdge(station, prev, prev.getTime());
+                    }
+                }
+
+                if (!station.getNextList().isEmpty()) {
+                    for (Station next : station.getNextList()) {
+                        // The edge will have a weight of station.getTime() as it starts at station
+                        addDirectedEdge(station, next, station.getTime());
+                    }
+                }
+            }
+        }
+
+        public void findRouteBFS(Station fromStation, Station toStation) {
+            populateBFSGraph();
+            BreadthFirstSearch solver = new BreadthFirstSearch(graph);
+
+            List<Station> path = solver.reconstructPath(fromStation, toStation);
+            formatPath(path, false);
+        }
+
+        public void populateBFSGraph() {
+            graph = new HashMap<>();
+            for (Station station : Station.getAllStations().values()) {
+                graph.put(station, new ArrayList<>());
+
+                if (!station.getTransferList().isEmpty()) {
+                    for (Transfer transfer : station.getTransferList()) {
+                        if (station.getStationName().equals(transfer.getStation().getStationName())) {
+                            // transfer between lines is assumed to have 0 cost
+                            addDirectedEdge(station, transfer.getStation(), 0);
+                        } else {
+                            // This case should not be possible as all transfer stations are between same stations on different lines
+                            // Still, this is added to account for the edge case of user calling connect command and then calling route or fastest-route command
+
+                            // The edge will have a weight of 1 as all edges have same weight
+                            addDirectedEdge(station, transfer.getStation(), 1);
+                        }
+                    }
+                }
+
+                if (!station.getPrevList().isEmpty()) {
+                    for (Station prev : station.getPrevList()) {
+                        // The edge will have a weight of 1 as all edges have same weight
+                        addDirectedEdge(station, prev, 1);
+                    }
+                }
+
+                if (!station.getNextList().isEmpty()) {
+                    for (Station next : station.getNextList()) {
+                        // The edge will have a weight of 1 as all edges have same weight
+                        addDirectedEdge(station, next, 1);
+                    }
+                }
+            }
+        }
+
+        // Add a directed weighted edge from station u to station v with weight cost
+        private void addDirectedEdge(Station u, Station v, Integer cost) {
+            graph.get(u).add(new Edge(u, v, cost));
+        }
+    }
+  learner_created: true
+- name: src/metro/commands/OutputCommand.java
+  visible: true
+  text: |
+    package metro.commands;
+
+    import metro.database.Subway;
+
+    public class OutputCommand implements Command {
+        private final String lineName;
+        private final Subway subway;
+
+        public OutputCommand(String lineName, Subway subway) {
+            this.lineName = lineName;
+            this.subway = subway;
+        }
+
+        @Override
+        public void execute() {
+            subway.output(lineName);
+        }
+    }
+  learner_created: true
+- name: src/metro/commands/RouteCommand.java
+  visible: true
+  text: |
+    package metro.commands;
+
+    import metro.database.Subway;
+
+    public class RouteCommand implements Command {
+        private final String line1;
+        private final String station1;
+        private final String line2;
+        private final String station2;
+        private final Subway subway;
+
+        public RouteCommand(String line1, String station1, String line2, String station2, Subway subway) {
+            this.line1 = line1;
+            this.station1 = station1;
+            this.line2 = line2;
+            this.station2 = station2;
+            this.subway = subway;
+        }
+
+        @Override
+        public void execute() {
+            subway.route(line1, station1, line2, station2);
+        }
+    }
+  learner_created: true
+- name: src/metro/commands/AddHeadCommand.java
+  visible: true
+  text: |
+    package metro.commands;
+
+    import metro.database.Subway;
+
+    public class AddHeadCommand implements Command {
+        private final String lineName;
+        private final String stationNameToAdd;
+        private final String nextStationName;
+        private final Integer time;
+        private final Subway subway;
+
+        public AddHeadCommand(String lineName, String stationNameToAppend, String nextStationName, Integer time, Subway subway) {
+            this.lineName = lineName;
+            this.stationNameToAdd = stationNameToAppend;
+            this.nextStationName = nextStationName;
+            this.time = time;
+            this.subway = subway;
+        }
+
+        @Override
+        public void execute() {
+            subway.addHead(lineName, stationNameToAdd, nextStationName, time);
+        }
+    }
+  learner_created: true
+- name: src/metro/commands/FastestRouteCommand.java
+  visible: true
+  text: |
+    package metro.commands;
+
+    import metro.database.Subway;
+
+    public class FastestRouteCommand implements Command {
+        private final String line1;
+        private final String station1;
+        private final String line2;
+        private final String station2;
+        private final Subway subway;
+
+        public FastestRouteCommand(String line1, String station1, String line2, String station2, Subway subway) {
+            this.line1 = line1;
+            this.station1 = station1;
+            this.line2 = line2;
+            this.station2 = station2;
+            this.subway = subway;
+        }
+
+        @Override
+        public void execute() {
+            subway.fastestRoute(line1, station1, line2, station2);
+        }
+    }
+  learner_created: true
+- name: src/metro/database/Station.java
+  visible: true
+  text: |
+    package metro.database;
+
+    import java.util.ArrayList;
+    import java.util.HashMap;
+    import java.util.List;
+    import java.util.Map;
+
+    public class Station {
+        private static final Map<String, Station> allStations = new HashMap<>();
+        private final String stationName;
+        private final String lineName;
+        private final List<Transfer> transferList;
+        private Integer time;
+        private List<Station> prevList;
+        private List<Station> nextList;
+
+        public Station(String stationName, String lineName, Integer time) {
+            this.stationName = stationName;
+            this.lineName = lineName;
+            this.time = time;
+            this.prevList = new ArrayList<>();
+            this.nextList = new ArrayList<>();
+            this.transferList = new ArrayList<>();
+        }
+
+        // key for allStations map will be "stationName^lineName"
+        public static Station getInstance(String stationName, String lineName, Integer time) {
+            String key = stationName + "^" + lineName;
+            Station station = allStations.get(key);
+
+            if (station == null) {
+                station = new Station(stationName, lineName, time);
+                allStations.put(key, station);
+            }
+            return station;
+        }
+
+        // key for allStations map will be "stationName^lineName"
+        public static Station checkInstance(String stationName, String lineName) {
+            String key = stationName + "^" + lineName;
+            return allStations.get(key);
+        }
+
+        public static Map<String, Station> getAllStations() {
+            return allStations;
+        }
+
+        public static void deleteStation(String stationName, String lineName) {
+            String key = stationName + "^" + lineName;
+            allStations.remove(key);
+        }
+
+        public static void deleteStation(Station station) {
+            deleteStation(station.getStationName(), station.getLineName());
+        }
+
+        public void addPrevious(Station station) {
+            prevList.add(station);
+        }
+
+        public void addNext(Station station) {
+            nextList.add(station);
+        }
+
+        public List<Station> getPrevList() {
+            return prevList;
+        }
+
+        public void setPrevList(List<Station> prevList) {
+            this.prevList = prevList;
+        }
+
+        public List<Station> getNextList() {
+            return nextList;
+        }
+
+        public void setNextList(List<Station> nextList) {
+            this.nextList = nextList;
+        }
+
+        @Override
+        public String toString() {
+            StringBuilder sb = new StringBuilder();
+            sb.append(this.stationName);
+            for (Transfer t : transferList) {
+                sb.append(" - ").append(t);
+            }
+            return sb.toString();
+        }
+
+        public String getStationName() {
+            return stationName;
+        }
+
+        public String getLineName() {
+            return lineName;
+        }
+
+        public List<Transfer> getTransferList() {
+            return transferList;
+        }
+
+        public void addTransfer(Transfer transfer) {
+            transferList.add(transfer);
+        }
+
+        public void deleteTransfer(Station station) {
+            transferList.removeIf(transfer -> transfer.getStation() == station);
+        }
+
+        public Integer getTime() {
+            return time;
+        }
+
+        public void setTime(Integer time) {
+            this.time = time;
+        }
+    }
+  learner_created: true
+- name: src/metro/database/Line.java
+  visible: true
+  text: |
+    package metro.database;
+
+    import java.util.ArrayList;
+    import java.util.List;
+
+    public class Line {
+        private final String lineName;
+        private final List<Station> startStationsList;
+        private final List<Station> endStationsList;
+
+        public Line(String lineName) {
+            this.lineName = lineName;
+            startStationsList = new ArrayList<>();
+            endStationsList = new ArrayList<>();
+        }
+
+        public void addStartStation(Station station) {
+            startStationsList.add(station);
+        }
+
+        public void addEndStation(Station station) {
+            endStationsList.add(station);
+        }
+
+        public boolean append(String stationNameToAppend, String prevStationName, Integer time) {
+            Station prevStation = Station.checkInstance(prevStationName, lineName);
+            if (prevStation == null) {
+                return false;
+            }
+
+            Station stationToAppend = Station.getInstance(stationNameToAppend, lineName, null);
+            endStationsList.remove(prevStation);
+            endStationsList.add(stationToAppend);
+            prevStation.addNext(stationToAppend);
+            prevStation.setTime(time);
+            stationToAppend.addPrevious(prevStation);
+            return true;
+        }
+
+        public boolean addHead(String stationNameToAdd, String nextStationName, Integer time) {
+            Station nextStation = Station.checkInstance(nextStationName, lineName);
+            if (nextStation == null) {
+                return false;
+            }
+
+            Station stationToAdd = Station.getInstance(stationNameToAdd, lineName, time);
+            startStationsList.remove(nextStation);
+            startStationsList.add(stationToAdd);
+            nextStation.addPrevious(stationToAdd);
+            stationToAdd.addNext(nextStation);
+            return true;
+        }
+
+        public boolean remove(String stationName) {
+            boolean removed = false;
+            for (Station startStation : startStationsList) {
+                removed = removed || remove(startStation, stationName);
+            }
+            return removed;
+        }
+
+        private boolean remove(Station currentStation, String stationNameToRemove) {
+            if (currentStation.getStationName().equals(stationNameToRemove)) {
+                remove(currentStation);
+                return true;
+            }
+
+            for (Station next : currentStation.getNextList()) {
+                if (remove(next, stationNameToRemove)) {
+                    return true;
+                }
+            }
+            return false;
+        }
+
+        private void remove(Station stationToRemove) {
+            if (stationToRemove.getPrevList() == null) {
+                removeFirst(stationToRemove);
+                return;
+            }
+            if (stationToRemove.getNextList() == null) {
+                removeLast(stationToRemove);
+                return;
+            }
+
+            for (Station next : stationToRemove.getNextList()) {
+                next.setPrevList(stationToRemove.getPrevList());
+            }
+
+            for (Station prev : stationToRemove.getPrevList()) {
+                prev.setNextList(stationToRemove.getNextList());
+            }
+
+            if (stationToRemove.getTransferList() != null) {
+                for (Transfer transfer : stationToRemove.getTransferList()) {
+                    transfer.getStation().deleteTransfer(stationToRemove);
+                }
+            }
+
+            Station.deleteStation(stationToRemove);
+        }
+
+        private void removeFirst(Station stationToRemove) {
+            startStationsList.remove(stationToRemove);
+
+            if (stationToRemove.getNextList() == null) {
+                endStationsList.remove(stationToRemove);
+            } else {
+                startStationsList.addAll(stationToRemove.getNextList());
+                for (Station next : stationToRemove.getNextList()) {
+                    next.setPrevList(new ArrayList<>());
+                }
+            }
+
+            Station.deleteStation(stationToRemove);
+        }
+
+        private void removeLast(Station stationToRemove) {
+            endStationsList.remove(stationToRemove);
+
+            if (stationToRemove.getPrevList() == null) {
+                startStationsList.remove(stationToRemove);
+            } else {
+                endStationsList.addAll(stationToRemove.getPrevList());
+                for (Station prev : stationToRemove.getPrevList()) {
+                    prev.setNextList(new ArrayList<>());
+                }
+            }
+        }
+
+        // TODO: 13-02-2022 does not work for looped lines
+        public void output() {
+            for (Station s : startStationsList) {
+                System.out.println(s);
+                for (Station n : s.getNextList()) {
+                    print(n);
+                }
+                System.out.println("----------------");
+                System.out.println("----------------");
+            }
+        }
+
+        private void print(Station station) {
+            if (startStationsList.contains(station)) {
+                return;
+            }
+            System.out.println(station);
+            for (Station s : station.getNextList()) {
+                print(s);
+            }
+        }
+    }
+  learner_created: true
+- name: src/metro/commands/AppendCommand.java
+  visible: true
+  text: |
+    package metro.commands;
+
+    import metro.database.Subway;
+
+    public class AppendCommand implements Command {
+        private final String lineName;
+        private final String stationNameToAppend;
+        private final String prevStationName;
+        private final Integer time;
+        private final Subway subway;
+
+        public AppendCommand(String lineName, String stationNameToAppend, String prevStationName, Integer time, Subway subway) {
+            this.lineName = lineName;
+            this.stationNameToAppend = stationNameToAppend;
+            this.prevStationName = prevStationName;
+            this.time = time;
+            this.subway = subway;
+        }
+
+        @Override
+        public void execute() {
+            subway.append(lineName, stationNameToAppend, prevStationName, time);
+        }
+    }
+  learner_created: true
+- name: src/metro/database/BreadthFirstSearch.java
+  visible: true
+  text: |+
+    package metro.database;
+
+    import java.util.*;
+
+    public class BreadthFirstSearch {
+        private final Map<Station, List<Edge>> graph;
+
+        public BreadthFirstSearch(Map<Station, List<Edge>> graph) {
+            if (graph == null) {
+                throw new IllegalArgumentException("Graph cannot be null");
+            }
+            this.graph = graph;
+        }
+
+        public List<Station> reconstructPath(Station fromStation, Station toStation) {
+            Map<Station, Station> prev = new HashMap<>();
+            bfs(fromStation, prev);
+            List<Station> path = new ArrayList<>();
+
+            Station at = toStation;
+            path.add(at);
+            while (prev.get(at) != null) {
+                path.add(prev.get(at));
+                at = prev.get(at);
+            }
+
+            Collections.reverse(path);
+            if (path.get(0) == fromStation) {
+                return path;
+            }
+            path.clear();
+            return path;
+        }
+
+        private void bfs(Station fromStation, Map<Station, Station> prev) {
+            Map<Station, Boolean> visited = new HashMap<>();
+            for (Station s : graph.keySet()) {
+                visited.put(s, false);
+            }
+            Queue<Station> queue = new ArrayDeque<>();
+
+            queue.offer(fromStation);
+            visited.replace(fromStation, true);
+
+            while (!queue.isEmpty()) {
+                Station station = queue.poll();
+                List<Edge> edges = graph.get(station);
+
+                // Loop through all edges
+                for (Edge edge : edges) {
+                    if (!visited.get(edge.getToStation())) {
+                        visited.put(edge.getToStation(), true);
+                        prev.put(edge.getToStation(), station);
+                        queue.offer(edge.getToStation());
+                    }
+                }
+            }
+        }
+    }
+
+  learner_created: true
+- name: src/metro/database/Transfer.java
+  visible: true
+  text: |
+    package metro.database;
+
+    public class Transfer {
+        private final Station station;
+
+        public Transfer(Station station) {
+            this.station = station;
+        }
+
+        @Override
+        public String toString() {
+            return String.format("%s (%s)",
+                    station.getStationName(), station.getLineName());
+        }
+
+        public Station getStation() {
+            return station;
+        }
+    }
+  learner_created: true
+- name: src/metro/commands/Controller.java
+  visible: true
+  text: |
+    package metro.commands;
+
+    public class Controller {
+        private Command command;
+
+        public void setCommand(Command command) {
+            this.command = command;
+        }
+
+        public void executeCommand() {
+            command.execute();
+        }
+    }
+  learner_created: true
+- name: src/metro/database/Edge.java
+  visible: true
+  text: |-
+    package metro.database;
+
+    public class Edge {
+        private final Station fromStation;
+        private final Station toStation;
+        private final Integer cost;
+
+        public Edge(Station fromStation, Station toStation, Integer cost) {
+            this.fromStation = fromStation;
+            this.toStation = toStation;
+            this.cost = cost;
+        }
+
+        public Station getToStation() {
+            return toStation;
+        }
+
+        public Integer getCost() {
+            return cost;
+        }
+    }
+  learner_created: true
+- name: src/metro/database/Subway.java
+  visible: true
+  text: |
+    package metro.database;
+
+    import java.util.HashMap;
+    import java.util.Map;
+
+    public class Subway {
+        private final String inputFile;
+        private final Map<String, Line> allLines;
+
+        public Subway(String inputFile) {
+            this.inputFile = inputFile;
+            this.allLines = new HashMap<>();
+        }
+
+        public boolean populateMap() {
+            return ReadSubwayData.readFromFile(inputFile, allLines);
+        }
+
+        public void fastestRoute(String lineName1, String stationName1, String lineName2, String stationName2) {
+            Station fromStation = Station.checkInstance(stationName1, lineName1);
+            Station toStation = Station.checkInstance(stationName2, lineName2);
+            if (fromStation == null || toStation == null) {
+                System.out.println("Invalid command. Wrong station or line names.");
+                return;
+            }
+
+            Graph graph = new Graph();
+            graph.findRouteDijkstra(fromStation, toStation);
+        }
+
+        public void route(String lineName1, String stationName1, String lineName2, String stationName2) {
+            Station fromStation = Station.checkInstance(stationName1, lineName1);
+            Station toStation = Station.checkInstance(stationName2, lineName2);
+            if (fromStation == null || toStation == null) {
+                System.out.println("Invalid command. Wrong station or line names.");
+                return;
+            }
+
+            Graph graph = new Graph();
+            graph.findRouteBFS(fromStation, toStation);
+        }
+
+        public void connect(String lineName1, String stationName1, String lineName2, String stationName2) {
+            Station station1 = Station.checkInstance(stationName1, lineName1);
+            Station station2 = Station.checkInstance(stationName2, lineName2);
+            if (station1 == null || station2 == null) {
+                System.out.println("Invalid command. Wrong station or line names.");
+                return;
+            }
+
+            station1.addTransfer(new Transfer(station2));
+            station2.addTransfer(new Transfer(station1));
+        }
+
+        public void append(String lineName, String stationNameToAppend, String prevStationName, Integer time) {
+            Line line = allLines.get(lineName);
+
+            if (line != null) {
+                boolean append = line.append(stationNameToAppend, prevStationName, time);
+                if (!append) {
+                    System.out.println("Invalid command. Wrong station name.");
+                }
+            } else {
+                System.out.println("Invalid command. Wrong line name.");
+            }
+        }
+
+        public void addHead(String lineName, String stationNameToAdd, String nextStationName, Integer time) {
+            Line line = allLines.get(lineName);
+
+            if (line != null) {
+                boolean added = line.addHead(stationNameToAdd, nextStationName, time);
+                if (!added) {
+                    System.out.println("Invalid command. Wrong station name.");
+                }
+            } else {
+                System.out.println("Invalid command. Wrong line name.");
+            }
+        }
+
+        public void remove(String lineName, String stationName) {
+            Line line = allLines.get(lineName);
+
+            if (line != null) {
+                boolean removed = line.remove(stationName);
+                if (!removed) {
+                    System.out.println("Invalid command. Wrong station name.");
+                }
+            } else {
+                System.out.println("Invalid command. Wrong line name.");
+            }
+        }
+
+        // does not work for looped lines
+        public void output(String lineName) {
+            Line line = allLines.get(lineName);
+
+            if (line != null) {
+                line.output();
+            } else {
+                System.out.println("Invalid command. Wrong line name.");
+            }
+        }
+    }
+  learner_created: true
+- name: src/metro/commands/Command.java
+  visible: true
+  text: |
+    package metro.commands;
+
+    public interface Command {
+        void execute();
+    }
+  learner_created: true
+- name: src/metro/commands/RemoveCommand.java
+  visible: true
+  text: |
+    package metro.commands;
+
+    import metro.database.Subway;
+
+    public class RemoveCommand implements Command {
+        private final String lineName;
+        private final String stationName;
+        private final Subway subway;
+
+        public RemoveCommand(String lineName, String stationName, Subway subway) {
+            this.lineName = lineName;
+            this.stationName = stationName;
+            this.subway = subway;
+        }
+
+        @Override
+        public void execute() {
+            subway.remove(lineName, stationName);
+        }
+    }
+  learner_created: true
+- name: src/metro/database/DijkstrasShortestPath.java
+  visible: true
+  text: |
+    package metro.database;
+
+    import java.util.*;
+
+    public class DijkstrasShortestPath {
+        // Small epsilon value to compare double values
+        private static final double EPS = 1e-6;
+        private final Map<Station, List<Edge>> graph;
+        private final Comparator<Node> comparator = (node1, node2) -> {
+            if (Math.abs(node1.value - node2.value) < EPS) {
+                return 0;
+            }
+            return (node1.value - node2.value) > 0 ? 1 : -1;
+        };
+
+        public DijkstrasShortestPath(Map<Station, List<Edge>> graph) {
+            if (graph == null) {
+                throw new IllegalArgumentException("Graph cannot be null");
+            }
+            this.graph = graph;
+        }
+
+        public List<Station> reconstructPath(Station fromStation, Station toStation) {
+            Map<Station, Station> prev = new HashMap<>();
+            int n = graph.size();
+            Map<Station, Double> dist = new HashMap<>();
+            for (Station s : graph.keySet()) {
+                dist.put(s, Double.POSITIVE_INFINITY);
+            }
+
+            dijkstra(fromStation, dist, prev);
+            List<Station> path = new ArrayList<>();
+            Station at = toStation;
+            path.add(at);
+            while (prev.get(at) != null) {
+                path.add(prev.get(at));
+                at = prev.get(at);
+            }
+
+            Collections.reverse(path);
+            if (path.get(0) == fromStation) {
+                return path;
+            }
+            path.clear();
+            return path;
+        }
+
+        public void dijkstra(Station fromStation, Map<Station, Double> dist, Map<Station, Station> prev) {
+            dist.put(fromStation, 0.0);
+
+            // Keep a priority queue of the next most promising node to visit
+            PriorityQueue<Node> pq = new PriorityQueue<>(comparator);
+            pq.offer(new Node(fromStation, 0));
+
+            Map<Station, Boolean> visited = new HashMap<>();
+            for (Station s : graph.keySet()) {
+                visited.put(s, false);
+            }
+            visited.replace(fromStation, true);
+
+            while (!pq.isEmpty()) {
+                Node node = pq.poll();
+                visited.put(node.station, true);
+
+                // Ignore the outdated pairs where we already found a better path routing through other nodes
+                if (dist.get(node.station) < node.value) {
+                    continue;
+                }
+
+                List<Edge> edges = graph.get(node.station);
+                for (Edge edge : edges) {
+                    if (visited.get(edge.getToStation())) {
+                        continue;
+                    }
+
+                    // Relax edge by updating minimum cost if possible
+                    double newDist = dist.get(node.station) + edge.getCost();
+                    if (newDist < dist.get(edge.getToStation())) {
+                        prev.put(edge.getToStation(), node.station);
+                        dist.put(edge.getToStation(), newDist);
+                        pq.offer(new Node(edge.getToStation(), dist.get(edge.getToStation())));
+                    }
+                }
+            }
+        }
+
+        // Node class to track the nodes to visit
+        static class Node {
+            Station station;
+            double value;
+
+            public Node(Station station, double value) {
+                this.station = station;
+                this.value = value;
+            }
+        }
+    }
+  learner_created: true
+- name: src/metro/reserv/Main.java
+  visible: true
+  text: |
+    //package metro;
+    //
+    //import metro.commands.*;
+    //import metro.database.Subway;
+    //
+    //import java.util.Scanner;
+    //
+    //public class Main {
+    //    public static void main(String[] args) {
+    //        String filePath = args[0];
+    //        Subway subway = new Subway(filePath);
+    //        boolean read = subway.populateMap();
+    //        if (!read) {
+    //            return;
+    //        }
+    //
+    //        Scanner scanner = new Scanner(System.in);
+    //        Controller controller = new Controller();
+    //        Command command;
+    //
+    //        while (true) {
+    //            String input = scanner.nextLine();
+    //            if (input.equals("/exit")) {
+    //                break;
+    //            }
+    //            String[] arr = input.split(" ", 2);
+    //            if (arr.length == 1) {
+    //                System.out.println("Invalid command. Input should have action and arguments.");
+    //                continue;
+    //            }
+    //
+    //            InputParser parser = new InputParser(arr[0], arr[1]);
+    //            int time;
+    //
+    //            switch (parser.action) {
+    //                case "/append":
+    //                    // user input string should be "/append lineName stationNameToAppend prevStationName time"
+    //
+    //                    if (parser.arg1 == null || parser.arg2 == null) {
+    //                        System.out.println("Invalid command. Line name or station name to append are null.");
+    //                        continue;
+    //                    }
+    //                    if (parser.arg3 == null || parser.arg4 == null) {
+    //                        System.out.println("Invalid command. Previous station name or time is null");
+    //                        continue;
+    //                    }
+    //                    try {
+    //                        time = Integer.parseInt(parser.arg4);
+    //                    } catch (NumberFormatException e) {
+    //                        System.out.println("Invalid command. Time field should be integer");
+    //                        continue;
+    //                    }
+    //
+    //                    command = new AppendCommand(parser.arg1, parser.arg2, parser.arg3, time, subway);
+    //                    break;
+    //
+    //                case "/add-head":
+    //                    // user input string should be "/add-head lineName stationNameToAdd nextStationName time"
+    //
+    //                    if (parser.arg1 == null || parser.arg2 == null) {
+    //                        System.out.println("Invalid command. Line name or station name to add are null.");
+    //                        continue;
+    //                    }
+    //                    if (parser.arg3 == null || parser.arg4 == null) {
+    //                        System.out.println("Invalid command. Next station name or time is null");
+    //                        continue;
+    //                    }
+    //                    try {
+    //                        time = Integer.parseInt(parser.arg4);
+    //                    } catch (NumberFormatException e) {
+    //                        System.out.println("Invalid command. Time field should be integer");
+    //                        continue;
+    //                    }
+    //
+    //                    command = new AddHeadCommand(parser.arg1, parser.arg2, parser.arg3, time, subway);
+    //                    break;
+    //
+    //                case "/remove":
+    //                    // user input string should be "/remove lineName stationName"
+    //
+    //                    if (parser.arg1 == null || parser.arg2 == null) {
+    //                        System.out.println("Invalid command. Line or station are null.");
+    //                        continue;
+    //                    }
+    //
+    //                    command = new RemoveCommand(parser.arg1, parser.arg2, subway);
+    //                    break;
+    //
+    //                case "/output":
+    //                    // user input string should be "/output lineName"
+    //
+    //                    // does not work for looped lines
+    //
+    //                    if (parser.arg1 == null) {
+    //                        System.out.println("Invalid command. Line name is null.");
+    //                        continue;
+    //                    }
+    //
+    //                    command = new OutputCommand(parser.arg1, subway);
+    //                    break;
+    //
+    //                case "/connect":
+    //                    // user input string should be "/connect lineName1 stationName1 lineName2 stationName2"
+    //
+    //                    if (parser.arg1 == null || parser.arg2 == null) {
+    //                        System.out.println("Invalid command. Line or station are null.");
+    //                        continue;
+    //                    }
+    //                    if (parser.arg3 == null || parser.arg4 == null) {
+    //                        System.out.println("Invalid command. Second line or station are null.");
+    //                        continue;
+    //                    }
+    //
+    //                    command = new ConnectCommand(parser.arg1, parser.arg2, parser.arg3, parser.arg4, subway);
+    //                    break;
+    //
+    //                case "/route":
+    //                    // user input string should be "/route lineName1 stationName1 lineName2 stationName2"
+    //
+    //                    if (parser.arg1 == null || parser.arg2 == null) {
+    //                        System.out.println("Invalid command. Line or station are null.");
+    //                        continue;
+    //                    }
+    //                    if (parser.arg3 == null || parser.arg4 == null) {
+    //                        System.out.println("Invalid command. Second line or station are null.");
+    //                        continue;
+    //                    }
+    //                    command = new RouteCommand(parser.arg1, parser.arg2, parser.arg3, parser.arg4, subway);
+    //                    break;
+    //
+    //                case "/fastest-route":
+    //                    // user input string should be "/fastest-route lineName1 stationName1 lineName2 stationName2"
+    //
+    //                    if (parser.arg1 == null || parser.arg2 == null) {
+    //                        System.out.println("Invalid command. Line or station are null.");
+    //                        continue;
+    //                    }
+    //                    if (parser.arg3 == null || parser.arg4 == null) {
+    //                        System.out.println("Invalid command. Second line or station are null.");
+    //                        continue;
+    //                    }
+    //
+    //                    command = new FastestRouteCommand(parser.arg1, parser.arg2, parser.arg3, parser.arg4, subway);
+    //                    break;
+    //
+    //                default:
+    //                    System.out.println("Invalid command. Command type is not valid.");
+    //                    continue;
+    //            }
+    //
+    //            controller.setCommand(command);
+    //            controller.executeCommand();
+    //        }
+    //    }
+    //}
+  learner_created: true
+- name: src/metro/database/ReadSubwayData.java
+  visible: true
+  text: |
+    package metro.database;
+
+    import com.google.gson.JsonArray;
+    import com.google.gson.JsonElement;
+    import com.google.gson.JsonObject;
+    import com.google.gson.JsonParser;
+
+    import java.io.File;
+    import java.io.IOException;
+    import java.io.Reader;
+    import java.nio.file.Files;
+    import java.nio.file.Path;
+    import java.util.Map;
+    import java.util.Set;
+
+    public class ReadSubwayData {
+        public static boolean readFromFile(String inputFile, Map<String, Line> allLines) {
+            if (!isFileFormatCorrect(inputFile)) {
+                return false;
+            }
+
+            JsonObject jsonObject;
+            try (Reader reader = Files.newBufferedReader(Path.of(inputFile))) {
+                jsonObject = JsonParser.parseReader(reader).getAsJsonObject();
+            } catch (IOException e) {
+                System.out.println("Error! Such a file doesn't exist!");
+                return false;
+            }
+
+            fillMap(jsonObject, allLines);
+            return true;
+        }
+
+        private static boolean isFileFormatCorrect(String inputFile) {
+            String fileName = new File(inputFile).getName();
+            int dotIndex = fileName.lastIndexOf('.');
+            if (dotIndex == -1) {
+                System.out.println("Error! Incorrect file!");
+                return false;
+            } else if (!fileName.substring(dotIndex + 1).equals("json")) {
+                System.out.println("Error! Incorrect file!");
+                return false;
+            }
+            return true;
+        }
+
+        private static void fillMap(JsonObject jsonObject, Map<String, Line> allLines) {
+            Set<Map.Entry<String, JsonElement>> entrySet = jsonObject.entrySet();
+
+            // create stations first
+            for (Map.Entry<String, JsonElement> entry : entrySet) {
+                String lineName = entry.getKey();
+                JsonArray lineJsonArray = entry.getValue().getAsJsonArray();
+
+                for (int i = 0; i < lineJsonArray.size(); i++) {
+                    JsonObject stationJsonObject = lineJsonArray.get(i).getAsJsonObject();
+                    String stationName = stationJsonObject.get("name").getAsString();
+                    Integer time = null;
+                    if (stationJsonObject.has("time")) {
+                        time = stationJsonObject.get("time").getAsInt();
+                    }
+                    Station station = Station.getInstance(stationName, lineName, time);
+                }
+            }
+
+            // now add transfers, prev, next stations
+            // also create Line objects and add start, end stations
+            for (Map.Entry<String, JsonElement> entry : entrySet) {
+                String lineName = entry.getKey();
+                Line line = new Line(lineName);
+                allLines.put(lineName, line);
+                JsonArray lineJsonArray = entry.getValue().getAsJsonArray();
+
+                for (int i = 0; i < lineJsonArray.size(); i++) {
+                    JsonObject stationJsonObject = lineJsonArray.get(i).getAsJsonObject();
+                    String stationName = stationJsonObject.get("name").getAsString();
+                    Station station = Station.checkInstance(stationName, lineName);
+
+                    JsonArray transferJsonArray = stationJsonObject.get("transfer").getAsJsonArray();
+                    if (!transferJsonArray.isEmpty()) {
+                        for (int j = 0; j < transferJsonArray.size(); j++) {
+                            JsonObject transfer = transferJsonArray.get(j).getAsJsonObject();
+                            Station transferStation = Station.checkInstance(transfer.get("station").getAsString(), transfer.get("line").getAsString());
+                            station.addTransfer(new Transfer(transferStation));
+                        }
+                    }
+
+                    JsonArray prevJsonArray = stationJsonObject.get("prev").getAsJsonArray();
+                    if (!prevJsonArray.isEmpty()) {
+                        for (int k = 0; k < prevJsonArray.size(); k++) {
+                            String prevStationName = prevJsonArray.get(k).getAsString();
+                            Station prevStation = Station.checkInstance(prevStationName, lineName);
+                            station.addPrevious(prevStation);
+                        }
+                    } else {
+                        line.addStartStation(station);
+                    }
+
+                    JsonArray nextJsonArray = stationJsonObject.get("next").getAsJsonArray();
+                    if (!nextJsonArray.isEmpty()) {
+                        for (int k = 0; k < nextJsonArray.size(); k++) {
+                            String nextStationName = nextJsonArray.get(k).getAsString();
+                            Station nextStation = Station.checkInstance(nextStationName, lineName);
+                            station.addNext(nextStation);
+                        }
+                    } else {
+                        line.addEndStation(station);
+                    }
+                }
+            }
+        }
+    }
+  learner_created: true
+- name: src/metro/reserv/InputParser.java
+  visible: true
+  text: |-
+    package metro.reserv;
+
+    import java.util.regex.Matcher;
+    import java.util.regex.Pattern;
+
+    public class InputParser {
+        static final String singleWord = "[\\w\\.&-]+";
+        static final String quotesSingleWord = String.format("\"%s\"", singleWord);
+        static final String quotesManyWords = String.format("\"[%s\\s]+%s\"", singleWord, singleWord);
+        static final String name = String.format("(%s|%s|%s)", singleWord, quotesSingleWord, quotesManyWords);
+        static Pattern namePattern = Pattern.compile(name);
+        static Pattern quotePattern = Pattern.compile("\"");
+        public String action;
+        public String arg1;
+        public String arg2;
+        public String arg3;
+        public String arg4;
+
+        public InputParser(String first, String second) {
+            parseInput(first, second);
+        }
+
+        public void parseInput(String first, String second) {
+            action = first;
+            Matcher matcher = namePattern.matcher(second);
+            if (matcher.find()) {
+                arg1 = matcher.group();
+                arg1 = quotePattern.matcher(arg1).replaceAll("");
+            }
+            if (matcher.find()) {
+                arg2 = matcher.group();
+                arg2 = quotePattern.matcher(arg2).replaceAll("");
+            }
+            if (matcher.find()) {
+                arg3 = matcher.group();
+                arg3 = quotePattern.matcher(arg3).replaceAll("");
+            }
+            if (matcher.find()) {
+                arg4 = matcher.group();
+                arg4 = quotePattern.matcher(arg4).replaceAll("");
+            }
+        }
+    }
+  learner_created: true
+- name: src/metro/commands/ConnectCommand.java
+  visible: true
+  text: |
+    package metro.commands;
+
+    import metro.database.Subway;
+
+    public class ConnectCommand implements Command {
+        private final String line1;
+        private final String station1;
+        private final String line2;
+        private final String station2;
+        private final Subway subway;
+
+        public ConnectCommand(String line1, String station1, String line2, String station2, Subway subway) {
+            this.line1 = line1;
+            this.station1 = station1;
+            this.line2 = line2;
+            this.station2 = station2;
+            this.subway = subway;
+        }
+
+        @Override
+        public void execute() {
+            subway.connect(line1, station1, line2, station2);
+        }
+    }
+  learner_created: true
+- name: src/metro/metroNetreader.java
+  visible: true
+  learner_created: true
+- name: src/metro/Controller.java
+  visible: true
+  learner_created: true
 feedback_link: https://hyperskill.org/learn/step/10344#comment
-status: Unchecked
-record: -1
+status: Solved
+feedback:
+  message: Congratulations!
+  time: Sun, 27 Mar 2022 07:36:26 UTC
+record: 4
Index: .idea/modules/Web Quiz Engine/task/Web_Quiz_Engine.Web_Quiz_Engine-task.main.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules/Web Quiz Engine/task/Web_Quiz_Engine.Web_Quiz_Engine-task.main.iml b/.idea/modules/Web Quiz Engine/task/Web_Quiz_Engine.Web_Quiz_Engine-task.main.iml
new file mode 100644
--- /dev/null	(date 1649333971288)
+++ b/.idea/modules/Web Quiz Engine/task/Web_Quiz_Engine.Web_Quiz_Engine-task.main.iml	(date 1649333971288)
@@ -0,0 +1,87 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module external.linked.project.id=":Web_Quiz_Engine-task:main" external.linked.project.path="$MODULE_DIR$/../../../../Web Quiz Engine/task" external.root.project.path="$MODULE_DIR$/../../../.." external.system.id="GRADLE" external.system.module.group="Web Quiz Engine" external.system.module.type="sourceSet" external.system.module.version="unspecified" type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_11">
+    <output url="file://$MODULE_DIR$/../../../../Web Quiz Engine/task/out/production/classes" />
+    <exclude-output />
+    <content url="file://$MODULE_DIR$/../../../../Web Quiz Engine/task/src">
+      <sourceFolder url="file://$MODULE_DIR$/../../../../Web Quiz Engine/task/src" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/../../../../Web Quiz Engine/task/src/resources" type="java-resource" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" name="Gradle: org.springframework.boot:spring-boot-starter-actuator:2.5.6" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework.boot:spring-boot-starter-web:2.5.6" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework.boot:spring-boot-starter-validation:2.5.6" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework.boot:spring-boot-starter-security:2.5.6" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework.boot:spring-boot-starter-data-jpa:2.5.6" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework.boot:spring-boot-starter:2.5.6" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework.boot:spring-boot-actuator-autoconfigure:2.5.6" level="project" />
+    <orderEntry type="library" name="Gradle: io.micrometer:micrometer-core:1.7.5" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework.boot:spring-boot-starter-json:2.5.6" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework.boot:spring-boot-starter-tomcat:2.5.6" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework:spring-webmvc:5.3.12" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework:spring-web:5.3.12" level="project" />
+    <orderEntry type="library" name="Gradle: org.apache.tomcat.embed:tomcat-embed-el:9.0.54" level="project" />
+    <orderEntry type="library" name="Gradle: org.hibernate.validator:hibernate-validator:6.2.0.Final" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework.security:spring-security-web:5.5.3" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework.security:spring-security-config:5.5.3" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework:spring-aop:5.3.12" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework.boot:spring-boot-starter-aop:2.5.6" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework.boot:spring-boot-starter-jdbc:2.5.6" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework.data:spring-data-jpa:2.5.6" level="project" />
+    <orderEntry type="library" name="Gradle: jakarta.transaction:jakarta.transaction-api:1.3.3" level="project" />
+    <orderEntry type="library" name="Gradle: jakarta.persistence:jakarta.persistence-api:2.2.3" level="project" />
+    <orderEntry type="library" name="Gradle: org.hibernate:hibernate-core:5.4.32.Final" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework:spring-aspects:5.3.12" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework.boot:spring-boot-autoconfigure:2.5.6" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework.boot:spring-boot:2.5.6" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework.boot:spring-boot-starter-logging:2.5.6" level="project" />
+    <orderEntry type="library" name="Gradle: jakarta.annotation:jakarta.annotation-api:1.3.5" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework:spring-core:5.3.12" level="project" />
+    <orderEntry type="library" name="Gradle: org.yaml:snakeyaml:1.28" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework.boot:spring-boot-actuator:2.5.6" level="project" />
+    <orderEntry type="library" name="Gradle: org.hdrhistogram:HdrHistogram:2.1.12" level="project" />
+    <orderEntry type="library" name="Gradle: com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.12.5" level="project" />
+    <orderEntry type="library" name="Gradle: com.fasterxml.jackson.module:jackson-module-parameter-names:2.12.5" level="project" />
+    <orderEntry type="library" name="Gradle: com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.12.5" level="project" />
+    <orderEntry type="library" name="Gradle: com.fasterxml.jackson.core:jackson-databind:2.12.5" level="project" />
+    <orderEntry type="library" name="Gradle: org.apache.tomcat.embed:tomcat-embed-websocket:9.0.54" level="project" />
+    <orderEntry type="library" name="Gradle: org.apache.tomcat.embed:tomcat-embed-core:9.0.54" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework:spring-context:5.3.12" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework:spring-beans:5.3.12" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework:spring-expression:5.3.12" level="project" />
+    <orderEntry type="library" name="Gradle: jakarta.validation:jakarta.validation-api:2.0.2" level="project" />
+    <orderEntry type="library" name="Gradle: org.jboss.logging:jboss-logging:3.4.2.Final" level="project" />
+    <orderEntry type="library" name="Gradle: com.fasterxml:classmate:1.5.1" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework.security:spring-security-core:5.5.3" level="project" />
+    <orderEntry type="library" name="Gradle: org.aspectj:aspectjweaver:1.9.7" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework:spring-jdbc:5.3.12" level="project" />
+    <orderEntry type="library" name="Gradle: com.zaxxer:HikariCP:4.0.3" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework:spring-orm:5.3.12" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework.data:spring-data-commons:2.5.6" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework:spring-tx:5.3.12" level="project" />
+    <orderEntry type="library" name="Gradle: org.slf4j:slf4j-api:1.7.32" level="project" />
+    <orderEntry type="library" name="Gradle: org.hibernate.common:hibernate-commons-annotations:5.1.2.Final" level="project" />
+    <orderEntry type="library" name="Gradle: org.javassist:javassist:3.27.0-GA" level="project" />
+    <orderEntry type="library" name="Gradle: net.bytebuddy:byte-buddy:1.10.22" level="project" />
+    <orderEntry type="library" name="Gradle: antlr:antlr:2.7.7" level="project" />
+    <orderEntry type="library" name="Gradle: org.jboss:jandex:2.2.3.Final" level="project" />
+    <orderEntry type="library" name="Gradle: org.dom4j:dom4j:2.1.3" level="project" />
+    <orderEntry type="library" name="Gradle: org.glassfish.jaxb:jaxb-runtime:2.3.5" level="project" />
+    <orderEntry type="library" name="Gradle: ch.qos.logback:logback-classic:1.2.6" level="project" />
+    <orderEntry type="library" name="Gradle: org.apache.logging.log4j:log4j-to-slf4j:2.14.1" level="project" />
+    <orderEntry type="library" name="Gradle: org.slf4j:jul-to-slf4j:1.7.32" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework:spring-jcl:5.3.12" level="project" />
+    <orderEntry type="library" name="Gradle: com.fasterxml.jackson.core:jackson-annotations:2.12.5" level="project" />
+    <orderEntry type="library" name="Gradle: com.fasterxml.jackson.core:jackson-core:2.12.5" level="project" />
+    <orderEntry type="library" name="Gradle: org.springframework.security:spring-security-crypto:5.5.3" level="project" />
+    <orderEntry type="library" name="Gradle: jakarta.xml.bind:jakarta.xml.bind-api:2.3.3" level="project" />
+    <orderEntry type="library" name="Gradle: org.glassfish.jaxb:txw2:2.3.5" level="project" />
+    <orderEntry type="library" name="Gradle: com.sun.istack:istack-commons-runtime:3.0.12" level="project" />
+    <orderEntry type="library" name="Gradle: ch.qos.logback:logback-core:1.2.6" level="project" />
+    <orderEntry type="library" name="Gradle: org.apache.logging.log4j:log4j-api:2.14.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Gradle: com.h2database:h2:1.4.200" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Gradle: org.latencyutils:LatencyUtils:2.0.3" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Gradle: com.sun.activation:jakarta.activation:1.2.2" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: .idea/libraries/Gradle__com_github_hyperskill_hs_test_release_SNAPSHOT.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__com_github_hyperskill_hs_test_release_SNAPSHOT.xml b/.idea/libraries/Gradle__com_github_hyperskill_hs_test_release_SNAPSHOT.xml
new file mode 100644
--- /dev/null	(date 1648630872439)
+++ b/.idea/libraries/Gradle__com_github_hyperskill_hs_test_release_SNAPSHOT.xml	(date 1648630872439)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: com.github.hyperskill:hs-test:release-SNAPSHOT">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.github.hyperskill/hs-test/release-SNAPSHOT/9ba6b13f29957863e1a1165b4b8c99db1a1370ab/hs-test-release-SNAPSHOT.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.github.hyperskill/hs-test/release-SNAPSHOT/731d45b8a1d09731306f81f609e6204d5efa1604/hs-test-release-SNAPSHOT-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: Web Quiz Engine/task/test/tests/WebQuizEngineTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tests;\r\n\r\nimport com.google.gson.JsonElement;\r\nimport com.google.gson.JsonObject;\r\nimport engine.WebQuizEngine;\r\nimport org.hyperskill.hstest.dynamic.input.DynamicTesting;\r\nimport org.hyperskill.hstest.dynamic.input.DynamicTestingMethod;\r\nimport org.hyperskill.hstest.exception.outcomes.WrongAnswer;\r\nimport org.hyperskill.hstest.mocks.web.request.HttpRequest;\r\nimport org.hyperskill.hstest.mocks.web.response.HttpResponse;\r\nimport org.hyperskill.hstest.stage.SpringTest;\r\nimport org.hyperskill.hstest.testcase.CheckResult;\r\n\r\nimport static org.hyperskill.hstest.common.JsonUtils.getJson;\r\nimport static org.hyperskill.hstest.common.JsonUtils.getPrettyJson;\r\nimport static org.hyperskill.hstest.testing.expect.Expectation.expect;\r\nimport static org.hyperskill.hstest.testing.expect.json.JsonChecker.*;\r\n\r\npublic class WebQuizEngineTest extends SpringTest {\r\n\r\n    public WebQuizEngineTest() {\r\n        super(WebQuizEngine.class);\r\n    }\r\n\r\n    static void checkStatusCode(HttpResponse resp, int status) {\r\n        if (resp.getStatusCode() != status) {\r\n            throw new WrongAnswer(\r\n                resp.getRequest().getMethod() + \" \" +\r\n                    resp.getRequest().getLocalUri() +\r\n                    \" should respond with status code \" + status + \", \" +\r\n                    \"responded: \" + resp.getStatusCode() + \"\\n\\n\" +\r\n                    \"Response body:\\n\\n\" + resp.getContent()\r\n            );\r\n        }\r\n    }\r\n\r\n    private static String quiz1 =\r\n        \"{\\n\" +\r\n            \"  \\\"title\\\": \\\"The Java Logo\\\", \\n\" +\r\n            \"  \\\"text\\\": \\\"What is depicted on the Java logo?\\\",\\n\" +\r\n            \"  \\\"options\\\": [\\\"Robot\\\",\\\"Tea leaf\\\",\\\"Cup of coffee\\\",\\\"Bug\\\"],\\n\" +\r\n            \"  \\\"answer\\\": [2]\\n\" +\r\n            \"}\";\r\n\r\n    private static String quiz2 =\r\n        \"{\\n\" +\r\n            \"  \\\"title\\\": \\\"The Ultimate Question\\\",\\n\" +\r\n            \"  \\\"text\\\": \\\"What is the answer to the Ultimate Question of Life, the Universe and Everything?\\\",\\n\" +\r\n            \"  \\\"options\\\": [\\\"Everything goes right\\\",\\\"42\\\",\\\"2+2=4\\\",\\\"11011100\\\"],\\n\" +\r\n            \"  \\\"answer\\\": [1]\\n\" +\r\n            \"}\";\r\n\r\n    private static String quiz3 =\r\n        \"{\\n\" +\r\n            \"  \\\"title\\\": \\\"Math1\\\",\\n\" +\r\n            \"  \\\"text\\\": \\\"Which of the following is equal to 4?\\\",\\n\" +\r\n            \"  \\\"options\\\": [\\\"1+3\\\",\\\"2+2\\\",\\\"8-1\\\",\\\"1+5\\\"],\\n\" +\r\n            \"  \\\"answer\\\": [0,1]\\n\" +\r\n            \"}\";\r\n\r\n    private static String quiz4 =\r\n        \"{\\n\" +\r\n            \"  \\\"title\\\": \\\"Math2\\\",\\n\" +\r\n            \"  \\\"text\\\": \\\"Which of the following is equal to 4?\\\",\\n\" +\r\n            \"  \\\"options\\\": [\\\"1+1\\\",\\\"2+2\\\",\\\"8-1\\\",\\\"5-1\\\"],\\n\" +\r\n            \"  \\\"answer\\\": [1,3]\\n\" +\r\n            \"}\";\r\n\r\n    private static String quiz5 =\r\n        \"{\\n\" +\r\n            \"  \\\"title\\\": \\\"Math3\\\",\\n\" +\r\n            \"  \\\"text\\\": \\\"Which of the following is equal to 4?\\\",\\n\" +\r\n            \"  \\\"options\\\": [\\\"2*3\\\",\\\"5*8\\\",\\\"8*0\\\",\\\"1*5\\\"],\\n\" +\r\n            \"  \\\"answer\\\": []\\n\" +\r\n            \"}\";\r\n\r\n    private static String quiz6 =\r\n        \"{\\n\" +\r\n            \"  \\\"title\\\": \\\"Math4\\\",\\n\" +\r\n            \"  \\\"text\\\": \\\"Which of the following is equal to 4?\\\",\\n\" +\r\n            \"  \\\"options\\\": [\\\"2*3\\\",\\\"5*8\\\",\\\"8*0\\\",\\\"1*5\\\"]\\n\" +\r\n            \"}\";\r\n\r\n    private static String quiz7 =\r\n        \"{\\n\" +\r\n            \"  \\\"title\\\": \\\"Math5\\\",\\n\" +\r\n            \"  \\\"text\\\": \\\"Which of the following is equal to 4?\\\",\\n\" +\r\n            \"  \\\"options\\\": [\\\"2^2\\\",\\\"2+2\\\",\\\"2-2\\\",\\\"2*2\\\"],\\n\" +\r\n            \"  \\\"answer\\\": [0,1,3]\\n\" +\r\n            \"}\";\r\n\r\n    private static String[] quizzes = new String[] {\r\n        quiz1, quiz2, quiz3, quiz4, quiz5, quiz6, quiz7\r\n    };\r\n\r\n    private static int[] quizIds = new int[] {\r\n        0, 0, 0, 0, 0, 0, 0\r\n    };\r\n\r\n    private static String error400noTitle =\r\n        \"{\\n\" +\r\n            \"  \\\"text\\\": \\\"What is the answer to the Ultimate Question of Life, the Universe and Everything?\\\",\\n\" +\r\n            \"  \\\"options\\\": [\\\"Everything goes right\\\",\\\"42\\\",\\\"2+2=4\\\",\\\"11011100\\\"]\\n\" +\r\n            \"  \\\"answer\\\": [1]\\n\" +\r\n            \"}\";\r\n\r\n    private static String error400emptyTitle =\r\n        \"{\\n\" +\r\n            \"  \\\"title\\\": \\\"\\\",\\n\" +\r\n            \"  \\\"text\\\": \\\"What is the answer to the Ultimate Question of Life, the Universe and Everything?\\\",\\n\" +\r\n            \"  \\\"options\\\": [\\\"Everything goes right\\\",\\\"42\\\",\\\"2+2=4\\\",\\\"11011100\\\"]\\n\" +\r\n            \"  \\\"answer\\\": [1]\\n\" +\r\n            \"}\";\r\n\r\n    private static String error400noText =\r\n        \"{\\n\" +\r\n            \"  \\\"title\\\": \\\"123123123\\\",\\n\" +\r\n            \"  \\\"options\\\": [\\\"Everything goes right\\\",\\\"42\\\",\\\"2+2=4\\\",\\\"11011100\\\"]\\n\" +\r\n            \"  \\\"answer\\\": [1]\\n\" +\r\n            \"}\";\r\n\r\n    private static String error400emptyText =\r\n        \"{\\n\" +\r\n            \"  \\\"title\\\": \\\"The Ultimate Question\\\",\\n\" +\r\n            \"  \\\"text\\\": \\\"\\\",\\n\" +\r\n            \"  \\\"options\\\": [\\\"Everything goes right\\\",\\\"42\\\",\\\"2+2=4\\\",\\\"11011100\\\"]\\n\" +\r\n            \"  \\\"answer\\\": [1]\\n\" +\r\n            \"}\";\r\n\r\n    private static String error400noOptions =\r\n        \"{\\n\" +\r\n            \"  \\\"title\\\": \\\"The Ultimate Question\\\",\\n\" +\r\n            \"  \\\"text\\\": \\\"123123123\\\",\\n\" +\r\n            \"  \\\"answer\\\": [1]\\n\" +\r\n            \"}\";\r\n\r\n    private static String error400emptyOptions =\r\n        \"{\\n\" +\r\n            \"  \\\"title\\\": \\\"The Ultimate Question\\\",\\n\" +\r\n            \"  \\\"text\\\": \\\"What is the answer to the Ultimate Question of Life, the Universe and Everything?\\\",\\n\" +\r\n            \"  \\\"options\\\": [ ]\\n\" +\r\n            \"  \\\"answer\\\": [ ]\\n\" +\r\n            \"}\";\r\n\r\n    private static String error400oneOption =\r\n        \"{\\n\" +\r\n            \"  \\\"title\\\": \\\"The Ultimate Question\\\",\\n\" +\r\n            \"  \\\"text\\\": \\\"What is the answer to the Ultimate Question of Life, the Universe and Everything?\\\",\\n\" +\r\n            \"  \\\"options\\\": [\\\"Everything goes right\\\"]\\n\" +\r\n            \"  \\\"answer\\\": [0]\\n\" +\r\n            \"}\";\r\n\r\n    @DynamicTestingMethod\r\n    DynamicTesting[] dt = new DynamicTesting[] {\r\n        () -> testAllQuizzes(0),\r\n\r\n        () -> testCreateQuiz(0),\r\n        () -> testQuizExists(0),\r\n        () -> testQuizNotExists(0),\r\n\r\n        () -> testAllQuizzes(1),\r\n\r\n        () -> testCreateQuiz(1),\r\n        () -> testQuizExists(1),\r\n        () -> testQuizNotExists(1),\r\n\r\n        () -> testAllQuizzes(2),\r\n\r\n        () -> checkQuizSuccess(quizIds[0], \"[0]\", false),\r\n        () -> checkQuizSuccess(quizIds[0], \"[1]\", false),\r\n        () -> checkQuizSuccess(quizIds[0], \"[2]\", true),\r\n        () -> checkQuizSuccess(quizIds[0], \"[3]\", false),\r\n\r\n        () -> checkQuizSuccess(quizIds[1], \"[0]\", false),\r\n        () -> checkQuizSuccess(quizIds[1], \"[1]\", true),\r\n        () -> checkQuizSuccess(quizIds[1], \"[2]\", false),\r\n        () -> checkQuizSuccess(quizIds[1], \"[3]\", false),\r\n\r\n        () -> addIncorrectQuiz(error400noTitle),\r\n        () -> addIncorrectQuiz(error400emptyTitle),\r\n        () -> addIncorrectQuiz(error400noText),\r\n        () -> addIncorrectQuiz(error400emptyText),\r\n        () -> addIncorrectQuiz(error400noOptions),\r\n        () -> addIncorrectQuiz(error400emptyOptions),\r\n        () -> addIncorrectQuiz(error400oneOption),\r\n\r\n        () -> testCreateQuiz(2),\r\n        () -> testQuizExists(2),\r\n        () -> testQuizNotExists(2),\r\n        () -> checkQuizSuccess(quizIds[2], \"[]\", false),\r\n        () -> checkQuizSuccess(quizIds[2], \"[0]\", false),\r\n        () -> checkQuizSuccess(quizIds[2], \"[1]\", false),\r\n        () -> checkQuizSuccess(quizIds[2], \"[2]\", false),\r\n        () -> checkQuizSuccess(quizIds[2], \"[3]\", false),\r\n        () -> checkQuizSuccess(quizIds[2], \"[0,1]\", true),\r\n        () -> checkQuizSuccess(quizIds[2], \"[0,2]\", false),\r\n        () -> checkQuizSuccess(quizIds[2], \"[0,3]\", false),\r\n        () -> checkQuizSuccess(quizIds[2], \"[1,2]\", false),\r\n        () -> checkQuizSuccess(quizIds[2], \"[1,3]\", false),\r\n        () -> checkQuizSuccess(quizIds[2], \"[2,3]\", false),\r\n        () -> checkQuizSuccess(quizIds[2], \"[0,1,2]\", false),\r\n        () -> checkQuizSuccess(quizIds[2], \"[0,1,3]\", false),\r\n        () -> checkQuizSuccess(quizIds[2], \"[1,2,3]\", false),\r\n        () -> checkQuizSuccess(quizIds[2], \"[0,1,2,3]\", false),\r\n\r\n        () -> testCreateQuiz(3),\r\n        () -> testQuizExists(3),\r\n        () -> testQuizNotExists(3),\r\n        () -> checkQuizSuccess(quizIds[3], \"[]\", false),\r\n        () -> checkQuizSuccess(quizIds[3], \"[0]\", false),\r\n        () -> checkQuizSuccess(quizIds[3], \"[1]\", false),\r\n        () -> checkQuizSuccess(quizIds[3], \"[2]\", false),\r\n        () -> checkQuizSuccess(quizIds[3], \"[3]\", false),\r\n        () -> checkQuizSuccess(quizIds[3], \"[0,1]\", false),\r\n        () -> checkQuizSuccess(quizIds[3], \"[0,2]\", false),\r\n        () -> checkQuizSuccess(quizIds[3], \"[0,3]\", false),\r\n        () -> checkQuizSuccess(quizIds[3], \"[1,2]\", false),\r\n        () -> checkQuizSuccess(quizIds[3], \"[1,3]\", true),\r\n        () -> checkQuizSuccess(quizIds[3], \"[2,3]\", false),\r\n        () -> checkQuizSuccess(quizIds[3], \"[0,1,2]\", false),\r\n        () -> checkQuizSuccess(quizIds[3], \"[0,1,3]\", false),\r\n        () -> checkQuizSuccess(quizIds[3], \"[1,2,3]\", false),\r\n        () -> checkQuizSuccess(quizIds[3], \"[0,1,2,3]\", false),\r\n\r\n        () -> testCreateQuiz(4),\r\n        () -> testQuizExists(4),\r\n        () -> testQuizNotExists(4),\r\n        () -> checkQuizSuccess(quizIds[4], \"[]\", true),\r\n        () -> checkQuizSuccess(quizIds[4], \"[0]\", false),\r\n        () -> checkQuizSuccess(quizIds[4], \"[1]\", false),\r\n        () -> checkQuizSuccess(quizIds[4], \"[2]\", false),\r\n        () -> checkQuizSuccess(quizIds[4], \"[3]\", false),\r\n        () -> checkQuizSuccess(quizIds[4], \"[0,1]\", false),\r\n        () -> checkQuizSuccess(quizIds[4], \"[0,2]\", false),\r\n        () -> checkQuizSuccess(quizIds[4], \"[0,3]\", false),\r\n        () -> checkQuizSuccess(quizIds[4], \"[1,2]\", false),\r\n        () -> checkQuizSuccess(quizIds[4], \"[1,3]\", false),\r\n        () -> checkQuizSuccess(quizIds[4], \"[2,3]\", false),\r\n        () -> checkQuizSuccess(quizIds[4], \"[0,1,2]\", false),\r\n        () -> checkQuizSuccess(quizIds[4], \"[0,1,3]\", false),\r\n        () -> checkQuizSuccess(quizIds[4], \"[1,2,3]\", false),\r\n        () -> checkQuizSuccess(quizIds[4], \"[0,1,2,3]\", false),\r\n\r\n        () -> testCreateQuiz(5),\r\n        () -> testQuizExists(5),\r\n        () -> testQuizNotExists(5),\r\n        () -> checkQuizSuccess(quizIds[5], \"[]\", true),\r\n        () -> checkQuizSuccess(quizIds[5], \"[0]\", false),\r\n        () -> checkQuizSuccess(quizIds[5], \"[1]\", false),\r\n        () -> checkQuizSuccess(quizIds[5], \"[2]\", false),\r\n        () -> checkQuizSuccess(quizIds[5], \"[3]\", false),\r\n        () -> checkQuizSuccess(quizIds[5], \"[0,1]\", false),\r\n        () -> checkQuizSuccess(quizIds[5], \"[0,2]\", false),\r\n        () -> checkQuizSuccess(quizIds[5], \"[0,3]\", false),\r\n        () -> checkQuizSuccess(quizIds[5], \"[1,2]\", false),\r\n        () -> checkQuizSuccess(quizIds[5], \"[1,3]\", false),\r\n        () -> checkQuizSuccess(quizIds[5], \"[2,3]\", false),\r\n        () -> checkQuizSuccess(quizIds[5], \"[0,1,2]\", false),\r\n        () -> checkQuizSuccess(quizIds[5], \"[0,1,3]\", false),\r\n        () -> checkQuizSuccess(quizIds[5], \"[1,2,3]\", false),\r\n        () -> checkQuizSuccess(quizIds[5], \"[0,1,2,3]\", false),\r\n\r\n        () -> testCreateQuiz(6),\r\n        () -> testQuizExists(6),\r\n        () -> testQuizNotExists(6),\r\n        () -> checkQuizSuccess(quizIds[6], \"[]\", false),\r\n        () -> checkQuizSuccess(quizIds[6], \"[0]\", false),\r\n        () -> checkQuizSuccess(quizIds[6], \"[1]\", false),\r\n        () -> checkQuizSuccess(quizIds[6], \"[2]\", false),\r\n        () -> checkQuizSuccess(quizIds[6], \"[3]\", false),\r\n        () -> checkQuizSuccess(quizIds[6], \"[0,1]\", false),\r\n        () -> checkQuizSuccess(quizIds[6], \"[0,2]\", false),\r\n        () -> checkQuizSuccess(quizIds[6], \"[0,3]\", false),\r\n        () -> checkQuizSuccess(quizIds[6], \"[1,2]\", false),\r\n        () -> checkQuizSuccess(quizIds[6], \"[1,3]\", false),\r\n        () -> checkQuizSuccess(quizIds[6], \"[2,3]\", false),\r\n        () -> checkQuizSuccess(quizIds[6], \"[0,1,2]\", false),\r\n        () -> checkQuizSuccess(quizIds[6], \"[0,1,3]\", true),\r\n        () -> checkQuizSuccess(quizIds[6], \"[1,2,3]\", false),\r\n        () -> checkQuizSuccess(quizIds[6], \"[0,1,2,3]\", false),\r\n    };\r\n\r\n    private CheckResult testCreateQuiz(int quizNum) {\r\n        String url = \"/api/quizzes\";\r\n        HttpResponse resp = post(url, quizzes[quizNum]).send();\r\n        checkStatusCode(resp, 200);\r\n\r\n        expect(resp.getContent()).asJson().check(\r\n            isObject()\r\n                .value(\"id\", isInteger(i -> {\r\n                    quizIds[quizNum] = i;\r\n                    return true;\r\n                }))\r\n                .anyOtherValues()\r\n        );\r\n\r\n        return CheckResult.correct();\r\n    }\r\n\r\n    private CheckResult testQuizExists(int quizNum) {\r\n\r\n        int quizId = quizIds[quizNum];\r\n        String quiz = quizzes[quizNum];\r\n\r\n        String url = \"/api/quizzes/\" + quizId;\r\n        HttpResponse resp = get(url).send();\r\n        checkStatusCode(resp, 200);\r\n\r\n        JsonObject rightQuiz = getJson(quiz).getAsJsonObject();\r\n        rightQuiz.remove(\"answer\");\r\n        rightQuiz.addProperty(\"id\", quizId);\r\n\r\n        expect(getPrettyJson(rightQuiz)).asJson().check(\r\n            isObject()\r\n                .value(\"id\", quizId)\r\n                .value(\"title\", isString())\r\n                .value(\"text\", isString())\r\n                .value(\"options\", isArray(any()))\r\n        );\r\n\r\n        JsonElement json = resp.getJson();\r\n\r\n        CheckResult wrongResponse = CheckResult.wrong(\r\n            \"The quiz sent to the program looked like this:\\n\" +\r\n                getPrettyJson(rightQuiz) + \"\\n\\n\" +\r\n                \"But the received quiz looks like that:\\n\" +\r\n                getPrettyJson(json)\r\n        );\r\n\r\n        if (!json.isJsonObject()) {\r\n            return wrongResponse;\r\n        }\r\n\r\n        JsonObject obj = json.getAsJsonObject();\r\n\r\n        if (!rightQuiz.equals(obj)) {\r\n            return wrongResponse;\r\n        }\r\n\r\n        return CheckResult.correct();\r\n    }\r\n\r\n    private CheckResult testQuizNotExists(int quizNum) {\r\n        int quizId = quizIds[quizNum];\r\n\r\n        String url = \"/api/quizzes/\" + (quizId + 125);\r\n        HttpResponse resp = get(url).send();\r\n        checkStatusCode(resp, 404);\r\n\r\n        return CheckResult.correct();\r\n    }\r\n\r\n    private CheckResult testAllQuizzes(int count) {\r\n        String url = \"/api/quizzes\";\r\n        HttpResponse resp = get(url).send();\r\n        checkStatusCode(resp, 200);\r\n\r\n        expect(resp.getContent()).asJson().check(\r\n            isArray(count, isObject().anyOtherValues())\r\n        );\r\n\r\n        return CheckResult.correct();\r\n    }\r\n\r\n    private CheckResult checkQuizSuccess(int quizNum, String answerSent, boolean shouldResponse) {\r\n        String url = \"/api/quizzes/\" + quizNum + \"/solve\";\r\n\r\n        HttpRequest req = post(url, \"{\" + \" \\\"answer\\\" : \" + answerSent + \"}\");\r\n        HttpResponse resp = req.send();\r\n        checkStatusCode(resp, 200);\r\n\r\n        expect(resp.getContent()).asJson().check(\r\n            isObject()\r\n                .value(\"success\", shouldResponse)\r\n                .value(\"feedback\", isString())\r\n        );\r\n\r\n        return CheckResult.correct();\r\n    }\r\n\r\n    private CheckResult addIncorrectQuiz(String quiz) {\r\n        String url = \"/api/quizzes\";\r\n        HttpResponse resp = post(url, quiz).send();\r\n        checkStatusCode(resp, 400);\r\n        return CheckResult.correct();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Web Quiz Engine/task/test/tests/WebQuizEngineTest.java b/Web Quiz Engine/task/test/tests/WebQuizEngineTest.java
--- a/Web Quiz Engine/task/test/tests/WebQuizEngineTest.java	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/Web Quiz Engine/task/test/tests/WebQuizEngineTest.java	(date 1649394532262)
@@ -5,6 +5,7 @@
 import engine.WebQuizEngine;
 import org.hyperskill.hstest.dynamic.input.DynamicTesting;
 import org.hyperskill.hstest.dynamic.input.DynamicTestingMethod;
+import org.hyperskill.hstest.exception.outcomes.UnexpectedError;
 import org.hyperskill.hstest.exception.outcomes.WrongAnswer;
 import org.hyperskill.hstest.mocks.web.request.HttpRequest;
 import org.hyperskill.hstest.mocks.web.response.HttpResponse;
@@ -14,12 +15,15 @@
 import static org.hyperskill.hstest.common.JsonUtils.getJson;
 import static org.hyperskill.hstest.common.JsonUtils.getPrettyJson;
 import static org.hyperskill.hstest.testing.expect.Expectation.expect;
-import static org.hyperskill.hstest.testing.expect.json.JsonChecker.*;
+import static org.hyperskill.hstest.testing.expect.json.JsonChecker.any;
+import static org.hyperskill.hstest.testing.expect.json.JsonChecker.isArray;
+import static org.hyperskill.hstest.testing.expect.json.JsonChecker.isInteger;
+import static org.hyperskill.hstest.testing.expect.json.JsonChecker.isObject;
+import static org.hyperskill.hstest.testing.expect.json.JsonChecker.isString;
 
 public class WebQuizEngineTest extends SpringTest {
-
     public WebQuizEngineTest() {
-        super(WebQuizEngine.class);
+        super(WebQuizEngine.class, "../quizdb.mv.db");
     }
 
     static void checkStatusCode(HttpResponse resp, int status) {
@@ -150,139 +154,336 @@
             "  \"answer\": [0]\n" +
             "}";
 
+
+    private static String login1 = "test@google.com";
+    private static String pass1 = "qwerty";
+
+    private static String login2 = "user@google.com";
+    private static String pass2 = "12345";
+
+    private static HttpRequest auth(HttpRequest req, int user) {
+        String login;
+        String pass;
+        if (user == 1) {
+            login = login1;
+            pass = pass1;
+        } else if (user == 2) {
+            login = login2;
+            pass = pass2;
+        } else {
+            login = fakeLogin;
+            pass = fakePass;
+        }
+        return req.basicAuth(login, pass);
+    }
+
+    private static String fakeLogin = "qwerty@google.com";
+    private static String fakePass = "456534";
+
+    private static String noAtInLogin_login = "google.com";
+    private static String noAtInLogin_pass = "asddfggh";
+
+    private static String noDotInLogin_login = "well@googlecom";
+    private static String noDotInLogin_pass = "rtyfgcxsfd";
+
+    private static String loginExist_login = "test@google.com";
+    private static String loginExist_pass = "rtyfgcxsfd1";
+
+    private static String shortPassword_login = "someuser@gmail.com";
+    private static String shortPassword_pass = "1234";
+
+    private static String shortPassword2_login = "someuser2@gmail.com";
+    private static String shortPassword2_pass = "123";
+
     @DynamicTestingMethod
     DynamicTesting[] dt = new DynamicTesting[] {
-        () -> testAllQuizzes(0),
+        // Test login
+        () -> testRegister(login1, pass1, 200),
+        () -> testRegister(login2, pass2, 200),
+        () -> testRegister(noAtInLogin_login, noAtInLogin_pass, 400),
+        () -> testRegister(noDotInLogin_login, noDotInLogin_pass, 400),
+        () -> testRegister(loginExist_login, loginExist_pass, 400),
+        () -> testRegister(shortPassword_login, shortPassword_pass, 400),
+        () -> testRegister(shortPassword2_login, shortPassword2_pass, 400),
+
+
+        // Add 2 quizzes and check their existence
+        () -> testAllQuizzes(0, 1),
+        () -> testAllQuizzes(0, 2),
+
+        () -> testCreateQuiz(0, 1),
+        () -> testQuizExists(0, 2),
+        () -> testQuizNotExists(0, 2, 125),
+
+        () -> testAllQuizzes(1, 1),
+
+        () -> testCreateQuiz(1, 2),
+        () -> testQuizExists(1, 2),
+        () -> testQuizNotExists(1, 2, 125),
+
+        () -> testAllQuizzes(2, 2),
 
-        () -> testCreateQuiz(0),
-        () -> testQuizExists(0),
-        () -> testQuizNotExists(0),
 
-        () -> testAllQuizzes(1),
+        // No auth operations tests
+        () -> testAllQuizzesNoAuth(),
+        () -> testCreateQuizNoAuth(1),
+        () -> testCreateQuizNoAuth(2),
+        () -> testSolveQuizNoAuth(quizIds[0], "[0]"),
+        () -> testSolveQuizNoAuth(quizIds[1], "[1]"),
+        () -> testDeleteQuizzesNoAuth(quizIds[0]),
+        () -> testDeleteQuizzesNoAuth(quizIds[1]),
 
-        () -> testCreateQuiz(1),
-        () -> testQuizExists(1),
-        () -> testQuizNotExists(1),
 
-        () -> testAllQuizzes(2),
+        // Fake auth operations tests
+        () -> testAllQuizzesFakeAuth(),
+        () -> testCreateQuizFakeAuth(1),
+        () -> testCreateQuizFakeAuth(2),
+        () -> testSolveQuizFakeAuth(quizIds[0], "[0]"),
+        () -> testSolveQuizFakeAuth(quizIds[1], "[1]"),
+        () -> testDeleteQuizzesFakeAuth(quizIds[0]),
+        () -> testDeleteQuizzesFakeAuth(quizIds[1]),
 
-        () -> checkQuizSuccess(quizIds[0], "[0]", false),
-        () -> checkQuizSuccess(quizIds[0], "[1]", false),
-        () -> checkQuizSuccess(quizIds[0], "[2]", true),
-        () -> checkQuizSuccess(quizIds[0], "[3]", false),
 
-        () -> checkQuizSuccess(quizIds[1], "[0]", false),
-        () -> checkQuizSuccess(quizIds[1], "[1]", true),
-        () -> checkQuizSuccess(quizIds[1], "[2]", false),
-        () -> checkQuizSuccess(quizIds[1], "[3]", false),
+        // Solve two quizzes
+        () -> checkQuizSuccess(quizIds[0], "[0]", false, 1),
+        () -> checkQuizSuccess(quizIds[0], "[1]", false, 2),
+        () -> checkQuizSuccess(quizIds[0], "[2]", true, 1),
+        () -> checkQuizSuccess(quizIds[0], "[3]", false, 2),
 
-        () -> addIncorrectQuiz(error400noTitle),
-        () -> addIncorrectQuiz(error400emptyTitle),
-        () -> addIncorrectQuiz(error400noText),
-        () -> addIncorrectQuiz(error400emptyText),
-        () -> addIncorrectQuiz(error400noOptions),
-        () -> addIncorrectQuiz(error400emptyOptions),
-        () -> addIncorrectQuiz(error400oneOption),
+        () -> checkQuizSuccess(quizIds[1], "[0]", false, 2),
+        () -> checkQuizSuccess(quizIds[1], "[1]", true, 1),
+        () -> checkQuizSuccess(quizIds[1], "[2]", false, 2),
+        () -> checkQuizSuccess(quizIds[1], "[3]", false, 1),
 
-        () -> testCreateQuiz(2),
-        () -> testQuizExists(2),
-        () -> testQuizNotExists(2),
-        () -> checkQuizSuccess(quizIds[2], "[]", false),
-        () -> checkQuizSuccess(quizIds[2], "[0]", false),
-        () -> checkQuizSuccess(quizIds[2], "[1]", false),
-        () -> checkQuizSuccess(quizIds[2], "[2]", false),
-        () -> checkQuizSuccess(quizIds[2], "[3]", false),
-        () -> checkQuizSuccess(quizIds[2], "[0,1]", true),
-        () -> checkQuizSuccess(quizIds[2], "[0,2]", false),
-        () -> checkQuizSuccess(quizIds[2], "[0,3]", false),
-        () -> checkQuizSuccess(quizIds[2], "[1,2]", false),
-        () -> checkQuizSuccess(quizIds[2], "[1,3]", false),
-        () -> checkQuizSuccess(quizIds[2], "[2,3]", false),
-        () -> checkQuizSuccess(quizIds[2], "[0,1,2]", false),
-        () -> checkQuizSuccess(quizIds[2], "[0,1,3]", false),
-        () -> checkQuizSuccess(quizIds[2], "[1,2,3]", false),
-        () -> checkQuizSuccess(quizIds[2], "[0,1,2,3]", false),
 
-        () -> testCreateQuiz(3),
-        () -> testQuizExists(3),
-        () -> testQuizNotExists(3),
-        () -> checkQuizSuccess(quizIds[3], "[]", false),
-        () -> checkQuizSuccess(quizIds[3], "[0]", false),
-        () -> checkQuizSuccess(quizIds[3], "[1]", false),
-        () -> checkQuizSuccess(quizIds[3], "[2]", false),
-        () -> checkQuizSuccess(quizIds[3], "[3]", false),
-        () -> checkQuizSuccess(quizIds[3], "[0,1]", false),
-        () -> checkQuizSuccess(quizIds[3], "[0,2]", false),
-        () -> checkQuizSuccess(quizIds[3], "[0,3]", false),
-        () -> checkQuizSuccess(quizIds[3], "[1,2]", false),
-        () -> checkQuizSuccess(quizIds[3], "[1,3]", true),
-        () -> checkQuizSuccess(quizIds[3], "[2,3]", false),
-        () -> checkQuizSuccess(quizIds[3], "[0,1,2]", false),
-        () -> checkQuizSuccess(quizIds[3], "[0,1,3]", false),
-        () -> checkQuizSuccess(quizIds[3], "[1,2,3]", false),
-        () -> checkQuizSuccess(quizIds[3], "[0,1,2,3]", false),
+        // Test database save
+        () -> testAllQuizzes(2, 1),
+        () -> testAllQuizzes(2, 2),
+        () -> reloadServer(),
+        () -> testAllQuizzes(2, 1),
+        () -> testAllQuizzes(2, 2),
+        () -> checkQuizSuccess(quizIds[0], "[2]", true, 1),
+        () -> checkQuizSuccess(quizIds[0], "[3]", false, 2),
+        () -> checkQuizSuccess(quizIds[1], "[0]", false, 1),
+        () -> checkQuizSuccess(quizIds[1], "[1]", true, 2),
 
-        () -> testCreateQuiz(4),
-        () -> testQuizExists(4),
-        () -> testQuizNotExists(4),
-        () -> checkQuizSuccess(quizIds[4], "[]", true),
-        () -> checkQuizSuccess(quizIds[4], "[0]", false),
-        () -> checkQuizSuccess(quizIds[4], "[1]", false),
-        () -> checkQuizSuccess(quizIds[4], "[2]", false),
-        () -> checkQuizSuccess(quizIds[4], "[3]", false),
-        () -> checkQuizSuccess(quizIds[4], "[0,1]", false),
-        () -> checkQuizSuccess(quizIds[4], "[0,2]", false),
-        () -> checkQuizSuccess(quizIds[4], "[0,3]", false),
-        () -> checkQuizSuccess(quizIds[4], "[1,2]", false),
-        () -> checkQuizSuccess(quizIds[4], "[1,3]", false),
-        () -> checkQuizSuccess(quizIds[4], "[2,3]", false),
-        () -> checkQuizSuccess(quizIds[4], "[0,1,2]", false),
-        () -> checkQuizSuccess(quizIds[4], "[0,1,3]", false),
-        () -> checkQuizSuccess(quizIds[4], "[1,2,3]", false),
-        () -> checkQuizSuccess(quizIds[4], "[0,1,2,3]", false),
 
-        () -> testCreateQuiz(5),
-        () -> testQuizExists(5),
-        () -> testQuizNotExists(5),
-        () -> checkQuizSuccess(quizIds[5], "[]", true),
-        () -> checkQuizSuccess(quizIds[5], "[0]", false),
-        () -> checkQuizSuccess(quizIds[5], "[1]", false),
-        () -> checkQuizSuccess(quizIds[5], "[2]", false),
-        () -> checkQuizSuccess(quizIds[5], "[3]", false),
-        () -> checkQuizSuccess(quizIds[5], "[0,1]", false),
-        () -> checkQuizSuccess(quizIds[5], "[0,2]", false),
-        () -> checkQuizSuccess(quizIds[5], "[0,3]", false),
-        () -> checkQuizSuccess(quizIds[5], "[1,2]", false),
-        () -> checkQuizSuccess(quizIds[5], "[1,3]", false),
-        () -> checkQuizSuccess(quizIds[5], "[2,3]", false),
-        () -> checkQuizSuccess(quizIds[5], "[0,1,2]", false),
-        () -> checkQuizSuccess(quizIds[5], "[0,1,3]", false),
-        () -> checkQuizSuccess(quizIds[5], "[1,2,3]", false),
-        () -> checkQuizSuccess(quizIds[5], "[0,1,2,3]", false),
+        // Test wrongly created quizzes
+        () -> addIncorrectQuiz(error400noTitle, 1),
+        () -> addIncorrectQuiz(error400emptyTitle, 2),
+        () -> addIncorrectQuiz(error400noText, 1),
+        () -> addIncorrectQuiz(error400emptyText, 2),
+        () -> addIncorrectQuiz(error400noOptions, 1),
+        () -> addIncorrectQuiz(error400emptyOptions, 2),
+        () -> addIncorrectQuiz(error400oneOption, 1),
 
-        () -> testCreateQuiz(6),
-        () -> testQuizExists(6),
-        () -> testQuizNotExists(6),
-        () -> checkQuizSuccess(quizIds[6], "[]", false),
-        () -> checkQuizSuccess(quizIds[6], "[0]", false),
-        () -> checkQuizSuccess(quizIds[6], "[1]", false),
-        () -> checkQuizSuccess(quizIds[6], "[2]", false),
-        () -> checkQuizSuccess(quizIds[6], "[3]", false),
-        () -> checkQuizSuccess(quizIds[6], "[0,1]", false),
-        () -> checkQuizSuccess(quizIds[6], "[0,2]", false),
-        () -> checkQuizSuccess(quizIds[6], "[0,3]", false),
-        () -> checkQuizSuccess(quizIds[6], "[1,2]", false),
-        () -> checkQuizSuccess(quizIds[6], "[1,3]", false),
-        () -> checkQuizSuccess(quizIds[6], "[2,3]", false),
-        () -> checkQuizSuccess(quizIds[6], "[0,1,2]", false),
-        () -> checkQuizSuccess(quizIds[6], "[0,1,3]", true),
-        () -> checkQuizSuccess(quizIds[6], "[1,2,3]", false),
-        () -> checkQuizSuccess(quizIds[6], "[0,1,2,3]", false),
+
+        // Test multiple answers
+        () -> testCreateQuiz(2, 1),
+        () -> testQuizExists(2, 1),
+        () -> testQuizNotExists(2, 1, 125),
+        () -> checkQuizSuccess(quizIds[2], "[]", false, 1),
+        () -> checkQuizSuccess(quizIds[2], "[0]", false, 2),
+        () -> checkQuizSuccess(quizIds[2], "[1]", false, 1),
+        () -> checkQuizSuccess(quizIds[2], "[2]", false, 2),
+        () -> checkQuizSuccess(quizIds[2], "[3]", false, 1),
+        () -> checkQuizSuccess(quizIds[2], "[0,1]", true, 2),
+        () -> checkQuizSuccess(quizIds[2], "[0,2]", false, 1),
+        () -> checkQuizSuccess(quizIds[2], "[0,3]", false, 2),
+        () -> checkQuizSuccess(quizIds[2], "[1,2]", false, 1),
+        () -> checkQuizSuccess(quizIds[2], "[1,3]", false, 2),
+        () -> checkQuizSuccess(quizIds[2], "[2,3]", false, 1),
+        () -> checkQuizSuccess(quizIds[2], "[0,1,2]", false, 2),
+        () -> checkQuizSuccess(quizIds[2], "[0,1,3]", false, 1),
+        () -> checkQuizSuccess(quizIds[2], "[1,2,3]", false, 2),
+        () -> checkQuizSuccess(quizIds[2], "[0,1,2,3]", false, 1),
+
+        () -> testCreateQuiz(3, 1),
+        () -> testQuizExists(3, 1),
+        () -> testQuizNotExists(3, 1, 125),
+        () -> checkQuizSuccess(quizIds[3], "[]", false, 1),
+        () -> checkQuizSuccess(quizIds[3], "[0]", false, 2),
+        () -> checkQuizSuccess(quizIds[3], "[1]", false, 1),
+        () -> checkQuizSuccess(quizIds[3], "[2]", false, 2),
+        () -> checkQuizSuccess(quizIds[3], "[3]", false, 1),
+        () -> checkQuizSuccess(quizIds[3], "[0,1]", false, 2),
+        () -> checkQuizSuccess(quizIds[3], "[0,2]", false, 1),
+        () -> checkQuizSuccess(quizIds[3], "[0,3]", false, 2),
+        () -> checkQuizSuccess(quizIds[3], "[1,2]", false, 1),
+        () -> checkQuizSuccess(quizIds[3], "[1,3]", true, 2),
+        () -> checkQuizSuccess(quizIds[3], "[2,3]", false, 1),
+        () -> checkQuizSuccess(quizIds[3], "[0,1,2]", false, 2),
+        () -> checkQuizSuccess(quizIds[3], "[0,1,3]", false, 1),
+        () -> checkQuizSuccess(quizIds[3], "[1,2,3]", false, 2),
+        () -> checkQuizSuccess(quizIds[3], "[0,1,2,3]", false, 1),
+
+        () -> testCreateQuiz(4, 1),
+        () -> testQuizExists(4, 1),
+        () -> testQuizNotExists(4, 1, 125),
+        () -> checkQuizSuccess(quizIds[4], "[]", true, 1),
+        () -> checkQuizSuccess(quizIds[4], "[0]", false, 2),
+        () -> checkQuizSuccess(quizIds[4], "[1]", false, 1),
+        () -> checkQuizSuccess(quizIds[4], "[2]", false, 2),
+        () -> checkQuizSuccess(quizIds[4], "[3]", false, 1),
+        () -> checkQuizSuccess(quizIds[4], "[0,1]", false, 2),
+        () -> checkQuizSuccess(quizIds[4], "[0,2]", false, 1),
+        () -> checkQuizSuccess(quizIds[4], "[0,3]", false, 2),
+        () -> checkQuizSuccess(quizIds[4], "[1,2]", false, 1),
+        () -> checkQuizSuccess(quizIds[4], "[1,3]", false, 2),
+        () -> checkQuizSuccess(quizIds[4], "[2,3]", false, 1),
+        () -> checkQuizSuccess(quizIds[4], "[0,1,2]", false, 1),
+        () -> checkQuizSuccess(quizIds[4], "[0,1,3]", false, 2),
+        () -> checkQuizSuccess(quizIds[4], "[1,2,3]", false, 1),
+        () -> checkQuizSuccess(quizIds[4], "[0,1,2,3]", false, 2),
+
+        () -> testCreateQuiz(5, 1),
+        () -> testQuizExists(5, 1),
+        () -> testQuizNotExists(5, 1, 125),
+        () -> checkQuizSuccess(quizIds[5], "[]", true, 1),
+        () -> checkQuizSuccess(quizIds[5], "[0]", false, 1),
+        () -> checkQuizSuccess(quizIds[5], "[1]", false, 1),
+        () -> checkQuizSuccess(quizIds[5], "[2]", false, 1),
+        () -> checkQuizSuccess(quizIds[5], "[3]", false, 1),
+        () -> checkQuizSuccess(quizIds[5], "[0,1]", false, 1),
+        () -> checkQuizSuccess(quizIds[5], "[0,2]", false, 1),
+        () -> checkQuizSuccess(quizIds[5], "[0,3]", false, 1),
+        () -> checkQuizSuccess(quizIds[5], "[1,2]", false, 1),
+        () -> checkQuizSuccess(quizIds[5], "[1,3]", false, 1),
+        () -> checkQuizSuccess(quizIds[5], "[2,3]", false, 1),
+        () -> checkQuizSuccess(quizIds[5], "[0,1,2]", false, 1),
+        () -> checkQuizSuccess(quizIds[5], "[0,1,3]", false, 1),
+        () -> checkQuizSuccess(quizIds[5], "[1,2,3]", false, 1),
+        () -> checkQuizSuccess(quizIds[5], "[0,1,2,3]", false, 1),
+
+        () -> testCreateQuiz(6, 1),
+        () -> testQuizExists(6, 1),
+        () -> testQuizNotExists(6, 1, 125),
+        () -> checkQuizSuccess(quizIds[6], "[]", false, 2),
+        () -> checkQuizSuccess(quizIds[6], "[0]", false, 2),
+        () -> checkQuizSuccess(quizIds[6], "[1]", false, 2),
+        () -> checkQuizSuccess(quizIds[6], "[2]", false, 2),
+        () -> checkQuizSuccess(quizIds[6], "[3]", false, 2),
+        () -> checkQuizSuccess(quizIds[6], "[0,1]", false, 2),
+        () -> checkQuizSuccess(quizIds[6], "[0,2]", false, 2),
+        () -> checkQuizSuccess(quizIds[6], "[0,3]", false, 2),
+        () -> checkQuizSuccess(quizIds[6], "[1,2]", false, 2),
+        () -> checkQuizSuccess(quizIds[6], "[1,3]", false, 2),
+        () -> checkQuizSuccess(quizIds[6], "[2,3]", false, 2),
+        () -> checkQuizSuccess(quizIds[6], "[0,1,2]", false, 2),
+        () -> checkQuizSuccess(quizIds[6], "[0,1,3]", true, 2),
+        () -> checkQuizSuccess(quizIds[6], "[1,2,3]", false, 2),
+        () -> checkQuizSuccess(quizIds[6], "[0,1,2,3]", false, 2),
+
+        () -> testAllQuizzes(7, 2),
+        () -> reloadServer(),
+        () -> testAllQuizzes(7, 2),
+        () -> checkQuizSuccess(quizIds[5], "[]", true, 1),
+        () -> checkQuizSuccess(quizIds[5], "[0]", false, 2),
+        () -> checkQuizSuccess(quizIds[6], "[0,1,2]", false, 1),
+        () -> checkQuizSuccess(quizIds[6], "[0,1,3]", true, 2),
+
+
+        // Test delete
+        () -> testDelete(quizIds[0], 1, 204),
+        () -> testDelete(quizIds[0], 1, 404),
+        () -> testQuizNotExists(0, 1, 0),
+        () -> testQuizNotExists(0, 2, 0),
+        () -> testQuizExists(1, 1),
+        () -> testQuizExists(1, 2),
+
+        () -> testDelete(quizIds[1], 1, 403),
+        () -> testDelete(quizIds[1], 1, 403),
+        () -> testDelete(quizIds[1], 2, 204),
+        () -> testDelete(quizIds[1], 2, 404),
+        () -> testDelete(quizIds[1], 1, 404),
+        () -> testQuizNotExists(0, 1, 0),
+        () -> testQuizNotExists(0, 2, 0),
+        () -> testQuizNotExists(1, 1, 0),
+        () -> testQuizNotExists(1, 2, 0),
+
+        () -> testAllQuizzes(5, 1),
+        () -> reloadServer(),
+        () -> testAllQuizzes(5, 2),
+        () -> testQuizNotExists(0, 1, 0),
+        () -> testQuizNotExists(0, 2, 0),
+        () -> testQuizNotExists(1, 1, 0),
+        () -> testQuizNotExists(1, 2, 0),
     };
 
-    private CheckResult testCreateQuiz(int quizNum) {
+    private CheckResult testRegister(String login, String password, int status) {
+        JsonObject json = new JsonObject();
+        json.addProperty("email", login);
+        json.addProperty("password", password);
+
+        String url = "/api/register";
+        HttpResponse resp = post(url, getPrettyJson(json)).send();
+
+        checkStatusCode(resp, status);
+        return CheckResult.correct();
+    }
+
+    private CheckResult testCreateQuizNoAuth(int quizNum) {
         String url = "/api/quizzes";
         HttpResponse resp = post(url, quizzes[quizNum]).send();
+        checkStatusCode(resp, 401);
+        return CheckResult.correct();
+    }
+
+    private CheckResult testCreateQuizFakeAuth(int quizNum) {
+        String url = "/api/quizzes";
+        HttpResponse resp = auth(post(url, quizzes[quizNum]), 3).send();
+        checkStatusCode(resp, 401);
+        return CheckResult.correct();
+    }
+
+    private CheckResult testSolveQuizNoAuth(int quizNum, String answerSent) {
+        String url = "/api/quizzes/" + quizNum + "/solve";
+        HttpRequest req = post(url, "{" + " \"answer\" : " + answerSent + "}");;
+        HttpResponse resp = req.send();
+        checkStatusCode(resp, 401);
+        return CheckResult.correct();
+    }
+
+    private CheckResult testSolveQuizFakeAuth(int quizNum, String answerSent) {
+        String url = "/api/quizzes/" + quizNum + "/solve";
+        HttpRequest req = post(url, "{" + " \"answer\" : " + answerSent + "}");
+        HttpResponse resp = auth(req, 3).send();
+        checkStatusCode(resp, 401);
+        return CheckResult.correct();
+    }
+
+    private CheckResult testAllQuizzesNoAuth() {
+        String url = "/api/quizzes";
+        HttpResponse resp = get(url).send();
+        checkStatusCode(resp, 401);
+        return CheckResult.correct();
+    }
+
+    private CheckResult testAllQuizzesFakeAuth() {
+        String url = "/api/quizzes";
+        HttpResponse resp = auth(get(url), 3).send();
+        checkStatusCode(resp, 401);
+        return CheckResult.correct();
+    }
+
+    private CheckResult testDeleteQuizzesNoAuth(int quizNum) {
+        String url = "/api/quizzes/" + quizNum;
+        HttpResponse resp = delete(url).send();
+        checkStatusCode(resp, 401);
+        return CheckResult.correct();
+    }
+
+    private CheckResult testDeleteQuizzesFakeAuth(int quizNum) {
+        String url = "/api/quizzes/" + quizNum;
+        HttpResponse resp = auth(delete(url), 3).send();
+        checkStatusCode(resp, 401);
+        return CheckResult.correct();
+    }
+
+    private CheckResult testCreateQuiz(int quizNum, int user) {
+        String url = "/api/quizzes";
+        HttpRequest req = post(url, quizzes[quizNum]);
+        HttpResponse resp = auth(req, user).send();
         checkStatusCode(resp, 200);
 
         expect(resp.getContent()).asJson().check(
@@ -297,13 +498,13 @@
         return CheckResult.correct();
     }
 
-    private CheckResult testQuizExists(int quizNum) {
-
+    private CheckResult testQuizExists(int quizNum, int user) {
         int quizId = quizIds[quizNum];
         String quiz = quizzes[quizNum];
 
         String url = "/api/quizzes/" + quizId;
-        HttpResponse resp = get(url).send();
+
+        HttpResponse resp = auth(get(url), user).send();
         checkStatusCode(resp, 200);
 
         JsonObject rightQuiz = getJson(quiz).getAsJsonObject();
@@ -340,19 +541,19 @@
         return CheckResult.correct();
     }
 
-    private CheckResult testQuizNotExists(int quizNum) {
+    private CheckResult testQuizNotExists(int quizNum, int user, int shift) {
         int quizId = quizIds[quizNum];
 
-        String url = "/api/quizzes/" + (quizId + 125);
-        HttpResponse resp = get(url).send();
+        String url = "/api/quizzes/" + (quizId + shift);
+        HttpResponse resp = auth(get(url), user).send();
         checkStatusCode(resp, 404);
 
         return CheckResult.correct();
     }
 
-    private CheckResult testAllQuizzes(int count) {
+    private CheckResult testAllQuizzes(int count, int user) {
         String url = "/api/quizzes";
-        HttpResponse resp = get(url).send();
+        HttpResponse resp = auth(get(url), user).send();
         checkStatusCode(resp, 200);
 
         expect(resp.getContent()).asJson().check(
@@ -362,11 +563,11 @@
         return CheckResult.correct();
     }
 
-    private CheckResult checkQuizSuccess(int quizNum, String answerSent, boolean shouldResponse) {
+    private CheckResult checkQuizSuccess(int quizNum, String answerSent, boolean shouldResponse, int user) {
         String url = "/api/quizzes/" + quizNum + "/solve";
 
         HttpRequest req = post(url, "{" + " \"answer\" : " + answerSent + "}");
-        HttpResponse resp = req.send();
+        HttpResponse resp = auth(req, user).send();
         checkStatusCode(resp, 200);
 
         expect(resp.getContent()).asJson().check(
@@ -378,10 +579,28 @@
         return CheckResult.correct();
     }
 
-    private CheckResult addIncorrectQuiz(String quiz) {
+    private CheckResult addIncorrectQuiz(String quiz, int user) {
         String url = "/api/quizzes";
-        HttpResponse resp = post(url, quiz).send();
+        HttpRequest req = post(url, quiz);
+        HttpResponse resp = auth(req, user).send();
         checkStatusCode(resp, 400);
         return CheckResult.correct();
     }
+
+    private CheckResult testDelete(int quizNum, int user, int status) {
+        String url = "/api/quizzes/" + quizNum;
+        HttpRequest req = delete(url);
+        HttpResponse resp = auth(req, user).send();
+        checkStatusCode(resp, status);
+        return CheckResult.correct();
+    }
+
+    private CheckResult reloadServer() {
+        try {
+            reloadSpring();
+        } catch (Exception ex) {
+            throw new UnexpectedError(ex.getMessage());
+        }
+        return CheckResult.correct();
+    }
 }
Index: .idea/libraries/Gradle__com_fasterxml_jackson_module_jackson_module_parameter_names_2_12_5.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__com_fasterxml_jackson_module_jackson_module_parameter_names_2_12_5.xml b/.idea/libraries/Gradle__com_fasterxml_jackson_module_jackson_module_parameter_names_2_12_5.xml
new file mode 100644
--- /dev/null	(date 1648630872431)
+++ b/.idea/libraries/Gradle__com_fasterxml_jackson_module_jackson_module_parameter_names_2_12_5.xml	(date 1648630872431)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: com.fasterxml.jackson.module:jackson-module-parameter-names:2.12.5">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.module/jackson-module-parameter-names/2.12.5/2c85c2036d0851425a260c01eb5f7ddbed1eeb00/jackson-module-parameter-names-2.12.5.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.module/jackson-module-parameter-names/2.12.5/89a31286d3a300d619dac1237a8d1f3e03538b51/jackson-module-parameter-names-2.12.5-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__com_google_code_gson_gson_2_8_8.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__com_google_code_gson_gson_2_8_8.xml b/.idea/libraries/Gradle__com_google_code_gson_gson_2_8_8.xml
new file mode 100644
--- /dev/null	(date 1648630872456)
+++ b/.idea/libraries/Gradle__com_google_code_gson_gson_2_8_8.xml	(date 1648630872456)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: com.google.code.gson:gson:2.8.8">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.google.code.gson/gson/2.8.8/431fc3cbc0ff81abdbfde070062741089c3ba874/gson-2.8.8.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.google.code.gson/gson/2.8.8/c0f02b42d0474823279fc9606a81338896d59941/gson-2.8.8-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__com_google_code_gson_gson_2_8_5.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__com_google_code_gson_gson_2_8_5.xml b/.idea/libraries/Gradle__com_google_code_gson_gson_2_8_5.xml
new file mode 100644
--- /dev/null	(date 1648630872447)
+++ b/.idea/libraries/Gradle__com_google_code_gson_gson_2_8_5.xml	(date 1648630872447)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: com.google.code.gson:gson:2.8.5">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.google.code.gson/gson/2.8.5/f645ed69d595b24d4cf8b3fbb64cc505bede8829/gson-2.8.5.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.google.code.gson/gson/2.8.5/c5b4c491aecb72e7c32a78da0b5c6b9cda8dee0f/gson-2.8.5-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__com_fasterxml_jackson_core_jackson_databind_2_12_5.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__com_fasterxml_jackson_core_jackson_databind_2_12_5.xml b/.idea/libraries/Gradle__com_fasterxml_jackson_core_jackson_databind_2_12_5.xml
new file mode 100644
--- /dev/null	(date 1648630872406)
+++ b/.idea/libraries/Gradle__com_fasterxml_jackson_core_jackson_databind_2_12_5.xml	(date 1648630872406)
@@ -0,0 +1,14 @@
+<component name="libraryTable">
+  <library name="Gradle: com.fasterxml.jackson.core:jackson-databind:2.12.5">
+    <ANNOTATIONS>
+      <root url="jar://$MAVEN_REPOSITORY$/org/jetbrains/externalAnnotations/com/fasterxml/jackson/core/jackson-databind/2.9.6-an1/jackson-databind-2.9.6-an1-annotations.zip!/" />
+    </ANNOTATIONS>
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-databind/2.12.5/b064cf057f23d3d35390328c5030847efeffedde/jackson-databind-2.12.5.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-databind/2.12.5/485c92bdef6ee7b1b2090c045dea943a9c7b8f8c/jackson-databind-2.12.5-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__com_fasterxml_jackson_core_jackson_core_2_12_5.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__com_fasterxml_jackson_core_jackson_core_2_12_5.xml b/.idea/libraries/Gradle__com_fasterxml_jackson_core_jackson_core_2_12_5.xml
new file mode 100644
--- /dev/null	(date 1648630872398)
+++ b/.idea/libraries/Gradle__com_fasterxml_jackson_core_jackson_core_2_12_5.xml	(date 1648630872398)
@@ -0,0 +1,14 @@
+<component name="libraryTable">
+  <library name="Gradle: com.fasterxml.jackson.core:jackson-core:2.12.5">
+    <ANNOTATIONS>
+      <root url="jar://$MAVEN_REPOSITORY$/org/jetbrains/externalAnnotations/com/fasterxml/jackson/core/jackson-core/2.9.6-an1/jackson-core-2.9.6-an1-annotations.zip!/" />
+    </ANNOTATIONS>
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-core/2.12.5/725e364cc71b80e60fa450bd06d75cdea7fb2d59/jackson-core-2.12.5.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-core/2.12.5/c85582cc77d4383286bad26c10ef4ed87d13e46a/jackson-core-2.12.5-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__com_fasterxml_jackson_datatype_jackson_datatype_jsr310_2_12_5.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__com_fasterxml_jackson_datatype_jackson_datatype_jsr310_2_12_5.xml b/.idea/libraries/Gradle__com_fasterxml_jackson_datatype_jackson_datatype_jsr310_2_12_5.xml
new file mode 100644
--- /dev/null	(date 1648630872424)
+++ b/.idea/libraries/Gradle__com_fasterxml_jackson_datatype_jackson_datatype_jsr310_2_12_5.xml	(date 1648630872424)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.12.5">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.datatype/jackson-datatype-jsr310/2.12.5/a0a9870b681a72789c5c6bdc380e45ab719c6aa3/jackson-datatype-jsr310-2.12.5.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.datatype/jackson-datatype-jsr310/2.12.5/14b932bd228cec2eac41a43303d4bbfb6dff9074/jackson-datatype-jsr310-2.12.5-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__com_fasterxml_jackson_datatype_jackson_datatype_jdk8_2_12_5.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__com_fasterxml_jackson_datatype_jackson_datatype_jdk8_2_12_5.xml b/.idea/libraries/Gradle__com_fasterxml_jackson_datatype_jackson_datatype_jdk8_2_12_5.xml
new file mode 100644
--- /dev/null	(date 1648630872413)
+++ b/.idea/libraries/Gradle__com_fasterxml_jackson_datatype_jackson_datatype_jdk8_2_12_5.xml	(date 1648630872413)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.12.5">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.datatype/jackson-datatype-jdk8/2.12.5/6b2f79547d217ad50dfc5b57af7444a3aa583b43/jackson-datatype-jdk8-2.12.5.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.datatype/jackson-datatype-jdk8/2.12.5/81a094853eb3f94bce4bac2f50b4cbf530f6e5fb/jackson-datatype-jdk8-2.12.5-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__junit_junit_4_12.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__junit_junit_4_12.xml b/.idea/libraries/Gradle__junit_junit_4_12.xml
new file mode 100644
--- /dev/null	(date 1648630872504)
+++ b/.idea/libraries/Gradle__junit_junit_4_12.xml	(date 1648630872504)
@@ -0,0 +1,14 @@
+<component name="libraryTable">
+  <library name="Gradle: junit:junit:4.12">
+    <ANNOTATIONS>
+      <root url="jar://$MAVEN_REPOSITORY$/org/jetbrains/externalAnnotations/junit/junit/4.12-an1/junit-4.12-an1-annotations.zip!/" />
+    </ANNOTATIONS>
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/junit/junit/4.12/2973d150c0dc1fefe998f834810d68f278ea58ec/junit-4.12.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/junit/junit/4.12/a6c32b40bf3d76eca54e3c601e5d1470c86fcdfa/junit-4.12-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__jakarta_annotation_jakarta_annotation_api_1_3_5.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__jakarta_annotation_jakarta_annotation_api_1_3_5.xml b/.idea/libraries/Gradle__jakarta_annotation_jakarta_annotation_api_1_3_5.xml
new file mode 100644
--- /dev/null	(date 1648630872495)
+++ b/.idea/libraries/Gradle__jakarta_annotation_jakarta_annotation_api_1_3_5.xml	(date 1648630872495)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: jakarta.annotation:jakarta.annotation-api:1.3.5">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/jakarta.annotation/jakarta.annotation-api/1.3.5/59eb84ee0d616332ff44aba065f3888cf002cd2d/jakarta.annotation-api-1.3.5.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/jakarta.annotation/jakarta.annotation-api/1.3.5/1ad35f11d17abb52426bfe15ea7b4c583795012/jakarta.annotation-api-1.3.5-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_apache_httpcomponents_httpclient_4_5_13.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_apache_httpcomponents_httpclient_4_5_13.xml b/.idea/libraries/Gradle__org_apache_httpcomponents_httpclient_4_5_13.xml
new file mode 100644
--- /dev/null	(date 1648630872523)
+++ b/.idea/libraries/Gradle__org_apache_httpcomponents_httpclient_4_5_13.xml	(date 1648630872523)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.apache.httpcomponents:httpclient:4.5.13">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.apache.httpcomponents/httpclient/4.5.13/e5f6cae5ca7ecaac1ec2827a9e2d65ae2869cada/httpclient-4.5.13.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.apache.httpcomponents/httpclient/4.5.13/9654e91a61d7662c36be6710ef8e720c0e3f9807/httpclient-4.5.13-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__junit_junit_4_13_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__junit_junit_4_13_2.xml b/.idea/libraries/Gradle__junit_junit_4_13_2.xml
new file mode 100644
--- /dev/null	(date 1648630872513)
+++ b/.idea/libraries/Gradle__junit_junit_4_13_2.xml	(date 1648630872513)
@@ -0,0 +1,14 @@
+<component name="libraryTable">
+  <library name="Gradle: junit:junit:4.13.2">
+    <ANNOTATIONS>
+      <root url="jar://$MAVEN_REPOSITORY$/org/jetbrains/externalAnnotations/junit/junit/4.12-an1/junit-4.12-an1-annotations.zip!/" />
+    </ANNOTATIONS>
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/junit/junit/4.13.2/8ac9e16d933b6fb43bc7f576336b8f4d7eb5ba12/junit-4.13.2.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/junit/junit/4.13.2/33987872a811fe4d4001ed494b07854822257f42/junit-4.13.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: Web Quiz Engine/task/src/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>server.port=8889\r\nmanagement.endpoints.web.exposure.include=*\r\nmanagement.endpoint.shutdown.enabled=true\r\nserver.error.include-message=always
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Web Quiz Engine/task/src/resources/application.properties b/Web Quiz Engine/task/src/resources/application.properties
--- a/Web Quiz Engine/task/src/resources/application.properties	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/Web Quiz Engine/task/src/resources/application.properties	(date 1649353232798)
@@ -1,4 +1,20 @@
 server.port=8889
 management.endpoints.web.exposure.include=*
 management.endpoint.shutdown.enabled=true
-server.error.include-message=always
\ No newline at end of file
+server.error.include-message=always
+
+#datasource settings
+spring.datasource.url=jdbc:h2:file:../quizdb
+spring.datasource.driverClassName=org.h2.Driver
+spring.datasource.username=sa
+spring.datasource.password=password
+
+#data settings
+spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
+spring.jpa.hibernate.ddl-auto=create
+
+#console settings
+spring.h2.console.enabled=true
+spring.h2.console.settings.trace=false
+spring.h2.console.settings.web-allow-others=false
+spring.jpa.show-sql=false
\ No newline at end of file
Index: .idea/libraries/Gradle__commons_codec_commons_codec_1_15.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__commons_codec_commons_codec_1_15.xml b/.idea/libraries/Gradle__commons_codec_commons_codec_1_15.xml
new file mode 100644
--- /dev/null	(date 1648630872471)
+++ b/.idea/libraries/Gradle__commons_codec_commons_codec_1_15.xml	(date 1648630872471)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: commons-codec:commons-codec:1.15">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/commons-codec/commons-codec/1.15/49d94806b6e3dc933dacbd8acb0fdbab8ebd1e5d/commons-codec-1.15.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/commons-codec/commons-codec/1.15/843bc57fd042051e994846da8167bb7ca677a6d/commons-codec-1.15-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__commons_codec_commons_codec_1_11.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__commons_codec_commons_codec_1_11.xml b/.idea/libraries/Gradle__commons_codec_commons_codec_1_11.xml
new file mode 100644
--- /dev/null	(date 1648630872464)
+++ b/.idea/libraries/Gradle__commons_codec_commons_codec_1_11.xml	(date 1648630872464)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: commons-codec:commons-codec:1.11">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/commons-codec/commons-codec/1.11/3acb4705652e16236558f0f4f2192cc33c3bd189/commons-codec-1.11.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/commons-codec/commons-codec/1.11/bce4ba84fd527950e35040b20a991c63e90e2850/commons-codec-1.11-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__io_micrometer_micrometer_core_1_7_5.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__io_micrometer_micrometer_core_1_7_5.xml b/.idea/libraries/Gradle__io_micrometer_micrometer_core_1_7_5.xml
new file mode 100644
--- /dev/null	(date 1648630872487)
+++ b/.idea/libraries/Gradle__io_micrometer_micrometer_core_1_7_5.xml	(date 1648630872487)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: io.micrometer:micrometer-core:1.7.5">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/io.micrometer/micrometer-core/1.7.5/660ac702b89180b0b902ba9e4366e1b5784823d3/micrometer-core-1.7.5.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/io.micrometer/micrometer-core/1.7.5/fb954c7e00b710255977c8f7268d1e5b572df511/micrometer-core-1.7.5-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__commons_logging_commons_logging_1_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__commons_logging_commons_logging_1_2.xml b/.idea/libraries/Gradle__commons_logging_commons_logging_1_2.xml
new file mode 100644
--- /dev/null	(date 1648630872479)
+++ b/.idea/libraries/Gradle__commons_logging_commons_logging_1_2.xml	(date 1648630872479)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: commons-logging:commons-logging:1.2">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/commons-logging/commons-logging/1.2/4bfc12adfe4842bf07b657f0369c4cb522955686/commons-logging-1.2.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/commons-logging/commons-logging/1.2/ecf26c7507d67782a3bbd148d170b31dfad001aa/commons-logging-1.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_apache_tomcat_embed_tomcat_embed_core_9_0_54.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_apache_tomcat_embed_tomcat_embed_core_9_0_54.xml b/.idea/libraries/Gradle__org_apache_tomcat_embed_tomcat_embed_core_9_0_54.xml
new file mode 100644
--- /dev/null	(date 1648630872574)
+++ b/.idea/libraries/Gradle__org_apache_tomcat_embed_tomcat_embed_core_9_0_54.xml	(date 1648630872574)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.apache.tomcat.embed:tomcat-embed-core:9.0.54">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.apache.tomcat.embed/tomcat-embed-core/9.0.54/34322c731b2394ea13681cfae0be9cd72f46f88d/tomcat-embed-core-9.0.54.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.apache.tomcat.embed/tomcat-embed-core/9.0.54/4b003d7c35336bf1e21b08b1c4a9dd2017f9f8bd/tomcat-embed-core-9.0.54-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_apache_logging_log4j_log4j_to_slf4j_2_14_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_apache_logging_log4j_log4j_to_slf4j_2_14_1.xml b/.idea/libraries/Gradle__org_apache_logging_log4j_log4j_to_slf4j_2_14_1.xml
new file mode 100644
--- /dev/null	(date 1648630872566)
+++ b/.idea/libraries/Gradle__org_apache_logging_log4j_log4j_to_slf4j_2_14_1.xml	(date 1648630872566)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.apache.logging.log4j:log4j-to-slf4j:2.14.1">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.apache.logging.log4j/log4j-to-slf4j/2.14.1/ce8a86a3f50a4304749828ce68e7478cafbc8039/log4j-to-slf4j-2.14.1.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.apache.logging.log4j/log4j-to-slf4j/2.14.1/54c937b22e4c4025c1f85482f92d4cf87b2d0972/log4j-to-slf4j-2.14.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_apache_tomcat_embed_tomcat_embed_websocket_9_0_54.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_apache_tomcat_embed_tomcat_embed_websocket_9_0_54.xml b/.idea/libraries/Gradle__org_apache_tomcat_embed_tomcat_embed_websocket_9_0_54.xml
new file mode 100644
--- /dev/null	(date 1648630872589)
+++ b/.idea/libraries/Gradle__org_apache_tomcat_embed_tomcat_embed_websocket_9_0_54.xml	(date 1648630872589)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.apache.tomcat.embed:tomcat-embed-websocket:9.0.54">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.apache.tomcat.embed/tomcat-embed-websocket/9.0.54/ae018906cecb818a8c6f2316d7b0793beadf6609/tomcat-embed-websocket-9.0.54.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.apache.tomcat.embed/tomcat-embed-websocket/9.0.54/b9e7bc34d8ee275409ae419fd4976961ad2e662/tomcat-embed-websocket-9.0.54-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_apache_tomcat_embed_tomcat_embed_el_9_0_54.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_apache_tomcat_embed_tomcat_embed_el_9_0_54.xml b/.idea/libraries/Gradle__org_apache_tomcat_embed_tomcat_embed_el_9_0_54.xml
new file mode 100644
--- /dev/null	(date 1648630872582)
+++ b/.idea/libraries/Gradle__org_apache_tomcat_embed_tomcat_embed_el_9_0_54.xml	(date 1648630872582)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.apache.tomcat.embed:tomcat-embed-el:9.0.54">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.apache.tomcat.embed/tomcat-embed-el/9.0.54/9edb062d38d0fd8a165289f44b28b3b0e0e11ed7/tomcat-embed-el-9.0.54.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.apache.tomcat.embed/tomcat-embed-el/9.0.54/837c9636988321c90007a23433ea6de84fb166e5/tomcat-embed-el-9.0.54-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_apache_httpcomponents_httpcore_4_4_11.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_apache_httpcomponents_httpcore_4_4_11.xml b/.idea/libraries/Gradle__org_apache_httpcomponents_httpcore_4_4_11.xml
new file mode 100644
--- /dev/null	(date 1648630872541)
+++ b/.idea/libraries/Gradle__org_apache_httpcomponents_httpcore_4_4_11.xml	(date 1648630872541)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.apache.httpcomponents:httpcore:4.4.11">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.apache.httpcomponents/httpcore/4.4.11/de748cf874e4e193b42eceea9fe5574fabb9d4df/httpcore-4.4.11.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.apache.httpcomponents/httpcore/4.4.11/95167d269607b358ba3ed7030ccd336dad8591a0/httpcore-4.4.11-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_apache_httpcomponents_httpclient_4_5_9.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_apache_httpcomponents_httpclient_4_5_9.xml b/.idea/libraries/Gradle__org_apache_httpcomponents_httpclient_4_5_9.xml
new file mode 100644
--- /dev/null	(date 1648630872532)
+++ b/.idea/libraries/Gradle__org_apache_httpcomponents_httpclient_4_5_9.xml	(date 1648630872532)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.apache.httpcomponents:httpclient:4.5.9">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.apache.httpcomponents/httpclient/4.5.9/a25c1be5ce99d0ce99aa43eb982868c796dd0775/httpclient-4.5.9.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.apache.httpcomponents/httpclient/4.5.9/88c1ea157c2a2aa51e24f6a916226e72a0c98e05/httpclient-4.5.9-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_apache_logging_log4j_log4j_api_2_14_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_apache_logging_log4j_log4j_api_2_14_1.xml b/.idea/libraries/Gradle__org_apache_logging_log4j_log4j_api_2_14_1.xml
new file mode 100644
--- /dev/null	(date 1648630872558)
+++ b/.idea/libraries/Gradle__org_apache_logging_log4j_log4j_api_2_14_1.xml	(date 1648630872558)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.apache.logging.log4j:log4j-api:2.14.1">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.apache.logging.log4j/log4j-api/2.14.1/cd8858fbbde69f46bce8db1152c18a43328aae78/log4j-api-2.14.1.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.apache.logging.log4j/log4j-api/2.14.1/b2327c47ca413c1ec183575b19598e281fcd74d8/log4j-api-2.14.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_apache_httpcomponents_httpcore_4_4_14.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_apache_httpcomponents_httpcore_4_4_14.xml b/.idea/libraries/Gradle__org_apache_httpcomponents_httpcore_4_4_14.xml
new file mode 100644
--- /dev/null	(date 1648630872549)
+++ b/.idea/libraries/Gradle__org_apache_httpcomponents_httpcore_4_4_14.xml	(date 1648630872549)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.apache.httpcomponents:httpcore:4.4.14">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.apache.httpcomponents/httpcore/4.4.14/9dd1a631c082d92ecd4bd8fd4cf55026c720a8c1/httpcore-4.4.14.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.apache.httpcomponents/httpcore/4.4.14/9d3e55f73fedca10282469031cf6bc3a69e36711/httpcore-4.4.14-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_easytesting_fest_util_1_2_5.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_easytesting_fest_util_1_2_5.xml b/.idea/libraries/Gradle__org_easytesting_fest_util_1_2_5.xml
new file mode 100644
--- /dev/null	(date 1648630872647)
+++ b/.idea/libraries/Gradle__org_easytesting_fest_util_1_2_5.xml	(date 1648630872647)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.easytesting:fest-util:1.2.5">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.easytesting/fest-util/1.2.5/c4a8d7305b23b8d043be12c979813b096df11f44/fest-util-1.2.5.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.easytesting/fest-util/1.2.5/51c853a963c33e146d5b4461d28e740a42483224/fest-util-1.2.5-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_easytesting_fest_reflect_1_4_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_easytesting_fest_reflect_1_4_1.xml b/.idea/libraries/Gradle__org_easytesting_fest_reflect_1_4_1.xml
new file mode 100644
--- /dev/null	(date 1648630872637)
+++ b/.idea/libraries/Gradle__org_easytesting_fest_reflect_1_4_1.xml	(date 1648630872637)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.easytesting:fest-reflect:1.4.1">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.easytesting/fest-reflect/1.4.1/2b92d5275e92a49e16c7ce6bd7e46b9080db0530/fest-reflect-1.4.1.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.easytesting/fest-reflect/1.4.1/22ddeee19a01561871ba1018bd8a3d39c099dfc4/fest-reflect-1.4.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_hamcrest_hamcrest_core_1_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_hamcrest_hamcrest_core_1_3.xml b/.idea/libraries/Gradle__org_hamcrest_hamcrest_core_1_3.xml
new file mode 100644
--- /dev/null	(date 1648630872671)
+++ b/.idea/libraries/Gradle__org_hamcrest_hamcrest_core_1_3.xml	(date 1648630872671)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.hamcrest:hamcrest-core:1.3">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.hamcrest/hamcrest-core/1.3/42a25dc3219429f0e5d060061f71acb49bf010a0/hamcrest-core-1.3.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.hamcrest/hamcrest-core/1.3/1dc37250fbc78e23a65a67fbbaf71d2e9cbc3c0b/hamcrest-core-1.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_hamcrest_hamcrest_2_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_hamcrest_hamcrest_2_2.xml b/.idea/libraries/Gradle__org_hamcrest_hamcrest_2_2.xml
new file mode 100644
--- /dev/null	(date 1648630872658)
+++ b/.idea/libraries/Gradle__org_hamcrest_hamcrest_2_2.xml	(date 1648630872658)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.hamcrest:hamcrest:2.2">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.hamcrest/hamcrest/2.2/1820c0968dba3a11a1b30669bb1f01978a91dedc/hamcrest-2.2.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.hamcrest/hamcrest/2.2/a0a13cfc629420efb587d954f982c4c6a100da25/hamcrest-2.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_assertj_assertj_core_3_19_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_assertj_assertj_core_3_19_0.xml b/.idea/libraries/Gradle__org_assertj_assertj_core_3_19_0.xml
new file mode 100644
--- /dev/null	(date 1648630872607)
+++ b/.idea/libraries/Gradle__org_assertj_assertj_core_3_19_0.xml	(date 1648630872607)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.assertj:assertj-core:3.19.0">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.assertj/assertj-core/3.19.0/f64cb5690b85e68d5e1e6c6152bfb6e3840a452d/assertj-core-3.19.0.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.assertj/assertj-core/3.19.0/9880348818f6890a6cfb6e54815fedb00de58c1a/assertj-core-3.19.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_assertj_assertj_core_3_11_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_assertj_assertj_core_3_11_1.xml b/.idea/libraries/Gradle__org_assertj_assertj_core_3_11_1.xml
new file mode 100644
--- /dev/null	(date 1648630872597)
+++ b/.idea/libraries/Gradle__org_assertj_assertj_core_3_11_1.xml	(date 1648630872597)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.assertj:assertj-core:3.11.1">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.assertj/assertj-core/3.11.1/fdac3217b804d6900fa3650f17b5cb48e620b140/assertj-core-3.11.1.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.assertj/assertj-core/3.11.1/55362d8f04018b1140c5a370057bf8cd4a63c3de/assertj-core-3.11.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_assertj_assertj_swing_junit_3_9_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_assertj_assertj_swing_junit_3_9_2.xml b/.idea/libraries/Gradle__org_assertj_assertj_swing_junit_3_9_2.xml
new file mode 100644
--- /dev/null	(date 1648630872625)
+++ b/.idea/libraries/Gradle__org_assertj_assertj_swing_junit_3_9_2.xml	(date 1648630872625)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.assertj:assertj-swing-junit:3.9.2">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.assertj/assertj-swing-junit/3.9.2/bfb268835c0e94cbe50bf0277864ff4f7467cb34/assertj-swing-junit-3.9.2.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.assertj/assertj-swing-junit/3.9.2/51d5b62e55c9b187ac86269938ad1498b4078fc5/assertj-swing-junit-3.9.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_assertj_assertj_swing_3_9_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_assertj_assertj_swing_3_9_2.xml b/.idea/libraries/Gradle__org_assertj_assertj_swing_3_9_2.xml
new file mode 100644
--- /dev/null	(date 1648630872616)
+++ b/.idea/libraries/Gradle__org_assertj_assertj_swing_3_9_2.xml	(date 1648630872616)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.assertj:assertj-swing:3.9.2">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.assertj/assertj-swing/3.9.2/92bab05e4bd4523eebfdfaa7043e24c01ccb9486/assertj-swing-3.9.2.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.assertj/assertj-swing/3.9.2/5d250aa24ceb5bd8e5fe316c7626aadb2ae0dd41/assertj-swing-3.9.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_springframework_boot_spring_boot_2_5_6.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_springframework_boot_spring_boot_2_5_6.xml b/.idea/libraries/Gradle__org_springframework_boot_spring_boot_2_5_6.xml
new file mode 100644
--- /dev/null	(date 1648630872728)
+++ b/.idea/libraries/Gradle__org_springframework_boot_spring_boot_2_5_6.xml	(date 1648630872728)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.springframework.boot:spring-boot:2.5.6">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot/2.5.6/d8c6b97fd3182fb6d7d06ebf710cd9ccabc83b89/spring-boot-2.5.6.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot/2.5.6/5ba628e0f90946b1dd464143dc35ebc0c34f2430/spring-boot-2.5.6-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_springframework_security_spring_security_core_5_5_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_springframework_security_spring_security_core_5_5_3.xml b/.idea/libraries/Gradle__org_springframework_security_spring_security_core_5_5_3.xml
new file mode 100644
--- /dev/null	(date 1649333971319)
+++ b/.idea/libraries/Gradle__org_springframework_security_spring_security_core_5_5_3.xml	(date 1649333971319)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.springframework.security:spring-security-core:5.5.3">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.security/spring-security-core/5.5.3/82152ffbb7d248e0903732c74e1578317d8dc8de/spring-security-core-5.5.3.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.security/spring-security-core/5.5.3/3235388953ffb22ae09756f912e6728d157c8ffe/spring-security-core-5.5.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_slf4j_slf4j_api_1_7_32.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_slf4j_slf4j_api_1_7_32.xml b/.idea/libraries/Gradle__org_slf4j_slf4j_api_1_7_32.xml
new file mode 100644
--- /dev/null	(date 1648630872718)
+++ b/.idea/libraries/Gradle__org_slf4j_slf4j_api_1_7_32.xml	(date 1648630872718)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.slf4j:slf4j-api:1.7.32">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.slf4j/slf4j-api/1.7.32/cdcff33940d9f2de763bc41ea05a0be5941176c3/slf4j-api-1.7.32.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.slf4j/slf4j-api/1.7.32/4381b152f738580aef4e436b2692a3db30609b26/slf4j-api-1.7.32-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_springframework_security_spring_security_config_5_5_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_springframework_security_spring_security_config_5_5_3.xml b/.idea/libraries/Gradle__org_springframework_security_spring_security_config_5_5_3.xml
new file mode 100644
--- /dev/null	(date 1649333971311)
+++ b/.idea/libraries/Gradle__org_springframework_security_spring_security_config_5_5_3.xml	(date 1649333971311)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.springframework.security:spring-security-config:5.5.3">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.security/spring-security-config/5.5.3/106b6a1af7460d64fab64ba5bbfe3f52f0eec139/spring-security-config-5.5.3.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.security/spring-security-config/5.5.3/861e20534213347486647a1823dde9a81708a75b/spring-security-config-5.5.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_springframework_boot_spring_boot_actuator_autoconfigure_2_5_6.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_springframework_boot_spring_boot_actuator_autoconfigure_2_5_6.xml b/.idea/libraries/Gradle__org_springframework_boot_spring_boot_actuator_autoconfigure_2_5_6.xml
new file mode 100644
--- /dev/null	(date 1648630872774)
+++ b/.idea/libraries/Gradle__org_springframework_boot_spring_boot_actuator_autoconfigure_2_5_6.xml	(date 1648630872774)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.springframework.boot:spring-boot-actuator-autoconfigure:2.5.6">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-actuator-autoconfigure/2.5.6/e7d19064fe5664600fbfa051277459ed94f5d266/spring-boot-actuator-autoconfigure-2.5.6.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-actuator-autoconfigure/2.5.6/c0e41892f8be5abfa30e0ce9563cf78a91cb83bc/spring-boot-actuator-autoconfigure-2.5.6-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_springframework_security_spring_security_web_5_5_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_springframework_security_spring_security_web_5_5_3.xml b/.idea/libraries/Gradle__org_springframework_security_spring_security_web_5_5_3.xml
new file mode 100644
--- /dev/null	(date 1649333971332)
+++ b/.idea/libraries/Gradle__org_springframework_security_spring_security_web_5_5_3.xml	(date 1649333971332)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.springframework.security:spring-security-web:5.5.3">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.security/spring-security-web/5.5.3/2d2b773e2af5b5984852db8857a77175ce4e1104/spring-security-web-5.5.3.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.security/spring-security-web/5.5.3/50fc484f92032e424dbbcc6bb3839405ecb9be23/spring-security-web-5.5.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_springframework_boot_spring_boot_actuator_2_5_6.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_springframework_boot_spring_boot_actuator_2_5_6.xml b/.idea/libraries/Gradle__org_springframework_boot_spring_boot_actuator_2_5_6.xml
new file mode 100644
--- /dev/null	(date 1648630872761)
+++ b/.idea/libraries/Gradle__org_springframework_boot_spring_boot_actuator_2_5_6.xml	(date 1648630872761)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.springframework.boot:spring-boot-actuator:2.5.6">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-actuator/2.5.6/4e7d2607630342ef3b50f48edbf8e938b1eb3392/spring-boot-actuator-2.5.6.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-actuator/2.5.6/db3911e8c861d5e76f24b2478a6b9ba524c317ef/spring-boot-actuator-2.5.6-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_springframework_security_spring_security_crypto_5_5_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_springframework_security_spring_security_crypto_5_5_3.xml b/.idea/libraries/Gradle__org_springframework_security_spring_security_crypto_5_5_3.xml
new file mode 100644
--- /dev/null	(date 1649333971325)
+++ b/.idea/libraries/Gradle__org_springframework_security_spring_security_crypto_5_5_3.xml	(date 1649333971325)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.springframework.security:spring-security-crypto:5.5.3">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.security/spring-security-crypto/5.5.3/45fc09a7a2484ef843a9db4652e6ff984bc2e537/spring-security-crypto-5.5.3.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.security/spring-security-crypto/5.5.3/e8b7d8f98cb8cf69aafeafbb92400c7fd50c0ee5/spring-security-crypto-5.5.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_hdrhistogram_HdrHistogram_2_1_12.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_hdrhistogram_HdrHistogram_2_1_12.xml b/.idea/libraries/Gradle__org_hdrhistogram_HdrHistogram_2_1_12.xml
new file mode 100644
--- /dev/null	(date 1648630872691)
+++ b/.idea/libraries/Gradle__org_hdrhistogram_HdrHistogram_2_1_12.xml	(date 1648630872691)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.hdrhistogram:HdrHistogram:2.1.12">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.hdrhistogram/HdrHistogram/2.1.12/6eb7552156e0d517ae80cc2247be1427c8d90452/HdrHistogram-2.1.12.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.hdrhistogram/HdrHistogram/2.1.12/d8cf7bad79ef75fd41395c5f464ea38777463d95/HdrHistogram-2.1.12-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_hamcrest_hamcrest_core_2_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_hamcrest_hamcrest_core_2_2.xml b/.idea/libraries/Gradle__org_hamcrest_hamcrest_core_2_2.xml
new file mode 100644
--- /dev/null	(date 1648630872681)
+++ b/.idea/libraries/Gradle__org_hamcrest_hamcrest_core_2_2.xml	(date 1648630872681)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.hamcrest:hamcrest-core:2.2">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.hamcrest/hamcrest-core/2.2/3f2bd07716a31c395e2837254f37f21f0f0ab24b/hamcrest-core-2.2.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.hamcrest/hamcrest-core/2.2/260c1224a39af35b0dbf85201647125f25f1b40d/hamcrest-core-2.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_security_2_5_6.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_security_2_5_6.xml b/.idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_security_2_5_6.xml
new file mode 100644
--- /dev/null	(date 1649333971304)
+++ b/.idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_security_2_5_6.xml	(date 1649333971304)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.springframework.boot:spring-boot-starter-security:2.5.6">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-security/2.5.6/af5827b9e08ea631fa213cccd1144fbdfee32896/spring-boot-starter-security-2.5.6.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-security/2.5.6/5f7241d498bbdd9de5fffce0c1038c394d9d7422/spring-boot-starter-security-2.5.6-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_slf4j_jul_to_slf4j_1_7_32.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_slf4j_jul_to_slf4j_1_7_32.xml b/.idea/libraries/Gradle__org_slf4j_jul_to_slf4j_1_7_32.xml
new file mode 100644
--- /dev/null	(date 1648630872708)
+++ b/.idea/libraries/Gradle__org_slf4j_jul_to_slf4j_1_7_32.xml	(date 1648630872708)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.slf4j:jul-to-slf4j:1.7.32">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.slf4j/jul-to-slf4j/1.7.32/8a055c04ab44e8e8326901cadf89080721348bdb/jul-to-slf4j-1.7.32.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.slf4j/jul-to-slf4j/1.7.32/d03fa92a2a508b5595b896b93f13f04bcde11171/jul-to-slf4j-1.7.32-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_latencyutils_LatencyUtils_2_0_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_latencyutils_LatencyUtils_2_0_3.xml b/.idea/libraries/Gradle__org_latencyutils_LatencyUtils_2_0_3.xml
new file mode 100644
--- /dev/null	(date 1648630872701)
+++ b/.idea/libraries/Gradle__org_latencyutils_LatencyUtils_2_0_3.xml	(date 1648630872701)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.latencyutils:LatencyUtils:2.0.3">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.latencyutils/LatencyUtils/2.0.3/769c0b82cb2421c8256300e907298a9410a2a3d3/LatencyUtils-2.0.3.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.latencyutils/LatencyUtils/2.0.3/fbc38259e2077a428984637d811dac542a6a913e/LatencyUtils-2.0.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_tomcat_2_5_6.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_tomcat_2_5_6.xml b/.idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_tomcat_2_5_6.xml
new file mode 100644
--- /dev/null	(date 1648630872842)
+++ b/.idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_tomcat_2_5_6.xml	(date 1648630872842)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.springframework.boot:spring-boot-starter-tomcat:2.5.6">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-tomcat/2.5.6/6d1a04a727d9d09b99207864ceb0a4567e53730a/spring-boot-starter-tomcat-2.5.6.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-tomcat/2.5.6/d3af77cb6c98d6b05e8e65667ad4c846470feb58/spring-boot-starter-tomcat-2.5.6-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_logging_2_5_6.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_logging_2_5_6.xml b/.idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_logging_2_5_6.xml
new file mode 100644
--- /dev/null	(date 1648630872832)
+++ b/.idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_logging_2_5_6.xml	(date 1648630872832)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.springframework.boot:spring-boot-starter-logging:2.5.6">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-logging/2.5.6/a900356a11b1a41f4277136f1d13ce7a13f43b3c/spring-boot-starter-logging-2.5.6.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-logging/2.5.6/8095453f12f2504b6b4342da4efdd1c475ed3b5a/spring-boot-starter-logging-2.5.6-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../HyperMetro/HyperMetro/task/src/metro/InputParser.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package metro.reserv;\r\n\r\nimport java.util.regex.Matcher;\r\nimport java.util.regex.Pattern;\r\n\r\npublic class InputParser {\r\n    static final String singleWord = \"[\\\\w\\\\.&-]+\";\r\n    static final String quotesSingleWord = String.format(\"\\\"%s\\\"\", singleWord);\r\n    static final String quotesManyWords = String.format(\"\\\"[%s\\\\s]+%s\\\"\", singleWord, singleWord);\r\n    static final String name = String.format(\"(%s|%s|%s)\", singleWord, quotesSingleWord, quotesManyWords);\r\n    static Pattern namePattern = Pattern.compile(name);\r\n    static Pattern quotePattern = Pattern.compile(\"\\\"\");\r\n    public String action;\r\n    public String arg1;\r\n    public String arg2;\r\n    public String arg3;\r\n    public String arg4;\r\n\r\n    public InputParser(String first, String second) {\r\n        parseInput(first, second);\r\n    }\r\n\r\n    public void parseInput(String first, String second) {\r\n        action = first;\r\n        Matcher matcher = namePattern.matcher(second);\r\n        if (matcher.find()) {\r\n            arg1 = matcher.group();\r\n            arg1 = quotePattern.matcher(arg1).replaceAll(\"\");\r\n        }\r\n        if (matcher.find()) {\r\n            arg2 = matcher.group();\r\n            arg2 = quotePattern.matcher(arg2).replaceAll(\"\");\r\n        }\r\n        if (matcher.find()) {\r\n            arg3 = matcher.group();\r\n            arg3 = quotePattern.matcher(arg3).replaceAll(\"\");\r\n        }\r\n        if (matcher.find()) {\r\n            arg4 = matcher.group();\r\n            arg4 = quotePattern.matcher(arg4).replaceAll(\"\");\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../HyperMetro/HyperMetro/task/src/metro/InputParser.java b/../HyperMetro/HyperMetro/task/src/metro/InputParser.java
--- a/../HyperMetro/HyperMetro/task/src/metro/InputParser.java	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../HyperMetro/HyperMetro/task/src/metro/InputParser.java	(date 1648366716462)
@@ -1,4 +1,4 @@
-package metro.reserv;
+package metro;
 
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
Index: .idea/libraries/Gradle__org_springframework_spring_aop_5_3_12.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_springframework_spring_aop_5_3_12.xml b/.idea/libraries/Gradle__org_springframework_spring_aop_5_3_12.xml
new file mode 100644
--- /dev/null	(date 1648630872859)
+++ b/.idea/libraries/Gradle__org_springframework_spring_aop_5_3_12.xml	(date 1648630872859)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.springframework:spring-aop:5.3.12">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework/spring-aop/5.3.12/882db41939109e96f4c78cd5c0931cc4aebc3d58/spring-aop-5.3.12.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework/spring-aop/5.3.12/e199261a82099b2f9a322fb28ebcde06283673d3/spring-aop-5.3.12-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_web_2_5_6.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_web_2_5_6.xml b/.idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_web_2_5_6.xml
new file mode 100644
--- /dev/null	(date 1648630872851)
+++ b/.idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_web_2_5_6.xml	(date 1648630872851)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.springframework.boot:spring-boot-starter-web:2.5.6">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-web/2.5.6/46b479490170914f7477b96a21241183b181c24d/spring-boot-starter-web-2.5.6.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-web/2.5.6/2180fbf02b69a2169aacc8b72c52bfd861b20c71/spring-boot-starter-web-2.5.6-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_2_5_6.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_2_5_6.xml b/.idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_2_5_6.xml
new file mode 100644
--- /dev/null	(date 1648630872798)
+++ b/.idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_2_5_6.xml	(date 1648630872798)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.springframework.boot:spring-boot-starter:2.5.6">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter/2.5.6/d5d1fada1afe9a808abf48da7066a993cf679aa/spring-boot-starter-2.5.6.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter/2.5.6/d8a43eb1bdb1846bb3ce2049344814c4b35a1ec0/spring-boot-starter-2.5.6-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_springframework_boot_spring_boot_autoconfigure_2_5_6.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_springframework_boot_spring_boot_autoconfigure_2_5_6.xml b/.idea/libraries/Gradle__org_springframework_boot_spring_boot_autoconfigure_2_5_6.xml
new file mode 100644
--- /dev/null	(date 1648630872787)
+++ b/.idea/libraries/Gradle__org_springframework_boot_spring_boot_autoconfigure_2_5_6.xml	(date 1648630872787)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.springframework.boot:spring-boot-autoconfigure:2.5.6">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-autoconfigure/2.5.6/b9f4016180c5242530da465561ff25c7cac14bf3/spring-boot-autoconfigure-2.5.6.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-autoconfigure/2.5.6/af3e783a1d3e3311a8a4cc424d1c416b23725de2/spring-boot-autoconfigure-2.5.6-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_json_2_5_6.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_json_2_5_6.xml b/.idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_json_2_5_6.xml
new file mode 100644
--- /dev/null	(date 1648630872824)
+++ b/.idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_json_2_5_6.xml	(date 1648630872824)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.springframework.boot:spring-boot-starter-json:2.5.6">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-json/2.5.6/6ef5a7087e18ed4f3736c8752440ecd489c36a4d/spring-boot-starter-json-2.5.6.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-json/2.5.6/e24e6fb63a297f77e6c2ea651582d35557e0d2c5/spring-boot-starter-json-2.5.6-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_actuator_2_5_6.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_actuator_2_5_6.xml b/.idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_actuator_2_5_6.xml
new file mode 100644
--- /dev/null	(date 1648630872813)
+++ b/.idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_actuator_2_5_6.xml	(date 1648630872813)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.springframework.boot:spring-boot-starter-actuator:2.5.6">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-actuator/2.5.6/e5057388311b3566d49ba2021673e0022da1a99c/spring-boot-starter-actuator-2.5.6.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-actuator/2.5.6/6c26686dcbefae7514404c94f5a97a5a3fcd626c/spring-boot-starter-actuator-2.5.6-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_springframework_spring_web_5_3_12.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_springframework_spring_web_5_3_12.xml b/.idea/libraries/Gradle__org_springframework_spring_web_5_3_12.xml
new file mode 100644
--- /dev/null	(date 1648630872908)
+++ b/.idea/libraries/Gradle__org_springframework_spring_web_5_3_12.xml	(date 1648630872908)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.springframework:spring-web:5.3.12">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework/spring-web/5.3.12/78991a50d17da49bddc4987a2cc8b83d46c402a7/spring-web-5.3.12.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework/spring-web/5.3.12/a7661973aef180d9c84a5b6d4fd0e8e53acc9e5f/spring-web-5.3.12-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../HyperMetro/HyperMetro/task/test/prague.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"Linka A\": {\r\n    \"1\": {\r\n      \"name\": \"Nemocnice Motol\",\r\n      \"transfer\": []\r\n    },\r\n    \"2\": {\r\n      \"name\": \"Petriny\",\r\n      \"transfer\": []\r\n    },\r\n    \"3\": {\r\n      \"name\": \"Nadrazi Veleslavin\",\r\n      \"transfer\": []\r\n    },\r\n    \"4\": {\r\n      \"name\": \"Borislavka\",\r\n      \"transfer\": []\r\n    },\r\n    \"5\": {\r\n      \"name\": \"Dejvicka\",\r\n      \"transfer\": []\r\n    },\r\n    \"6\": {\r\n      \"name\": \"Hradcanska\",\r\n      \"transfer\": []\r\n    },\r\n    \"7\": {\r\n      \"name\": \"Malostranska\",\r\n      \"transfer\": []\r\n    },\r\n    \"8\": {\r\n      \"name\": \"Staromestska\",\r\n      \"transfer\": []\r\n    },\r\n    \"9\": {\r\n      \"name\": \"Mustek\",\r\n      \"transfer\": [\r\n        {\r\n          \"line\": \"Linka B\",\r\n          \"station\": \"Mustek\"\r\n        }\r\n      ]\r\n    },\r\n    \"10\": {\r\n      \"name\": \"Muzeum\",\r\n      \"transfer\": [\r\n        {\r\n          \"line\": \"Linka C\",\r\n          \"station\": \"Muzeum\"\r\n        }\r\n      ]\r\n    },\r\n    \"11\": {\r\n      \"name\": \"Namesti Miru\",\r\n      \"transfer\": []\r\n    },\r\n    \"12\": {\r\n      \"name\": \"Jiriho z Podebrad\",\r\n      \"transfer\": []\r\n    },\r\n    \"13\": {\r\n      \"name\": \"Flora\",\r\n      \"transfer\": []\r\n    },\r\n    \"14\": {\r\n      \"name\": \"Zelivskeho\",\r\n      \"transfer\": []\r\n    },\r\n    \"15\": {\r\n      \"name\": \"Strasnicka\",\r\n      \"transfer\": []\r\n    },\r\n    \"16\": {\r\n      \"name\": \"Skalka\",\r\n      \"transfer\": []\r\n    },\r\n    \"17\": {\r\n      \"name\": \"Depo Hostivar\",\r\n      \"transfer\": []\r\n    }\r\n  },\r\n  \"Linka B\": {\r\n    \"1\": {\r\n      \"name\": \"Cerny Most\",\r\n      \"transfer\": []\r\n    },\r\n    \"2\": {\r\n      \"name\": \"Rajska zahrada\",\r\n      \"transfer\": []\r\n    },\r\n    \"3\": {\r\n      \"name\": \"Hloubetin\",\r\n      \"transfer\": []\r\n    },\r\n    \"4\": {\r\n      \"name\": \"Kolbenova\",\r\n      \"transfer\": []\r\n    },\r\n    \"5\": {\r\n      \"name\": \"Vysocanska\",\r\n      \"transfer\": []\r\n    },\r\n    \"6\": {\r\n      \"name\": \"Ceskomoravska\",\r\n      \"transfer\": []\r\n    },\r\n    \"7\": {\r\n      \"name\": \"Palmovka\",\r\n      \"transfer\": []\r\n    },\r\n    \"8\": {\r\n      \"name\": \"Invalidovna\",\r\n      \"transfer\": []\r\n    },\r\n    \"9\": {\r\n      \"name\": \"Krizikova\",\r\n      \"transfer\": []\r\n    },\r\n    \"10\": {\r\n      \"name\": \"Florenc\",\r\n      \"transfer\": [\r\n        {\r\n          \"line\": \"Linka C\",\r\n          \"station\": \"Florenc\"\r\n        }\r\n      ]\r\n    },\r\n    \"11\": {\r\n      \"name\": \"Namesti Republiky\",\r\n      \"transfer\": []\r\n    },\r\n    \"12\": {\r\n      \"name\": \"Mustek\",\r\n      \"transfer\": [\r\n        {\r\n          \"line\": \"Linka B\",\r\n          \"station\": \"Mustek\"\r\n        }\r\n      ]\r\n    },\r\n    \"13\": {\r\n      \"name\": \"Narodni trida\",\r\n      \"transfer\": []\r\n    },\r\n    \"14\": {\r\n      \"name\": \"Karlovo namesti\",\r\n      \"transfer\": []\r\n    },\r\n    \"15\": {\r\n      \"name\": \"Andel\",\r\n      \"transfer\": []\r\n    },\r\n    \"16\": {\r\n      \"name\": \"Smichovske nadrazi\",\r\n      \"transfer\": []\r\n    },\r\n    \"17\": {\r\n      \"name\": \"Radlicka\",\r\n      \"transfer\": []\r\n    },\r\n    \"18\": {\r\n      \"name\": \"Jinonice\",\r\n      \"transfer\": []\r\n    },\r\n    \"19\": {\r\n      \"name\": \"Nove Butovice\",\r\n      \"transfer\": []\r\n    },\r\n    \"20\": {\r\n      \"name\": \"Hurka\",\r\n      \"transfer\": []\r\n    },\r\n    \"21\": {\r\n      \"name\": \"Luziny\",\r\n      \"transfer\": []\r\n    },\r\n    \"22\": {\r\n      \"name\": \"Luka\",\r\n      \"transfer\": []\r\n    },\r\n    \"23\": {\r\n      \"name\": \"Stodulky\",\r\n      \"transfer\": []\r\n    },\r\n    \"24\": {\r\n      \"name\": \"Zlicin\",\r\n      \"transfer\": []\r\n    }\r\n  },\r\n  \"Linka C\": {\r\n    \"1\": {\r\n      \"name\": \"Letnany\",\r\n      \"transfer\": []\r\n    },\r\n    \"2\": {\r\n      \"name\": \"Prosek\",\r\n      \"transfer\": []\r\n    },\r\n    \"3\": {\r\n      \"name\": \"Strizkov\",\r\n      \"transfer\": []\r\n    },\r\n    \"4\": {\r\n      \"name\": \"Ladvi\",\r\n      \"transfer\": []\r\n    },\r\n    \"5\": {\r\n      \"name\": \"Kobylisy\",\r\n      \"transfer\": []\r\n    },\r\n    \"6\": {\r\n      \"name\": \"Nadrazi Holesovice\",\r\n      \"transfer\": []\r\n    },\r\n    \"7\": {\r\n      \"name\": \"Vltavska\",\r\n      \"transfer\": []\r\n    },\r\n    \"8\": {\r\n      \"name\": \"Florenc\",\r\n      \"transfer\": [\r\n        {\r\n          \"line\": \"Linka B\",\r\n          \"station\": \"Florenc\"\r\n        }\r\n      ]\r\n    },\r\n    \"9\": {\r\n      \"name\": \"Hlavni nadrazi\",\r\n      \"transfer\": []\r\n    },\r\n    \"10\": {\r\n      \"name\": \"Muzeum\",\r\n      \"transfer\": [\r\n        {\r\n          \"line\": \"Linka A\",\r\n          \"station\": \"Muzeum\"\r\n        }\r\n      ]\r\n    },\r\n    \"11\": {\r\n      \"name\": \"I.P.Pavlova\",\r\n      \"transfer\": []\r\n    },\r\n    \"12\": {\r\n      \"name\": \"Vysehrad\",\r\n      \"transfer\": []\r\n    },\r\n    \"13\": {\r\n      \"name\": \"Prazskeho povstani\",\r\n      \"transfer\": []\r\n    },\r\n    \"14\": {\r\n      \"name\": \"Pankrac\",\r\n      \"transfer\": []\r\n    },\r\n    \"15\": {\r\n      \"name\": \"Budejovicka\",\r\n      \"transfer\": []\r\n    },\r\n    \"16\": {\r\n      \"name\": \"Kacerov\",\r\n      \"transfer\": []\r\n    },\r\n    \"17\": {\r\n      \"name\": \"Roztyly\",\r\n      \"transfer\": []\r\n    },\r\n    \"18\": {\r\n      \"name\": \"Chodov\",\r\n      \"transfer\": []\r\n    },\r\n    \"19\": {\r\n      \"name\": \"Opatov\",\r\n      \"transfer\": []\r\n    },\r\n    \"20\": {\r\n      \"name\": \"Haje\",\r\n      \"transfer\": []\r\n    }\r\n  }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../HyperMetro/HyperMetro/task/test/prague.json b/../HyperMetro/HyperMetro/task/test/prague.json
--- a/../HyperMetro/HyperMetro/task/test/prague.json	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/../HyperMetro/HyperMetro/task/test/prague.json	(date 1648366589797)
@@ -1,281 +1,281 @@
 {
   "Linka A": {
     "1": {
-      "name": "Nemocnice Motol",
+      "name": "Nemocnice Motol" ,
       "transfer": []
-    },
+    } ,
     "2": {
-      "name": "Petriny",
+      "name": "Petriny" ,
       "transfer": []
-    },
+    } ,
     "3": {
-      "name": "Nadrazi Veleslavin",
+      "name": "Nadrazi Veleslavin" ,
       "transfer": []
-    },
+    } ,
     "4": {
-      "name": "Borislavka",
+      "name": "Borislavka" ,
       "transfer": []
-    },
+    } ,
     "5": {
-      "name": "Dejvicka",
+      "name": "Dejvicka" ,
       "transfer": []
-    },
+    } ,
     "6": {
-      "name": "Hradcanska",
+      "name": "Hradcanska" ,
       "transfer": []
-    },
+    } ,
     "7": {
-      "name": "Malostranska",
+      "name": "Malostranska" ,
       "transfer": []
-    },
+    } ,
     "8": {
-      "name": "Staromestska",
+      "name": "Staromestska" ,
       "transfer": []
-    },
+    } ,
     "9": {
-      "name": "Mustek",
+      "name": "Mustek" ,
       "transfer": [
         {
-          "line": "Linka B",
+          "line": "Linka B" ,
           "station": "Mustek"
         }
       ]
-    },
+    } ,
     "10": {
-      "name": "Muzeum",
+      "name": "Muzeum" ,
       "transfer": [
         {
-          "line": "Linka C",
+          "line": "Linka C" ,
           "station": "Muzeum"
         }
       ]
-    },
+    } ,
     "11": {
-      "name": "Namesti Miru",
+      "name": "Namesti Miru" ,
       "transfer": []
-    },
+    } ,
     "12": {
-      "name": "Jiriho z Podebrad",
+      "name": "Jiriho z Podebrad" ,
       "transfer": []
-    },
+    } ,
     "13": {
-      "name": "Flora",
+      "name": "Flora" ,
       "transfer": []
-    },
+    } ,
     "14": {
-      "name": "Zelivskeho",
+      "name": "Zelivskeho" ,
       "transfer": []
-    },
+    } ,
     "15": {
-      "name": "Strasnicka",
+      "name": "Strasnicka" ,
       "transfer": []
-    },
+    } ,
     "16": {
-      "name": "Skalka",
+      "name": "Skalka" ,
       "transfer": []
-    },
+    } ,
     "17": {
-      "name": "Depo Hostivar",
+      "name": "Depo Hostivar" ,
       "transfer": []
     }
-  },
+  } ,
   "Linka B": {
     "1": {
-      "name": "Cerny Most",
+      "name": "Cerny Most" ,
       "transfer": []
-    },
+    } ,
     "2": {
-      "name": "Rajska zahrada",
+      "name": "Rajska zahrada" ,
       "transfer": []
-    },
+    } ,
     "3": {
-      "name": "Hloubetin",
+      "name": "Hloubetin" ,
       "transfer": []
-    },
+    } ,
     "4": {
-      "name": "Kolbenova",
+      "name": "Kolbenova" ,
       "transfer": []
-    },
+    } ,
     "5": {
-      "name": "Vysocanska",
+      "name": "Vysocanska" ,
       "transfer": []
-    },
+    } ,
     "6": {
-      "name": "Ceskomoravska",
+      "name": "Ceskomoravska" ,
       "transfer": []
-    },
+    } ,
     "7": {
-      "name": "Palmovka",
+      "name": "Palmovka" ,
       "transfer": []
-    },
+    } ,
     "8": {
-      "name": "Invalidovna",
+      "name": "Invalidovna" ,
       "transfer": []
-    },
+    } ,
     "9": {
-      "name": "Krizikova",
+      "name": "Krizikova" ,
       "transfer": []
-    },
+    } ,
     "10": {
-      "name": "Florenc",
+      "name": "Florenc" ,
       "transfer": [
         {
-          "line": "Linka C",
+          "line": "Linka C" ,
           "station": "Florenc"
         }
       ]
-    },
+    } ,
     "11": {
-      "name": "Namesti Republiky",
+      "name": "Namesti Republiky" ,
       "transfer": []
-    },
+    } ,
     "12": {
-      "name": "Mustek",
+      "name": "Mustek" ,
       "transfer": [
         {
-          "line": "Linka B",
+          "line": "Linka B" ,
           "station": "Mustek"
         }
       ]
-    },
+    } ,
     "13": {
-      "name": "Narodni trida",
+      "name": "Narodni trida" ,
       "transfer": []
-    },
+    } ,
     "14": {
-      "name": "Karlovo namesti",
+      "name": "Karlovo namesti" ,
       "transfer": []
-    },
+    } ,
     "15": {
-      "name": "Andel",
+      "name": "Andel" ,
       "transfer": []
-    },
+    } ,
     "16": {
-      "name": "Smichovske nadrazi",
+      "name": "Smichovske nadrazi" ,
       "transfer": []
-    },
+    } ,
     "17": {
-      "name": "Radlicka",
+      "name": "Radlicka" ,
       "transfer": []
-    },
+    } ,
     "18": {
-      "name": "Jinonice",
+      "name": "Jinonice" ,
       "transfer": []
-    },
+    } ,
     "19": {
-      "name": "Nove Butovice",
+      "name": "Nove Butovice" ,
       "transfer": []
-    },
+    } ,
     "20": {
-      "name": "Hurka",
+      "name": "Hurka" ,
       "transfer": []
-    },
+    } ,
     "21": {
-      "name": "Luziny",
+      "name": "Luziny" ,
       "transfer": []
-    },
+    } ,
     "22": {
-      "name": "Luka",
+      "name": "Luka" ,
       "transfer": []
-    },
+    } ,
     "23": {
-      "name": "Stodulky",
+      "name": "Stodulky" ,
       "transfer": []
-    },
+    } ,
     "24": {
-      "name": "Zlicin",
+      "name": "Zlicin" ,
       "transfer": []
     }
-  },
+  } ,
   "Linka C": {
     "1": {
-      "name": "Letnany",
+      "name": "Letnany" ,
       "transfer": []
-    },
+    } ,
     "2": {
-      "name": "Prosek",
+      "name": "Prosek" ,
       "transfer": []
-    },
+    } ,
     "3": {
-      "name": "Strizkov",
+      "name": "Strizkov" ,
       "transfer": []
-    },
+    } ,
     "4": {
-      "name": "Ladvi",
+      "name": "Ladvi" ,
       "transfer": []
-    },
+    } ,
     "5": {
-      "name": "Kobylisy",
+      "name": "Kobylisy" ,
       "transfer": []
-    },
+    } ,
     "6": {
-      "name": "Nadrazi Holesovice",
+      "name": "Nadrazi Holesovice" ,
       "transfer": []
-    },
+    } ,
     "7": {
-      "name": "Vltavska",
+      "name": "Vltavska" ,
       "transfer": []
-    },
+    } ,
     "8": {
-      "name": "Florenc",
+      "name": "Florenc" ,
       "transfer": [
         {
-          "line": "Linka B",
+          "line": "Linka B" ,
           "station": "Florenc"
         }
       ]
-    },
+    } ,
     "9": {
-      "name": "Hlavni nadrazi",
+      "name": "Hlavni nadrazi" ,
       "transfer": []
-    },
+    } ,
     "10": {
-      "name": "Muzeum",
+      "name": "Muzeum" ,
       "transfer": [
         {
-          "line": "Linka A",
+          "line": "Linka A" ,
           "station": "Muzeum"
         }
       ]
-    },
+    } ,
     "11": {
-      "name": "I.P.Pavlova",
+      "name": "I.P.Pavlova" ,
       "transfer": []
-    },
+    } ,
     "12": {
-      "name": "Vysehrad",
+      "name": "Vysehrad" ,
       "transfer": []
-    },
+    } ,
     "13": {
-      "name": "Prazskeho povstani",
+      "name": "Prazskeho povstani" ,
       "transfer": []
-    },
+    } ,
     "14": {
-      "name": "Pankrac",
+      "name": "Pankrac" ,
       "transfer": []
-    },
+    } ,
     "15": {
-      "name": "Budejovicka",
+      "name": "Budejovicka" ,
       "transfer": []
-    },
+    } ,
     "16": {
-      "name": "Kacerov",
+      "name": "Kacerov" ,
       "transfer": []
-    },
+    } ,
     "17": {
-      "name": "Roztyly",
+      "name": "Roztyly" ,
       "transfer": []
-    },
+    } ,
     "18": {
-      "name": "Chodov",
+      "name": "Chodov" ,
       "transfer": []
-    },
+    } ,
     "19": {
-      "name": "Opatov",
+      "name": "Opatov" ,
       "transfer": []
-    },
+    } ,
     "20": {
-      "name": "Haje",
+      "name": "Haje" ,
       "transfer": []
     }
   }
Index: .idea/libraries/Gradle__org_hibernate_validator_hibernate_validator_6_2_0_Final.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_hibernate_validator_hibernate_validator_6_2_0_Final.xml b/.idea/libraries/Gradle__org_hibernate_validator_hibernate_validator_6_2_0_Final.xml
new file mode 100644
--- /dev/null	(date 1648733403094)
+++ b/.idea/libraries/Gradle__org_hibernate_validator_hibernate_validator_6_2_0_Final.xml	(date 1648733403094)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.hibernate.validator:hibernate-validator:6.2.0.Final">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.hibernate.validator/hibernate-validator/6.2.0.Final/d6b0760dfffbf379cedd02f715ff4c9a2e215921/hibernate-validator-6.2.0.Final.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.hibernate.validator/hibernate-validator/6.2.0.Final/3da5ee083a02f32cfcb0664677288c48f35c384c/hibernate-validator-6.2.0.Final-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__jakarta_validation_jakarta_validation_api_2_0_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__jakarta_validation_jakarta_validation_api_2_0_2.xml b/.idea/libraries/Gradle__jakarta_validation_jakarta_validation_api_2_0_2.xml
new file mode 100644
--- /dev/null	(date 1648733403085)
+++ b/.idea/libraries/Gradle__jakarta_validation_jakarta_validation_api_2_0_2.xml	(date 1648733403085)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: jakarta.validation:jakarta.validation-api:2.0.2">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/jakarta.validation/jakarta.validation-api/2.0.2/5eacc6522521f7eacb081f95cee1e231648461e7/jakarta.validation-api-2.0.2.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/jakarta.validation/jakarta.validation-api/2.0.2/ef429a7f3bc2d2d1784a1135668a857a6aaedf31/jakarta.validation-api-2.0.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_springframework_spring_jcl_5_3_12.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_springframework_spring_jcl_5_3_12.xml b/.idea/libraries/Gradle__org_springframework_spring_jcl_5_3_12.xml
new file mode 100644
--- /dev/null	(date 1648630872899)
+++ b/.idea/libraries/Gradle__org_springframework_spring_jcl_5_3_12.xml	(date 1648630872899)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.springframework:spring-jcl:5.3.12">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework/spring-jcl/5.3.12/2b5f5bb4a78af879bd174ceff5226da3f014ab9d/spring-jcl-5.3.12.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework/spring-jcl/5.3.12/af9f789dda89c8aa94b229bc5212c05350fcfeaa/spring-jcl-5.3.12-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_validation_2_5_6.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_validation_2_5_6.xml b/.idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_validation_2_5_6.xml
new file mode 100644
--- /dev/null	(date 1648733403112)
+++ b/.idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_validation_2_5_6.xml	(date 1648733403112)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.springframework.boot:spring-boot-starter-validation:2.5.6">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-validation/2.5.6/89f34956247743c97e16fa0dd7176743fc8dea08/spring-boot-starter-validation-2.5.6.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-validation/2.5.6/5848ce8e101da78a710189a04e21d0e8cee3a2d/spring-boot-starter-validation-2.5.6-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_yaml_snakeyaml_1_28.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_yaml_snakeyaml_1_28.xml b/.idea/libraries/Gradle__org_yaml_snakeyaml_1_28.xml
new file mode 100644
--- /dev/null	(date 1648630872932)
+++ b/.idea/libraries/Gradle__org_yaml_snakeyaml_1_28.xml	(date 1648630872932)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.yaml:snakeyaml:1.28">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.yaml/snakeyaml/1.28/7cae037c3014350c923776548e71c9feb7a69259/snakeyaml-1.28.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.yaml/snakeyaml/1.28/1df44bcfb045ca926511dae52d4857b8b3721d31/snakeyaml-1.28-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_springframework_spring_webmvc_5_3_12.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_springframework_spring_webmvc_5_3_12.xml b/.idea/libraries/Gradle__org_springframework_spring_webmvc_5_3_12.xml
new file mode 100644
--- /dev/null	(date 1648630872919)
+++ b/.idea/libraries/Gradle__org_springframework_spring_webmvc_5_3_12.xml	(date 1648630872919)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.springframework:spring-webmvc:5.3.12">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework/spring-webmvc/5.3.12/3d92ad6c28bfa5923183f328f5bfa1e39ec32714/spring-webmvc-5.3.12.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework/spring-webmvc/5.3.12/e099b2638525a5297186180067d994cedde7096d/spring-webmvc-5.3.12-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_jboss_logging_jboss_logging_3_4_2_Final.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_jboss_logging_jboss_logging_3_4_2_Final.xml b/.idea/libraries/Gradle__org_jboss_logging_jboss_logging_3_4_2_Final.xml
new file mode 100644
--- /dev/null	(date 1648733403103)
+++ b/.idea/libraries/Gradle__org_jboss_logging_jboss_logging_3_4_2_Final.xml	(date 1648733403103)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.jboss.logging:jboss-logging:3.4.2.Final">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.jboss.logging/jboss-logging/3.4.2.Final/e517b8a93dd9962ed5481345e4d262fdd47c4217/jboss-logging-3.4.2.Final.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.jboss.logging/jboss-logging/3.4.2.Final/2eb4b975abf74e3ba3c125891a5101669b431c28/jboss-logging-3.4.2.Final-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_springframework_spring_context_5_3_12.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_springframework_spring_context_5_3_12.xml b/.idea/libraries/Gradle__org_springframework_spring_context_5_3_12.xml
new file mode 100644
--- /dev/null	(date 1648630872876)
+++ b/.idea/libraries/Gradle__org_springframework_spring_context_5_3_12.xml	(date 1648630872876)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.springframework:spring-context:5.3.12">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework/spring-context/5.3.12/d5f5f044e05109b7f3337ea2cf692fd62d1ecbb6/spring-context-5.3.12.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework/spring-context/5.3.12/da0e64d7cdaf5b4d2f12dc5d137f3bbdd37ee910/spring-context-5.3.12-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_springframework_spring_beans_5_3_12.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_springframework_spring_beans_5_3_12.xml b/.idea/libraries/Gradle__org_springframework_spring_beans_5_3_12.xml
new file mode 100644
--- /dev/null	(date 1648630872868)
+++ b/.idea/libraries/Gradle__org_springframework_spring_beans_5_3_12.xml	(date 1648630872868)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.springframework:spring-beans:5.3.12">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework/spring-beans/5.3.12/caaa1d489bce88d6aa01ddd255ad5046acf8f282/spring-beans-5.3.12.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework/spring-beans/5.3.12/a3739989311241b0e49a0055103053de8741a468/spring-beans-5.3.12-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__com_fasterxml_classmate_1_5_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__com_fasterxml_classmate_1_5_1.xml b/.idea/libraries/Gradle__com_fasterxml_classmate_1_5_1.xml
new file mode 100644
--- /dev/null	(date 1648733403078)
+++ b/.idea/libraries/Gradle__com_fasterxml_classmate_1_5_1.xml	(date 1648733403078)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: com.fasterxml:classmate:1.5.1">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.fasterxml/classmate/1.5.1/3fe0bed568c62df5e89f4f174c101eab25345b6c/classmate-1.5.1.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.fasterxml/classmate/1.5.1/504edac38ff03cc5ce1d0391abb1416ffad58a99/classmate-1.5.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_springframework_spring_expression_5_3_12.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_springframework_spring_expression_5_3_12.xml b/.idea/libraries/Gradle__org_springframework_spring_expression_5_3_12.xml
new file mode 100644
--- /dev/null	(date 1648630872892)
+++ b/.idea/libraries/Gradle__org_springframework_spring_expression_5_3_12.xml	(date 1648630872892)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.springframework:spring-expression:5.3.12">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework/spring-expression/5.3.12/50c82e995b3b8e20a3f313b4356237db5a26e14a/spring-expression-5.3.12.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework/spring-expression/5.3.12/db743e717d7121fbf9347e474205d0475557bd89/spring-expression-5.3.12-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__org_springframework_spring_core_5_3_12.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__org_springframework_spring_core_5_3_12.xml b/.idea/libraries/Gradle__org_springframework_spring_core_5_3_12.xml
new file mode 100644
--- /dev/null	(date 1648630872883)
+++ b/.idea/libraries/Gradle__org_springframework_spring_core_5_3_12.xml	(date 1648630872883)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.springframework:spring-core:5.3.12">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework/spring-core/5.3.12/662e6536968246af9baa84fbac2d3eb56a04fda9/spring-core-5.3.12.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework/spring-core/5.3.12/2a7803f09827a15d58f3257d161d57f137a9813a/spring-core-5.3.12-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/jarRepositories.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/jarRepositories.xml b/.idea/jarRepositories.xml
new file mode 100644
--- /dev/null	(date 1648630872943)
+++ b/.idea/jarRepositories.xml	(date 1648630872943)
@@ -0,0 +1,25 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="RemoteRepositoriesConfiguration">
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Maven Central repository" />
+      <option name="url" value="https://repo1.maven.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="jboss.community" />
+      <option name="name" value="JBoss Community repository" />
+      <option name="url" value="https://repository.jboss.org/nexus/content/repositories/public/" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="MavenRepo" />
+      <option name="name" value="MavenRepo" />
+      <option name="url" value="https://repo.maven.apache.org/maven2/" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="maven" />
+      <option name="name" value="maven" />
+      <option name="url" value="https://jitpack.io" />
+    </remote-repository>
+  </component>
+</project>
\ No newline at end of file
Index: Web Quiz Engine/task/src/engine/Controller.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Web Quiz Engine/task/src/engine/Controller.java b/Web Quiz Engine/task/src/engine/presentation/Controller.java
rename from Web Quiz Engine/task/src/engine/Controller.java
rename to Web Quiz Engine/task/src/engine/presentation/Controller.java
--- a/Web Quiz Engine/task/src/engine/Controller.java	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/Web Quiz Engine/task/src/engine/presentation/Controller.java	(date 1649351803261)
@@ -1,44 +1,45 @@
-package engine;
+package engine.presentation;
 
+import engine.businesslayer.Quiz;
+import engine.businesslayer.services.QuizService;
 import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.http.HttpStatus;
 import org.springframework.web.bind.annotation.*;
-import org.springframework.web.server.ResponseStatusException;
 
-import java.util.ArrayList;
-import java.util.HashMap;
+import javax.validation.Valid;
 import java.util.List;
 
 @RestController
 public class Controller {
 
-
-    private List<Quiz> quizzes = new ArrayList<>();
+    @Autowired
+    QuizService quizService;
 
     @GetMapping("/api/quizzes/{id}")
-    public Quiz getQuizbyId(@PathVariable int id) {
-        for (Quiz quiz : quizzes) {
-            if(quiz.getId() == id)
-            return quiz;
-        }
-        throw  new ResponseStatusException(HttpStatus.NOT_FOUND,"No such quiz");
+    public Quiz getQuizbyId(@PathVariable Long id) {
+        return quizService.findQuizById(id);
     }
 
     @GetMapping("/api/quizzes")
     public List<Quiz> getAllquizzes() {
-        return quizzes;
+        return quizService.findAllQuiz();
     }
+
 
     @PostMapping("/api/quizzes")
-    public Quiz setQuizzes(@RequestBody Quiz quiz) {
-        quizzes.add(quiz);
-        Quiz.setIdAfterCreateList(quizzes);
+    public Quiz addQuizzes(@Valid @RequestBody Quiz quiz) {
+        quizService.saveNewQuizzes(quiz);
         return quiz;
     }
 
     @PostMapping("/api/quizzes/{id}/solve")
-    public Answer getAnswer(@PathVariable int id, @RequestParam("answer") int answer) {
-        return quizzes.get(id - 1).getAnswer() == answer ? new Answer(true, "Congratulations, you're right!") :
-                new Answer(false, "Wrong answer! Please, try again.");
+    public Answer getAnswer(@PathVariable Long id, @RequestBody Answer answer) {
+        return quizService.returnAnswer(quizService.findQuizById(id), answer);
     }
+
+
+    @DeleteMapping("/api/quizzes/{id}")
+    public void deleteQuiz(@PathVariable Long id) {
+        quizService.delete(id);
+    }
+
 }
Index: Web Quiz Engine/task/src/engine/Quiz.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Web Quiz Engine/task/src/engine/Quiz.java b/Web Quiz Engine/task/src/engine/businesslayer/Quiz.java
rename from Web Quiz Engine/task/src/engine/Quiz.java
rename to Web Quiz Engine/task/src/engine/businesslayer/Quiz.java
--- a/Web Quiz Engine/task/src/engine/Quiz.java	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/Web Quiz Engine/task/src/engine/businesslayer/Quiz.java	(date 1649352183126)
@@ -1,19 +1,39 @@
-package engine;
+package engine.businesslayer;
 
 
 import com.fasterxml.jackson.annotation.JsonIgnore;
 import com.fasterxml.jackson.annotation.JsonProperty;
 
+import javax.persistence.*;
+import javax.validation.constraints.NotBlank;
+import javax.validation.constraints.NotNull;
+import javax.validation.constraints.Size;
 import java.util.List;
-import java.util.concurrent.CopyOnWriteArrayList;
 
+@Entity
+@Table(name = "quiz")
 public class Quiz {
 
-    private int id;
+    @Id
+    @GeneratedValue(strategy = GenerationType.AUTO)
+    private Long id;
+
+    @Column
+    @NotBlank
     private String title;
+
+    @Column
+    @NotBlank
     private String text;
-    private List<String> options = new CopyOnWriteArrayList<>();
-    private int answer;
+
+    @ElementCollection
+    @NotNull
+    @Size(min = 2, max = 10)
+    private List<String> options;
+
+
+    @ElementCollection
+    private List<Integer> answer;
 
     public String getTitle() {
         return title;
@@ -40,28 +60,21 @@
     }
 
     @JsonIgnore
-    public int getAnswer() {
+    public List<Integer> getAnswer() {
         return answer;
     }
 
     @JsonProperty
-    public void setAnswer(int answer) {
+    public void setAnswer(List<Integer> answer) {
         this.answer = answer;
     }
 
-    public int getId() {
+    public Long getId() {
         return id;
     }
 
-    public void setId(int id) {
+    public void setId(Long id) {
         this.id = id;
     }
 
-    public static void setIdAfterCreateList(List<Quiz> quizzes) {
-        int count = 1;
-        for (Quiz quiz : quizzes) {
-            quiz.setId(count);
-            count++;
-        }
-    }
 }
Index: .idea/libraries/Gradle__antlr_antlr_2_7_7.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__antlr_antlr_2_7_7.xml b/.idea/libraries/Gradle__antlr_antlr_2_7_7.xml
new file mode 100644
--- /dev/null	(date 1648813961467)
+++ b/.idea/libraries/Gradle__antlr_antlr_2_7_7.xml	(date 1648813961467)
@@ -0,0 +1,9 @@
+<component name="libraryTable">
+  <library name="Gradle: antlr:antlr:2.7.7">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/antlr/antlr/2.7.7/83cd2cd674a217ade95a4bb83a8a14f351f48bd0/antlr-2.7.7.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__com_jayway_jsonpath_json_path_2_5_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__com_jayway_jsonpath_json_path_2_5_0.xml b/.idea/libraries/Gradle__com_jayway_jsonpath_json_path_2_5_0.xml
new file mode 100644
--- /dev/null	(date 1648813961483)
+++ b/.idea/libraries/Gradle__com_jayway_jsonpath_json_path_2_5_0.xml	(date 1648813961483)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: com.jayway.jsonpath:json-path:2.5.0">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.jayway.jsonpath/json-path/2.5.0/c35ef29095125b51638d19120f63e2b56eff20e9/json-path-2.5.0.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.jayway.jsonpath/json-path/2.5.0/dc46e2ab488eb8d8db263405bccd1895e68a7f1a/json-path-2.5.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__com_h2database_h2_1_4_200.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Gradle__com_h2database_h2_1_4_200.xml b/.idea/libraries/Gradle__com_h2database_h2_1_4_200.xml
new file mode 100644
--- /dev/null	(date 1648813961476)
+++ b/.idea/libraries/Gradle__com_h2database_h2_1_4_200.xml	(date 1648813961476)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: com.h2database:h2:1.4.200">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.h2database/h2/1.4.200/f7533fe7cb8e99c87a43d325a77b4b678ad9031a/h2-1.4.200.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.h2database/h2/1.4.200/3b5883b7a5a05b932c699760f0854ca565785a84/h2-1.4.200-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: Web Quiz Engine/task/build/reports/tests/test/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\r\n<meta http-equiv=\"x-ua-compatible\" content=\"IE=edge\"/>\r\n<title>Test results - Test Summary</title>\r\n<link href=\"css/base-style.css\" rel=\"stylesheet\" type=\"text/css\"/>\r\n<link href=\"css/style.css\" rel=\"stylesheet\" type=\"text/css\"/>\r\n<script src=\"js/report.js\" type=\"text/javascript\"></script>\r\n</head>\r\n<body>\r\n<div id=\"content\">\r\n<h1>Test Summary</h1>\r\n<div id=\"summary\">\r\n<table>\r\n<tr>\r\n<td>\r\n<div class=\"summaryGroup\">\r\n<table>\r\n<tr>\r\n<td>\r\n<div class=\"infoBox\" id=\"tests\">\r\n<div class=\"counter\">1</div>\r\n<p>tests</p>\r\n</div>\r\n</td>\r\n<td>\r\n<div class=\"infoBox\" id=\"failures\">\r\n<div class=\"counter\">0</div>\r\n<p>failures</p>\r\n</div>\r\n</td>\r\n<td>\r\n<div class=\"infoBox\" id=\"ignored\">\r\n<div class=\"counter\">0</div>\r\n<p>ignored</p>\r\n</div>\r\n</td>\r\n<td>\r\n<div class=\"infoBox\" id=\"duration\">\r\n<div class=\"counter\">2.986s</div>\r\n<p>duration</p>\r\n</div>\r\n</td>\r\n</tr>\r\n</table>\r\n</div>\r\n</td>\r\n<td>\r\n<div class=\"infoBox success\" id=\"successRate\">\r\n<div class=\"percent\">100%</div>\r\n<p>successful</p>\r\n</div>\r\n</td>\r\n</tr>\r\n</table>\r\n</div>\r\n<div id=\"tabs\">\r\n<ul class=\"tabLinks\">\r\n<li>\r\n<a href=\"#tab0\">Packages</a>\r\n</li>\r\n<li>\r\n<a href=\"#tab1\">Classes</a>\r\n</li>\r\n</ul>\r\n<div id=\"tab0\" class=\"tab\">\r\n<h2>Packages</h2>\r\n<table>\r\n<thead>\r\n<tr>\r\n<th>Package</th>\r\n<th>Tests</th>\r\n<th>Failures</th>\r\n<th>Ignored</th>\r\n<th>Duration</th>\r\n<th>Success rate</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td class=\"success\">\r\n<a href=\"packages/tests.html\">tests</a>\r\n</td>\r\n<td>1</td>\r\n<td>0</td>\r\n<td>0</td>\r\n<td>2.986s</td>\r\n<td class=\"success\">100%</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n<div id=\"tab1\" class=\"tab\">\r\n<h2>Classes</h2>\r\n<table>\r\n<thead>\r\n<tr>\r\n<th>Class</th>\r\n<th>Tests</th>\r\n<th>Failures</th>\r\n<th>Ignored</th>\r\n<th>Duration</th>\r\n<th>Success rate</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td class=\"success\">\r\n<a href=\"classes/tests.WebQuizEngineTest.html\">tests.WebQuizEngineTest</a>\r\n</td>\r\n<td>1</td>\r\n<td>0</td>\r\n<td>0</td>\r\n<td>2.986s</td>\r\n<td class=\"success\">100%</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<div id=\"footer\">\r\n<p>\r\n<div>\r\n<label class=\"hidden\" id=\"label-for-line-wrapping-toggle\" for=\"line-wrapping-toggle\">Wrap lines\r\n<input id=\"line-wrapping-toggle\" type=\"checkbox\" autocomplete=\"off\"/>\r\n</label>\r\n</div>Generated by \r\n<a href=\"http://www.gradle.org\">Gradle 7.3.3</a> at 31 мар. 2022 г., 14:45:46</p>\r\n</div>\r\n</div>\r\n</body>\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Web Quiz Engine/task/build/reports/tests/test/index.html b/Web Quiz Engine/task/build/reports/tests/test/index.html
--- a/Web Quiz Engine/task/build/reports/tests/test/index.html	(revision 94fc5bd4123b90e28acc71108281ddf23d36cefc)
+++ b/Web Quiz Engine/task/build/reports/tests/test/index.html	(date 1649357821637)
@@ -26,7 +26,7 @@
 </td>
 <td>
 <div class="infoBox" id="failures">
-<div class="counter">0</div>
+<div class="counter">1</div>
 <p>failures</p>
 </div>
 </td>
@@ -38,7 +38,7 @@
 </td>
 <td>
 <div class="infoBox" id="duration">
-<div class="counter">2.986s</div>
+<div class="counter">7.040s</div>
 <p>duration</p>
 </div>
 </td>
@@ -47,8 +47,8 @@
 </div>
 </td>
 <td>
-<div class="infoBox success" id="successRate">
-<div class="percent">100%</div>
+<div class="infoBox failures" id="successRate">
+<div class="percent">0%</div>
 <p>successful</p>
 </div>
 </td>
@@ -58,13 +58,25 @@
 <div id="tabs">
 <ul class="tabLinks">
 <li>
-<a href="#tab0">Packages</a>
+<a href="#tab0">Failed tests</a>
+</li>
+<li>
+<a href="#tab1">Packages</a>
 </li>
 <li>
-<a href="#tab1">Classes</a>
+<a href="#tab2">Classes</a>
 </li>
 </ul>
 <div id="tab0" class="tab">
+<h2>Failed tests</h2>
+<ul class="linkList">
+<li>
+<a href="classes/tests.WebQuizEngineTest.html">WebQuizEngineTest</a>.
+<a href="classes/tests.WebQuizEngineTest.html#start">start</a>
+</li>
+</ul>
+</div>
+<div id="tab1" class="tab">
 <h2>Packages</h2>
 <table>
 <thead>
@@ -79,19 +91,19 @@
 </thead>
 <tbody>
 <tr>
-<td class="success">
+<td class="failures">
 <a href="packages/tests.html">tests</a>
 </td>
 <td>1</td>
-<td>0</td>
+<td>1</td>
 <td>0</td>
-<td>2.986s</td>
-<td class="success">100%</td>
+<td>7.040s</td>
+<td class="failures">0%</td>
 </tr>
 </tbody>
 </table>
 </div>
-<div id="tab1" class="tab">
+<div id="tab2" class="tab">
 <h2>Classes</h2>
 <table>
 <thead>
@@ -106,14 +118,14 @@
 </thead>
 <tbody>
 <tr>
-<td class="success">
+<td class="failures">
 <a href="classes/tests.WebQuizEngineTest.html">tests.WebQuizEngineTest</a>
 </td>
 <td>1</td>
+<td>1</td>
 <td>0</td>
-<td>0</td>
-<td>2.986s</td>
-<td class="success">100%</td>
+<td>7.040s</td>
+<td class="failures">0%</td>
 </tr>
 </tbody>
 </table>
@@ -126,7 +138,7 @@
 <input id="line-wrapping-toggle" type="checkbox" autocomplete="off"/>
 </label>
 </div>Generated by 
-<a href="http://www.gradle.org">Gradle 7.3.3</a> at 31 мар. 2022 г., 14:45:46</p>
+<a href="http://www.gradle.org">Gradle 7.3.3</a> at 7 апр. 2022 г., 21:57:01</p>
 </div>
 </div>
 </body>
diff --git a/../HyperMetro/.gradle/7.1/dependencies-accessors/gc.properties b/../HyperMetro/.gradle/7.1/dependencies-accessors/gc.properties
deleted file mode 100644
diff --git a/../HyperMetro/.gradle/7.1/gc.properties b/../HyperMetro/.gradle/7.1/gc.properties
deleted file mode 100644
